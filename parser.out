Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> axioma
Rule 1     empty -> <empty>
Rule 2     axioma -> programa
Rule 3     axioma -> empty
Rule 4     programa -> bloque_programa
Rule 5     bloque_programa -> sentencia
Rule 6     bloque_programa -> sentencia bloque_programa
Rule 7     sentencia -> especial
Rule 8     sentencia -> no_especial SEMICOLON
Rule 9     especial -> condicion
Rule 10    especial -> bucle
Rule 11    especial -> funcion
Rule 12    no_especial -> expresion
Rule 13    no_especial -> declaracion
Rule 14    no_especial -> asignacion
Rule 15    no_especial -> definicion_objeto
Rule 16    expresion -> binaria
Rule 17    expresion -> unaria
Rule 18    expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE
Rule 19    binaria -> expresion PLUS expresion
Rule 20    binaria -> expresion MINUS expresion
Rule 21    binaria -> expresion TIMES expresion
Rule 22    binaria -> expresion DIV expresion
Rule 23    binaria -> expresion LT expresion
Rule 24    binaria -> expresion GT expresion
Rule 25    binaria -> expresion LE expresion
Rule 26    binaria -> expresion GE expresion
Rule 27    binaria -> expresion EQ expresion
Rule 28    binaria -> expresion CONJUNCTION expresion
Rule 29    binaria -> expresion DISJUNCTION expresion
Rule 30    unaria -> PLUS expresion
Rule 31    unaria -> MINUS expresion
Rule 32    unaria -> NEG expresion
Rule 33    expresion -> ID
Rule 34    expresion -> ENTERO
Rule 35    expresion -> BIN
Rule 36    expresion -> OCT
Rule 37    expresion -> HEX
Rule 38    expresion -> REAL
Rule 39    expresion -> NCIENT
Rule 40    expresion -> CHAR
Rule 41    expresion -> TR
Rule 42    expresion -> FL
Rule 43    expresion -> NULL
Rule 44    expresion -> function_call
Rule 45    expresion -> acceso_propiedad
Rule 46    acceso_propiedad -> ID DOT ID acceso_propiedad_rec
Rule 47    acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
Rule 48    acceso_propiedad_rec -> <empty>
Rule 49    acceso_propiedad_rec -> DOT ID acceso_propiedad_rec
Rule 50    acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
Rule 51    declaracion -> LET lista_id
Rule 52    declaracion -> LET lista_id EQUAL expresion
Rule 53    lista_id -> ID
Rule 54    lista_id -> ID COMA lista_id
Rule 55    asignacion -> lista_id EQUAL expresion
Rule 56    condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
Rule 57    otra_condicion -> <empty>
Rule 58    otra_condicion -> ELSE bloque_llaves
Rule 59    bloque_llaves -> LLAVEA bloque_programa LLAVEC
Rule 60    bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
Rule 61    tipo -> INT
Rule 62    tipo -> FLOAT
Rule 63    tipo -> CHARACTER
Rule 64    tipo -> BOOLEAN
Rule 65    tipo -> ID
Rule 66    funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
Rule 67    lista_arg -> <empty>
Rule 68    lista_arg -> lista_arg_rec
Rule 69    lista_arg_rec -> ID COLON tipo
Rule 70    lista_arg_rec -> ID COLON tipo COMA lista_arg_rec
Rule 71    function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
Rule 72    lista_param -> <empty>
Rule 73    lista_param -> lista_param_rec
Rule 74    lista_param_rec -> expresion COMA lista_param_rec
Rule 75    lista_param_rec -> expresion
Rule 76    definicion_objeto -> TYPE ID COLON ID

Terminals, with rules where they appear

BIN                  : 35
BOOLEAN              : 64
BRACKETCLOSE         : 47 50
BRACKETOPEN          : 47 50
CHAR                 : 40
CHARACTER            : 63
COLON                : 66 69 70 76
COMA                 : 54 70 74
CONJUNCTION          : 28
DISJUNCTION          : 29
DIV                  : 22
DOT                  : 46 49
ELSE                 : 58
ENTERO               : 34
EQ                   : 27
EQUAL                : 52 55
FL                   : 42
FLOAT                : 62
FUNCTION             : 66
GE                   : 26
GT                   : 24
HEX                  : 37
ID                   : 33 46 46 47 49 53 54 65 66 69 70 71 76 76
IF                   : 56
INT                  : 61
LE                   : 25
LET                  : 51 52
LLAVEA               : 59 66
LLAVEC               : 59 66
LT                   : 23
MINUS                : 20 31
NCIENT               : 39
NEG                  : 32
NULL                 : 43
OCT                  : 36
PARENTHESISCLOSE     : 18 56 60 66 71
PARENTHESISOPEN      : 18 56 60 66 71
PLUS                 : 19 30
REAL                 : 38
RETURN               : 66
SEMICOLON            : 8 66
STRING               : 47 50
TIMES                : 21
TR                   : 41
TYPE                 : 76
WHILE                : 60
error                : 

Nonterminals, with rules where they appear

acceso_propiedad     : 45
acceso_propiedad_rec : 46 47 49 50
asignacion           : 14
axioma               : 66 0
binaria              : 16
bloque_llaves        : 56 58 60
bloque_programa      : 4 6 59
bucle                : 10
condicion            : 9
declaracion          : 13
definicion_objeto    : 15
empty                : 3
especial             : 7
expresion            : 12 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 52 55 56 60 66 74 75
funcion              : 11
function_call        : 44
lista_arg            : 66
lista_arg_rec        : 68 70
lista_id             : 51 52 54 55
lista_param          : 71
lista_param_rec      : 73 74
no_especial          : 8
otra_condicion       : 56
programa             : 2
sentencia            : 5 6
tipo                 : 66 69 70
unaria               : 17

Parsing method: LALR

state 0

    (0) S' -> . axioma
    (2) axioma -> . programa
    (3) axioma -> . empty
    (4) programa -> . bloque_programa
    (1) empty -> .
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . especial
    (8) sentencia -> . no_especial SEMICOLON
    (9) especial -> . condicion
    (10) especial -> . bucle
    (11) especial -> . funcion
    (12) no_especial -> . expresion
    (13) no_especial -> . declaracion
    (14) no_especial -> . asignacion
    (15) no_especial -> . definicion_objeto
    (56) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (60) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (66) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (51) declaracion -> . LET lista_id
    (52) declaracion -> . LET lista_id EQUAL expresion
    (55) asignacion -> . lista_id EQUAL expresion
    (76) definicion_objeto -> . TYPE ID COLON ID
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
    (53) lista_id -> . ID
    (54) lista_id -> . ID COMA lista_id

    $end            reduce using rule 1 (empty -> .)
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 19
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    LET             shift and go to state 34
    TYPE            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    axioma                         shift and go to state 1
    programa                       shift and go to state 2
    empty                          shift and go to state 3
    bloque_programa                shift and go to state 4
    sentencia                      shift and go to state 5
    especial                       shift and go to state 6
    no_especial                    shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    expresion                      shift and go to state 11
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    definicion_objeto              shift and go to state 14
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33
    lista_id                       shift and go to state 35

state 1

    (0) S' -> axioma .



state 2

    (2) axioma -> programa .

    $end            reduce using rule 2 (axioma -> programa .)
    RETURN          reduce using rule 2 (axioma -> programa .)


state 3

    (3) axioma -> empty .

    $end            reduce using rule 3 (axioma -> empty .)
    RETURN          reduce using rule 3 (axioma -> empty .)


state 4

    (4) programa -> bloque_programa .

    $end            reduce using rule 4 (programa -> bloque_programa .)
    RETURN          reduce using rule 4 (programa -> bloque_programa .)


state 5

    (5) bloque_programa -> sentencia .
    (6) bloque_programa -> sentencia . bloque_programa
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . especial
    (8) sentencia -> . no_especial SEMICOLON
    (9) especial -> . condicion
    (10) especial -> . bucle
    (11) especial -> . funcion
    (12) no_especial -> . expresion
    (13) no_especial -> . declaracion
    (14) no_especial -> . asignacion
    (15) no_especial -> . definicion_objeto
    (56) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (60) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (66) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (51) declaracion -> . LET lista_id
    (52) declaracion -> . LET lista_id EQUAL expresion
    (55) asignacion -> . lista_id EQUAL expresion
    (76) definicion_objeto -> . TYPE ID COLON ID
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
    (53) lista_id -> . ID
    (54) lista_id -> . ID COMA lista_id

    $end            reduce using rule 5 (bloque_programa -> sentencia .)
    LLAVEC          reduce using rule 5 (bloque_programa -> sentencia .)
    RETURN          reduce using rule 5 (bloque_programa -> sentencia .)
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 19
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    LET             shift and go to state 34
    TYPE            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    sentencia                      shift and go to state 5
    bloque_programa                shift and go to state 40
    especial                       shift and go to state 6
    no_especial                    shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    expresion                      shift and go to state 11
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    definicion_objeto              shift and go to state 14
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33
    lista_id                       shift and go to state 35

state 6

    (7) sentencia -> especial .

    IF              reduce using rule 7 (sentencia -> especial .)
    WHILE           reduce using rule 7 (sentencia -> especial .)
    FUNCTION        reduce using rule 7 (sentencia -> especial .)
    PARENTHESISOPEN reduce using rule 7 (sentencia -> especial .)
    ID              reduce using rule 7 (sentencia -> especial .)
    ENTERO          reduce using rule 7 (sentencia -> especial .)
    BIN             reduce using rule 7 (sentencia -> especial .)
    OCT             reduce using rule 7 (sentencia -> especial .)
    HEX             reduce using rule 7 (sentencia -> especial .)
    REAL            reduce using rule 7 (sentencia -> especial .)
    NCIENT          reduce using rule 7 (sentencia -> especial .)
    CHAR            reduce using rule 7 (sentencia -> especial .)
    TR              reduce using rule 7 (sentencia -> especial .)
    FL              reduce using rule 7 (sentencia -> especial .)
    NULL            reduce using rule 7 (sentencia -> especial .)
    LET             reduce using rule 7 (sentencia -> especial .)
    TYPE            reduce using rule 7 (sentencia -> especial .)
    PLUS            reduce using rule 7 (sentencia -> especial .)
    MINUS           reduce using rule 7 (sentencia -> especial .)
    NEG             reduce using rule 7 (sentencia -> especial .)
    $end            reduce using rule 7 (sentencia -> especial .)
    LLAVEC          reduce using rule 7 (sentencia -> especial .)
    RETURN          reduce using rule 7 (sentencia -> especial .)


state 7

    (8) sentencia -> no_especial . SEMICOLON

    SEMICOLON       shift and go to state 41


state 8

    (9) especial -> condicion .

    IF              reduce using rule 9 (especial -> condicion .)
    WHILE           reduce using rule 9 (especial -> condicion .)
    FUNCTION        reduce using rule 9 (especial -> condicion .)
    PARENTHESISOPEN reduce using rule 9 (especial -> condicion .)
    ID              reduce using rule 9 (especial -> condicion .)
    ENTERO          reduce using rule 9 (especial -> condicion .)
    BIN             reduce using rule 9 (especial -> condicion .)
    OCT             reduce using rule 9 (especial -> condicion .)
    HEX             reduce using rule 9 (especial -> condicion .)
    REAL            reduce using rule 9 (especial -> condicion .)
    NCIENT          reduce using rule 9 (especial -> condicion .)
    CHAR            reduce using rule 9 (especial -> condicion .)
    TR              reduce using rule 9 (especial -> condicion .)
    FL              reduce using rule 9 (especial -> condicion .)
    NULL            reduce using rule 9 (especial -> condicion .)
    LET             reduce using rule 9 (especial -> condicion .)
    TYPE            reduce using rule 9 (especial -> condicion .)
    PLUS            reduce using rule 9 (especial -> condicion .)
    MINUS           reduce using rule 9 (especial -> condicion .)
    NEG             reduce using rule 9 (especial -> condicion .)
    $end            reduce using rule 9 (especial -> condicion .)
    LLAVEC          reduce using rule 9 (especial -> condicion .)
    RETURN          reduce using rule 9 (especial -> condicion .)


state 9

    (10) especial -> bucle .

    IF              reduce using rule 10 (especial -> bucle .)
    WHILE           reduce using rule 10 (especial -> bucle .)
    FUNCTION        reduce using rule 10 (especial -> bucle .)
    PARENTHESISOPEN reduce using rule 10 (especial -> bucle .)
    ID              reduce using rule 10 (especial -> bucle .)
    ENTERO          reduce using rule 10 (especial -> bucle .)
    BIN             reduce using rule 10 (especial -> bucle .)
    OCT             reduce using rule 10 (especial -> bucle .)
    HEX             reduce using rule 10 (especial -> bucle .)
    REAL            reduce using rule 10 (especial -> bucle .)
    NCIENT          reduce using rule 10 (especial -> bucle .)
    CHAR            reduce using rule 10 (especial -> bucle .)
    TR              reduce using rule 10 (especial -> bucle .)
    FL              reduce using rule 10 (especial -> bucle .)
    NULL            reduce using rule 10 (especial -> bucle .)
    LET             reduce using rule 10 (especial -> bucle .)
    TYPE            reduce using rule 10 (especial -> bucle .)
    PLUS            reduce using rule 10 (especial -> bucle .)
    MINUS           reduce using rule 10 (especial -> bucle .)
    NEG             reduce using rule 10 (especial -> bucle .)
    $end            reduce using rule 10 (especial -> bucle .)
    LLAVEC          reduce using rule 10 (especial -> bucle .)
    RETURN          reduce using rule 10 (especial -> bucle .)


state 10

    (11) especial -> funcion .

    IF              reduce using rule 11 (especial -> funcion .)
    WHILE           reduce using rule 11 (especial -> funcion .)
    FUNCTION        reduce using rule 11 (especial -> funcion .)
    PARENTHESISOPEN reduce using rule 11 (especial -> funcion .)
    ID              reduce using rule 11 (especial -> funcion .)
    ENTERO          reduce using rule 11 (especial -> funcion .)
    BIN             reduce using rule 11 (especial -> funcion .)
    OCT             reduce using rule 11 (especial -> funcion .)
    HEX             reduce using rule 11 (especial -> funcion .)
    REAL            reduce using rule 11 (especial -> funcion .)
    NCIENT          reduce using rule 11 (especial -> funcion .)
    CHAR            reduce using rule 11 (especial -> funcion .)
    TR              reduce using rule 11 (especial -> funcion .)
    FL              reduce using rule 11 (especial -> funcion .)
    NULL            reduce using rule 11 (especial -> funcion .)
    LET             reduce using rule 11 (especial -> funcion .)
    TYPE            reduce using rule 11 (especial -> funcion .)
    PLUS            reduce using rule 11 (especial -> funcion .)
    MINUS           reduce using rule 11 (especial -> funcion .)
    NEG             reduce using rule 11 (especial -> funcion .)
    $end            reduce using rule 11 (especial -> funcion .)
    LLAVEC          reduce using rule 11 (especial -> funcion .)
    RETURN          reduce using rule 11 (especial -> funcion .)


state 11

    (12) no_especial -> expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       reduce using rule 12 (no_especial -> expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 12

    (13) no_especial -> declaracion .

    SEMICOLON       reduce using rule 13 (no_especial -> declaracion .)


state 13

    (14) no_especial -> asignacion .

    SEMICOLON       reduce using rule 14 (no_especial -> asignacion .)


state 14

    (15) no_especial -> definicion_objeto .

    SEMICOLON       reduce using rule 15 (no_especial -> definicion_objeto .)


state 15

    (56) condicion -> IF . PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion

    PARENTHESISOPEN shift and go to state 53


state 16

    (18) expresion -> PARENTHESISOPEN . expresion PARENTHESISCLOSE
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 54
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 17

    (60) bucle -> WHILE . PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves

    PARENTHESISOPEN shift and go to state 56


state 18

    (66) funcion -> FUNCTION . ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    ID              shift and go to state 57


state 19

    (33) expresion -> ID .
    (71) function_call -> ID . PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> ID . DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
    (53) lista_id -> ID .
    (54) lista_id -> ID . COMA lista_id

    PLUS            reduce using rule 33 (expresion -> ID .)
    MINUS           reduce using rule 33 (expresion -> ID .)
    TIMES           reduce using rule 33 (expresion -> ID .)
    DIV             reduce using rule 33 (expresion -> ID .)
    LT              reduce using rule 33 (expresion -> ID .)
    GT              reduce using rule 33 (expresion -> ID .)
    LE              reduce using rule 33 (expresion -> ID .)
    GE              reduce using rule 33 (expresion -> ID .)
    EQ              reduce using rule 33 (expresion -> ID .)
    CONJUNCTION     reduce using rule 33 (expresion -> ID .)
    DISJUNCTION     reduce using rule 33 (expresion -> ID .)
    SEMICOLON       reduce using rule 33 (expresion -> ID .)
    PARENTHESISOPEN shift and go to state 58
    DOT             shift and go to state 59
    BRACKETOPEN     shift and go to state 60
    EQUAL           reduce using rule 53 (lista_id -> ID .)
    COMA            shift and go to state 61


state 20

    (16) expresion -> binaria .

    PLUS            reduce using rule 16 (expresion -> binaria .)
    MINUS           reduce using rule 16 (expresion -> binaria .)
    TIMES           reduce using rule 16 (expresion -> binaria .)
    DIV             reduce using rule 16 (expresion -> binaria .)
    LT              reduce using rule 16 (expresion -> binaria .)
    GT              reduce using rule 16 (expresion -> binaria .)
    LE              reduce using rule 16 (expresion -> binaria .)
    GE              reduce using rule 16 (expresion -> binaria .)
    EQ              reduce using rule 16 (expresion -> binaria .)
    CONJUNCTION     reduce using rule 16 (expresion -> binaria .)
    DISJUNCTION     reduce using rule 16 (expresion -> binaria .)
    SEMICOLON       reduce using rule 16 (expresion -> binaria .)
    PARENTHESISCLOSE reduce using rule 16 (expresion -> binaria .)
    COMA            reduce using rule 16 (expresion -> binaria .)


state 21

    (17) expresion -> unaria .

    PLUS            reduce using rule 17 (expresion -> unaria .)
    MINUS           reduce using rule 17 (expresion -> unaria .)
    TIMES           reduce using rule 17 (expresion -> unaria .)
    DIV             reduce using rule 17 (expresion -> unaria .)
    LT              reduce using rule 17 (expresion -> unaria .)
    GT              reduce using rule 17 (expresion -> unaria .)
    LE              reduce using rule 17 (expresion -> unaria .)
    GE              reduce using rule 17 (expresion -> unaria .)
    EQ              reduce using rule 17 (expresion -> unaria .)
    CONJUNCTION     reduce using rule 17 (expresion -> unaria .)
    DISJUNCTION     reduce using rule 17 (expresion -> unaria .)
    SEMICOLON       reduce using rule 17 (expresion -> unaria .)
    PARENTHESISCLOSE reduce using rule 17 (expresion -> unaria .)
    COMA            reduce using rule 17 (expresion -> unaria .)


state 22

    (34) expresion -> ENTERO .

    PLUS            reduce using rule 34 (expresion -> ENTERO .)
    MINUS           reduce using rule 34 (expresion -> ENTERO .)
    TIMES           reduce using rule 34 (expresion -> ENTERO .)
    DIV             reduce using rule 34 (expresion -> ENTERO .)
    LT              reduce using rule 34 (expresion -> ENTERO .)
    GT              reduce using rule 34 (expresion -> ENTERO .)
    LE              reduce using rule 34 (expresion -> ENTERO .)
    GE              reduce using rule 34 (expresion -> ENTERO .)
    EQ              reduce using rule 34 (expresion -> ENTERO .)
    CONJUNCTION     reduce using rule 34 (expresion -> ENTERO .)
    DISJUNCTION     reduce using rule 34 (expresion -> ENTERO .)
    SEMICOLON       reduce using rule 34 (expresion -> ENTERO .)
    PARENTHESISCLOSE reduce using rule 34 (expresion -> ENTERO .)
    COMA            reduce using rule 34 (expresion -> ENTERO .)


state 23

    (35) expresion -> BIN .

    PLUS            reduce using rule 35 (expresion -> BIN .)
    MINUS           reduce using rule 35 (expresion -> BIN .)
    TIMES           reduce using rule 35 (expresion -> BIN .)
    DIV             reduce using rule 35 (expresion -> BIN .)
    LT              reduce using rule 35 (expresion -> BIN .)
    GT              reduce using rule 35 (expresion -> BIN .)
    LE              reduce using rule 35 (expresion -> BIN .)
    GE              reduce using rule 35 (expresion -> BIN .)
    EQ              reduce using rule 35 (expresion -> BIN .)
    CONJUNCTION     reduce using rule 35 (expresion -> BIN .)
    DISJUNCTION     reduce using rule 35 (expresion -> BIN .)
    SEMICOLON       reduce using rule 35 (expresion -> BIN .)
    PARENTHESISCLOSE reduce using rule 35 (expresion -> BIN .)
    COMA            reduce using rule 35 (expresion -> BIN .)


state 24

    (36) expresion -> OCT .

    PLUS            reduce using rule 36 (expresion -> OCT .)
    MINUS           reduce using rule 36 (expresion -> OCT .)
    TIMES           reduce using rule 36 (expresion -> OCT .)
    DIV             reduce using rule 36 (expresion -> OCT .)
    LT              reduce using rule 36 (expresion -> OCT .)
    GT              reduce using rule 36 (expresion -> OCT .)
    LE              reduce using rule 36 (expresion -> OCT .)
    GE              reduce using rule 36 (expresion -> OCT .)
    EQ              reduce using rule 36 (expresion -> OCT .)
    CONJUNCTION     reduce using rule 36 (expresion -> OCT .)
    DISJUNCTION     reduce using rule 36 (expresion -> OCT .)
    SEMICOLON       reduce using rule 36 (expresion -> OCT .)
    PARENTHESISCLOSE reduce using rule 36 (expresion -> OCT .)
    COMA            reduce using rule 36 (expresion -> OCT .)


state 25

    (37) expresion -> HEX .

    PLUS            reduce using rule 37 (expresion -> HEX .)
    MINUS           reduce using rule 37 (expresion -> HEX .)
    TIMES           reduce using rule 37 (expresion -> HEX .)
    DIV             reduce using rule 37 (expresion -> HEX .)
    LT              reduce using rule 37 (expresion -> HEX .)
    GT              reduce using rule 37 (expresion -> HEX .)
    LE              reduce using rule 37 (expresion -> HEX .)
    GE              reduce using rule 37 (expresion -> HEX .)
    EQ              reduce using rule 37 (expresion -> HEX .)
    CONJUNCTION     reduce using rule 37 (expresion -> HEX .)
    DISJUNCTION     reduce using rule 37 (expresion -> HEX .)
    SEMICOLON       reduce using rule 37 (expresion -> HEX .)
    PARENTHESISCLOSE reduce using rule 37 (expresion -> HEX .)
    COMA            reduce using rule 37 (expresion -> HEX .)


state 26

    (38) expresion -> REAL .

    PLUS            reduce using rule 38 (expresion -> REAL .)
    MINUS           reduce using rule 38 (expresion -> REAL .)
    TIMES           reduce using rule 38 (expresion -> REAL .)
    DIV             reduce using rule 38 (expresion -> REAL .)
    LT              reduce using rule 38 (expresion -> REAL .)
    GT              reduce using rule 38 (expresion -> REAL .)
    LE              reduce using rule 38 (expresion -> REAL .)
    GE              reduce using rule 38 (expresion -> REAL .)
    EQ              reduce using rule 38 (expresion -> REAL .)
    CONJUNCTION     reduce using rule 38 (expresion -> REAL .)
    DISJUNCTION     reduce using rule 38 (expresion -> REAL .)
    SEMICOLON       reduce using rule 38 (expresion -> REAL .)
    PARENTHESISCLOSE reduce using rule 38 (expresion -> REAL .)
    COMA            reduce using rule 38 (expresion -> REAL .)


state 27

    (39) expresion -> NCIENT .

    PLUS            reduce using rule 39 (expresion -> NCIENT .)
    MINUS           reduce using rule 39 (expresion -> NCIENT .)
    TIMES           reduce using rule 39 (expresion -> NCIENT .)
    DIV             reduce using rule 39 (expresion -> NCIENT .)
    LT              reduce using rule 39 (expresion -> NCIENT .)
    GT              reduce using rule 39 (expresion -> NCIENT .)
    LE              reduce using rule 39 (expresion -> NCIENT .)
    GE              reduce using rule 39 (expresion -> NCIENT .)
    EQ              reduce using rule 39 (expresion -> NCIENT .)
    CONJUNCTION     reduce using rule 39 (expresion -> NCIENT .)
    DISJUNCTION     reduce using rule 39 (expresion -> NCIENT .)
    SEMICOLON       reduce using rule 39 (expresion -> NCIENT .)
    PARENTHESISCLOSE reduce using rule 39 (expresion -> NCIENT .)
    COMA            reduce using rule 39 (expresion -> NCIENT .)


state 28

    (40) expresion -> CHAR .

    PLUS            reduce using rule 40 (expresion -> CHAR .)
    MINUS           reduce using rule 40 (expresion -> CHAR .)
    TIMES           reduce using rule 40 (expresion -> CHAR .)
    DIV             reduce using rule 40 (expresion -> CHAR .)
    LT              reduce using rule 40 (expresion -> CHAR .)
    GT              reduce using rule 40 (expresion -> CHAR .)
    LE              reduce using rule 40 (expresion -> CHAR .)
    GE              reduce using rule 40 (expresion -> CHAR .)
    EQ              reduce using rule 40 (expresion -> CHAR .)
    CONJUNCTION     reduce using rule 40 (expresion -> CHAR .)
    DISJUNCTION     reduce using rule 40 (expresion -> CHAR .)
    SEMICOLON       reduce using rule 40 (expresion -> CHAR .)
    PARENTHESISCLOSE reduce using rule 40 (expresion -> CHAR .)
    COMA            reduce using rule 40 (expresion -> CHAR .)


state 29

    (41) expresion -> TR .

    PLUS            reduce using rule 41 (expresion -> TR .)
    MINUS           reduce using rule 41 (expresion -> TR .)
    TIMES           reduce using rule 41 (expresion -> TR .)
    DIV             reduce using rule 41 (expresion -> TR .)
    LT              reduce using rule 41 (expresion -> TR .)
    GT              reduce using rule 41 (expresion -> TR .)
    LE              reduce using rule 41 (expresion -> TR .)
    GE              reduce using rule 41 (expresion -> TR .)
    EQ              reduce using rule 41 (expresion -> TR .)
    CONJUNCTION     reduce using rule 41 (expresion -> TR .)
    DISJUNCTION     reduce using rule 41 (expresion -> TR .)
    SEMICOLON       reduce using rule 41 (expresion -> TR .)
    PARENTHESISCLOSE reduce using rule 41 (expresion -> TR .)
    COMA            reduce using rule 41 (expresion -> TR .)


state 30

    (42) expresion -> FL .

    PLUS            reduce using rule 42 (expresion -> FL .)
    MINUS           reduce using rule 42 (expresion -> FL .)
    TIMES           reduce using rule 42 (expresion -> FL .)
    DIV             reduce using rule 42 (expresion -> FL .)
    LT              reduce using rule 42 (expresion -> FL .)
    GT              reduce using rule 42 (expresion -> FL .)
    LE              reduce using rule 42 (expresion -> FL .)
    GE              reduce using rule 42 (expresion -> FL .)
    EQ              reduce using rule 42 (expresion -> FL .)
    CONJUNCTION     reduce using rule 42 (expresion -> FL .)
    DISJUNCTION     reduce using rule 42 (expresion -> FL .)
    SEMICOLON       reduce using rule 42 (expresion -> FL .)
    PARENTHESISCLOSE reduce using rule 42 (expresion -> FL .)
    COMA            reduce using rule 42 (expresion -> FL .)


state 31

    (43) expresion -> NULL .

    PLUS            reduce using rule 43 (expresion -> NULL .)
    MINUS           reduce using rule 43 (expresion -> NULL .)
    TIMES           reduce using rule 43 (expresion -> NULL .)
    DIV             reduce using rule 43 (expresion -> NULL .)
    LT              reduce using rule 43 (expresion -> NULL .)
    GT              reduce using rule 43 (expresion -> NULL .)
    LE              reduce using rule 43 (expresion -> NULL .)
    GE              reduce using rule 43 (expresion -> NULL .)
    EQ              reduce using rule 43 (expresion -> NULL .)
    CONJUNCTION     reduce using rule 43 (expresion -> NULL .)
    DISJUNCTION     reduce using rule 43 (expresion -> NULL .)
    SEMICOLON       reduce using rule 43 (expresion -> NULL .)
    PARENTHESISCLOSE reduce using rule 43 (expresion -> NULL .)
    COMA            reduce using rule 43 (expresion -> NULL .)


state 32

    (44) expresion -> function_call .

    PLUS            reduce using rule 44 (expresion -> function_call .)
    MINUS           reduce using rule 44 (expresion -> function_call .)
    TIMES           reduce using rule 44 (expresion -> function_call .)
    DIV             reduce using rule 44 (expresion -> function_call .)
    LT              reduce using rule 44 (expresion -> function_call .)
    GT              reduce using rule 44 (expresion -> function_call .)
    LE              reduce using rule 44 (expresion -> function_call .)
    GE              reduce using rule 44 (expresion -> function_call .)
    EQ              reduce using rule 44 (expresion -> function_call .)
    CONJUNCTION     reduce using rule 44 (expresion -> function_call .)
    DISJUNCTION     reduce using rule 44 (expresion -> function_call .)
    SEMICOLON       reduce using rule 44 (expresion -> function_call .)
    PARENTHESISCLOSE reduce using rule 44 (expresion -> function_call .)
    COMA            reduce using rule 44 (expresion -> function_call .)


state 33

    (45) expresion -> acceso_propiedad .

    PLUS            reduce using rule 45 (expresion -> acceso_propiedad .)
    MINUS           reduce using rule 45 (expresion -> acceso_propiedad .)
    TIMES           reduce using rule 45 (expresion -> acceso_propiedad .)
    DIV             reduce using rule 45 (expresion -> acceso_propiedad .)
    LT              reduce using rule 45 (expresion -> acceso_propiedad .)
    GT              reduce using rule 45 (expresion -> acceso_propiedad .)
    LE              reduce using rule 45 (expresion -> acceso_propiedad .)
    GE              reduce using rule 45 (expresion -> acceso_propiedad .)
    EQ              reduce using rule 45 (expresion -> acceso_propiedad .)
    CONJUNCTION     reduce using rule 45 (expresion -> acceso_propiedad .)
    DISJUNCTION     reduce using rule 45 (expresion -> acceso_propiedad .)
    SEMICOLON       reduce using rule 45 (expresion -> acceso_propiedad .)
    PARENTHESISCLOSE reduce using rule 45 (expresion -> acceso_propiedad .)
    COMA            reduce using rule 45 (expresion -> acceso_propiedad .)


state 34

    (51) declaracion -> LET . lista_id
    (52) declaracion -> LET . lista_id EQUAL expresion
    (53) lista_id -> . ID
    (54) lista_id -> . ID COMA lista_id

    ID              shift and go to state 63

    lista_id                       shift and go to state 62

state 35

    (55) asignacion -> lista_id . EQUAL expresion

    EQUAL           shift and go to state 64


state 36

    (76) definicion_objeto -> TYPE . ID COLON ID

    ID              shift and go to state 65


state 37

    (30) unaria -> PLUS . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 66
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 38

    (31) unaria -> MINUS . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 67
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 39

    (32) unaria -> NEG . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 68
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 40

    (6) bloque_programa -> sentencia bloque_programa .

    $end            reduce using rule 6 (bloque_programa -> sentencia bloque_programa .)
    LLAVEC          reduce using rule 6 (bloque_programa -> sentencia bloque_programa .)
    RETURN          reduce using rule 6 (bloque_programa -> sentencia bloque_programa .)


state 41

    (8) sentencia -> no_especial SEMICOLON .

    IF              reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    WHILE           reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    FUNCTION        reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    PARENTHESISOPEN reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    ID              reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    ENTERO          reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    BIN             reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    OCT             reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    HEX             reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    REAL            reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    NCIENT          reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    CHAR            reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    TR              reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    FL              reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    NULL            reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    LET             reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    TYPE            reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    PLUS            reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    MINUS           reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    NEG             reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    $end            reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    LLAVEC          reduce using rule 8 (sentencia -> no_especial SEMICOLON .)
    RETURN          reduce using rule 8 (sentencia -> no_especial SEMICOLON .)


state 42

    (19) binaria -> expresion PLUS . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 69
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 43

    (20) binaria -> expresion MINUS . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 70
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 44

    (21) binaria -> expresion TIMES . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 71
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 45

    (22) binaria -> expresion DIV . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 72
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 46

    (23) binaria -> expresion LT . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 73
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 47

    (24) binaria -> expresion GT . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 74
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 48

    (25) binaria -> expresion LE . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 75
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 49

    (26) binaria -> expresion GE . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 76
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 50

    (27) binaria -> expresion EQ . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 77
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 51

    (28) binaria -> expresion CONJUNCTION . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 78
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 52

    (29) binaria -> expresion DISJUNCTION . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 79
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 53

    (56) condicion -> IF PARENTHESISOPEN . expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 80
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 54

    (18) expresion -> PARENTHESISOPEN expresion . PARENTHESISCLOSE
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PARENTHESISCLOSE shift and go to state 81
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 55

    (33) expresion -> ID .
    (71) function_call -> ID . PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> ID . DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISCLOSE reduce using rule 33 (expresion -> ID .)
    PLUS            reduce using rule 33 (expresion -> ID .)
    MINUS           reduce using rule 33 (expresion -> ID .)
    TIMES           reduce using rule 33 (expresion -> ID .)
    DIV             reduce using rule 33 (expresion -> ID .)
    LT              reduce using rule 33 (expresion -> ID .)
    GT              reduce using rule 33 (expresion -> ID .)
    LE              reduce using rule 33 (expresion -> ID .)
    GE              reduce using rule 33 (expresion -> ID .)
    EQ              reduce using rule 33 (expresion -> ID .)
    CONJUNCTION     reduce using rule 33 (expresion -> ID .)
    DISJUNCTION     reduce using rule 33 (expresion -> ID .)
    SEMICOLON       reduce using rule 33 (expresion -> ID .)
    COMA            reduce using rule 33 (expresion -> ID .)
    PARENTHESISOPEN shift and go to state 58
    DOT             shift and go to state 59
    BRACKETOPEN     shift and go to state 60


state 56

    (60) bucle -> WHILE PARENTHESISOPEN . expresion PARENTHESISCLOSE bloque_llaves
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 82
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 57

    (66) funcion -> FUNCTION ID . PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    PARENTHESISOPEN shift and go to state 83


state 58

    (71) function_call -> ID PARENTHESISOPEN . lista_param PARENTHESISCLOSE
    (72) lista_param -> .
    (73) lista_param -> . lista_param_rec
    (74) lista_param_rec -> . expresion COMA lista_param_rec
    (75) lista_param_rec -> . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISCLOSE reduce using rule 72 (lista_param -> .)
    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    lista_param                    shift and go to state 84
    lista_param_rec                shift and go to state 85
    expresion                      shift and go to state 86
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 59

    (46) acceso_propiedad -> ID DOT . ID acceso_propiedad_rec

    ID              shift and go to state 87


state 60

    (47) acceso_propiedad -> ID BRACKETOPEN . STRING BRACKETCLOSE acceso_propiedad_rec

    STRING          shift and go to state 88


state 61

    (54) lista_id -> ID COMA . lista_id
    (53) lista_id -> . ID
    (54) lista_id -> . ID COMA lista_id

    ID              shift and go to state 63

    lista_id                       shift and go to state 89

state 62

    (51) declaracion -> LET lista_id .
    (52) declaracion -> LET lista_id . EQUAL expresion

    SEMICOLON       reduce using rule 51 (declaracion -> LET lista_id .)
    EQUAL           shift and go to state 90


state 63

    (53) lista_id -> ID .
    (54) lista_id -> ID . COMA lista_id

    EQUAL           reduce using rule 53 (lista_id -> ID .)
    SEMICOLON       reduce using rule 53 (lista_id -> ID .)
    COMA            shift and go to state 61


state 64

    (55) asignacion -> lista_id EQUAL . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 91
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 65

    (76) definicion_objeto -> TYPE ID . COLON ID

    COLON           shift and go to state 92


state 66

    (30) unaria -> PLUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 30 (unaria -> PLUS expresion .)
    MINUS           reduce using rule 30 (unaria -> PLUS expresion .)
    TIMES           reduce using rule 30 (unaria -> PLUS expresion .)
    DIV             reduce using rule 30 (unaria -> PLUS expresion .)
    LT              reduce using rule 30 (unaria -> PLUS expresion .)
    GT              reduce using rule 30 (unaria -> PLUS expresion .)
    LE              reduce using rule 30 (unaria -> PLUS expresion .)
    GE              reduce using rule 30 (unaria -> PLUS expresion .)
    EQ              reduce using rule 30 (unaria -> PLUS expresion .)
    CONJUNCTION     reduce using rule 30 (unaria -> PLUS expresion .)
    DISJUNCTION     reduce using rule 30 (unaria -> PLUS expresion .)
    SEMICOLON       reduce using rule 30 (unaria -> PLUS expresion .)
    PARENTHESISCLOSE reduce using rule 30 (unaria -> PLUS expresion .)
    COMA            reduce using rule 30 (unaria -> PLUS expresion .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 67

    (31) unaria -> MINUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 31 (unaria -> MINUS expresion .)
    MINUS           reduce using rule 31 (unaria -> MINUS expresion .)
    TIMES           reduce using rule 31 (unaria -> MINUS expresion .)
    DIV             reduce using rule 31 (unaria -> MINUS expresion .)
    LT              reduce using rule 31 (unaria -> MINUS expresion .)
    GT              reduce using rule 31 (unaria -> MINUS expresion .)
    LE              reduce using rule 31 (unaria -> MINUS expresion .)
    GE              reduce using rule 31 (unaria -> MINUS expresion .)
    EQ              reduce using rule 31 (unaria -> MINUS expresion .)
    CONJUNCTION     reduce using rule 31 (unaria -> MINUS expresion .)
    DISJUNCTION     reduce using rule 31 (unaria -> MINUS expresion .)
    SEMICOLON       reduce using rule 31 (unaria -> MINUS expresion .)
    PARENTHESISCLOSE reduce using rule 31 (unaria -> MINUS expresion .)
    COMA            reduce using rule 31 (unaria -> MINUS expresion .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 68

    (32) unaria -> NEG expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 32 (unaria -> NEG expresion .)
    MINUS           reduce using rule 32 (unaria -> NEG expresion .)
    TIMES           reduce using rule 32 (unaria -> NEG expresion .)
    DIV             reduce using rule 32 (unaria -> NEG expresion .)
    LT              reduce using rule 32 (unaria -> NEG expresion .)
    GT              reduce using rule 32 (unaria -> NEG expresion .)
    LE              reduce using rule 32 (unaria -> NEG expresion .)
    GE              reduce using rule 32 (unaria -> NEG expresion .)
    EQ              reduce using rule 32 (unaria -> NEG expresion .)
    CONJUNCTION     reduce using rule 32 (unaria -> NEG expresion .)
    DISJUNCTION     reduce using rule 32 (unaria -> NEG expresion .)
    SEMICOLON       reduce using rule 32 (unaria -> NEG expresion .)
    PARENTHESISCLOSE reduce using rule 32 (unaria -> NEG expresion .)
    COMA            reduce using rule 32 (unaria -> NEG expresion .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 69

    (19) binaria -> expresion PLUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 19 (binaria -> expresion PLUS expresion .)
    MINUS           reduce using rule 19 (binaria -> expresion PLUS expresion .)
    LT              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    GT              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    LE              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    GE              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    EQ              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    CONJUNCTION     reduce using rule 19 (binaria -> expresion PLUS expresion .)
    DISJUNCTION     reduce using rule 19 (binaria -> expresion PLUS expresion .)
    SEMICOLON       reduce using rule 19 (binaria -> expresion PLUS expresion .)
    PARENTHESISCLOSE reduce using rule 19 (binaria -> expresion PLUS expresion .)
    COMA            reduce using rule 19 (binaria -> expresion PLUS expresion .)
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! TIMES           [ reduce using rule 19 (binaria -> expresion PLUS expresion .) ]
  ! DIV             [ reduce using rule 19 (binaria -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 70

    (20) binaria -> expresion MINUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 20 (binaria -> expresion MINUS expresion .)
    MINUS           reduce using rule 20 (binaria -> expresion MINUS expresion .)
    LT              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    GT              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    LE              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    GE              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    EQ              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    CONJUNCTION     reduce using rule 20 (binaria -> expresion MINUS expresion .)
    DISJUNCTION     reduce using rule 20 (binaria -> expresion MINUS expresion .)
    SEMICOLON       reduce using rule 20 (binaria -> expresion MINUS expresion .)
    PARENTHESISCLOSE reduce using rule 20 (binaria -> expresion MINUS expresion .)
    COMA            reduce using rule 20 (binaria -> expresion MINUS expresion .)
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! TIMES           [ reduce using rule 20 (binaria -> expresion MINUS expresion .) ]
  ! DIV             [ reduce using rule 20 (binaria -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 71

    (21) binaria -> expresion TIMES expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 21 (binaria -> expresion TIMES expresion .)
    MINUS           reduce using rule 21 (binaria -> expresion TIMES expresion .)
    TIMES           reduce using rule 21 (binaria -> expresion TIMES expresion .)
    DIV             reduce using rule 21 (binaria -> expresion TIMES expresion .)
    LT              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    GT              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    LE              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    GE              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    EQ              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    CONJUNCTION     reduce using rule 21 (binaria -> expresion TIMES expresion .)
    DISJUNCTION     reduce using rule 21 (binaria -> expresion TIMES expresion .)
    SEMICOLON       reduce using rule 21 (binaria -> expresion TIMES expresion .)
    PARENTHESISCLOSE reduce using rule 21 (binaria -> expresion TIMES expresion .)
    COMA            reduce using rule 21 (binaria -> expresion TIMES expresion .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 72

    (22) binaria -> expresion DIV expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 22 (binaria -> expresion DIV expresion .)
    MINUS           reduce using rule 22 (binaria -> expresion DIV expresion .)
    TIMES           reduce using rule 22 (binaria -> expresion DIV expresion .)
    DIV             reduce using rule 22 (binaria -> expresion DIV expresion .)
    LT              reduce using rule 22 (binaria -> expresion DIV expresion .)
    GT              reduce using rule 22 (binaria -> expresion DIV expresion .)
    LE              reduce using rule 22 (binaria -> expresion DIV expresion .)
    GE              reduce using rule 22 (binaria -> expresion DIV expresion .)
    EQ              reduce using rule 22 (binaria -> expresion DIV expresion .)
    CONJUNCTION     reduce using rule 22 (binaria -> expresion DIV expresion .)
    DISJUNCTION     reduce using rule 22 (binaria -> expresion DIV expresion .)
    SEMICOLON       reduce using rule 22 (binaria -> expresion DIV expresion .)
    PARENTHESISCLOSE reduce using rule 22 (binaria -> expresion DIV expresion .)
    COMA            reduce using rule 22 (binaria -> expresion DIV expresion .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 73

    (23) binaria -> expresion LT expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 23 (binaria -> expresion LT expresion .)
    GT              reduce using rule 23 (binaria -> expresion LT expresion .)
    LE              reduce using rule 23 (binaria -> expresion LT expresion .)
    GE              reduce using rule 23 (binaria -> expresion LT expresion .)
    EQ              reduce using rule 23 (binaria -> expresion LT expresion .)
    CONJUNCTION     reduce using rule 23 (binaria -> expresion LT expresion .)
    DISJUNCTION     reduce using rule 23 (binaria -> expresion LT expresion .)
    SEMICOLON       reduce using rule 23 (binaria -> expresion LT expresion .)
    PARENTHESISCLOSE reduce using rule 23 (binaria -> expresion LT expresion .)
    COMA            reduce using rule 23 (binaria -> expresion LT expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! PLUS            [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! MINUS           [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! TIMES           [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! DIV             [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 74

    (24) binaria -> expresion GT expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 24 (binaria -> expresion GT expresion .)
    GT              reduce using rule 24 (binaria -> expresion GT expresion .)
    LE              reduce using rule 24 (binaria -> expresion GT expresion .)
    GE              reduce using rule 24 (binaria -> expresion GT expresion .)
    EQ              reduce using rule 24 (binaria -> expresion GT expresion .)
    CONJUNCTION     reduce using rule 24 (binaria -> expresion GT expresion .)
    DISJUNCTION     reduce using rule 24 (binaria -> expresion GT expresion .)
    SEMICOLON       reduce using rule 24 (binaria -> expresion GT expresion .)
    PARENTHESISCLOSE reduce using rule 24 (binaria -> expresion GT expresion .)
    COMA            reduce using rule 24 (binaria -> expresion GT expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! PLUS            [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! MINUS           [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! TIMES           [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! DIV             [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 75

    (25) binaria -> expresion LE expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 25 (binaria -> expresion LE expresion .)
    GT              reduce using rule 25 (binaria -> expresion LE expresion .)
    LE              reduce using rule 25 (binaria -> expresion LE expresion .)
    GE              reduce using rule 25 (binaria -> expresion LE expresion .)
    EQ              reduce using rule 25 (binaria -> expresion LE expresion .)
    CONJUNCTION     reduce using rule 25 (binaria -> expresion LE expresion .)
    DISJUNCTION     reduce using rule 25 (binaria -> expresion LE expresion .)
    SEMICOLON       reduce using rule 25 (binaria -> expresion LE expresion .)
    PARENTHESISCLOSE reduce using rule 25 (binaria -> expresion LE expresion .)
    COMA            reduce using rule 25 (binaria -> expresion LE expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! PLUS            [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! MINUS           [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! TIMES           [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! DIV             [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 76

    (26) binaria -> expresion GE expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 26 (binaria -> expresion GE expresion .)
    GT              reduce using rule 26 (binaria -> expresion GE expresion .)
    LE              reduce using rule 26 (binaria -> expresion GE expresion .)
    GE              reduce using rule 26 (binaria -> expresion GE expresion .)
    EQ              reduce using rule 26 (binaria -> expresion GE expresion .)
    CONJUNCTION     reduce using rule 26 (binaria -> expresion GE expresion .)
    DISJUNCTION     reduce using rule 26 (binaria -> expresion GE expresion .)
    SEMICOLON       reduce using rule 26 (binaria -> expresion GE expresion .)
    PARENTHESISCLOSE reduce using rule 26 (binaria -> expresion GE expresion .)
    COMA            reduce using rule 26 (binaria -> expresion GE expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! PLUS            [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! MINUS           [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! TIMES           [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! DIV             [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 77

    (27) binaria -> expresion EQ expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 27 (binaria -> expresion EQ expresion .)
    GT              reduce using rule 27 (binaria -> expresion EQ expresion .)
    LE              reduce using rule 27 (binaria -> expresion EQ expresion .)
    GE              reduce using rule 27 (binaria -> expresion EQ expresion .)
    EQ              reduce using rule 27 (binaria -> expresion EQ expresion .)
    CONJUNCTION     reduce using rule 27 (binaria -> expresion EQ expresion .)
    DISJUNCTION     reduce using rule 27 (binaria -> expresion EQ expresion .)
    SEMICOLON       reduce using rule 27 (binaria -> expresion EQ expresion .)
    PARENTHESISCLOSE reduce using rule 27 (binaria -> expresion EQ expresion .)
    COMA            reduce using rule 27 (binaria -> expresion EQ expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45

  ! PLUS            [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! MINUS           [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! TIMES           [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! DIV             [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! LT              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! LE              [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! EQ              [ shift and go to state 50 ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 78

    (28) binaria -> expresion CONJUNCTION expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    CONJUNCTION     reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    DISJUNCTION     reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    SEMICOLON       reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    PARENTHESISCLOSE reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    COMA            reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50

  ! PLUS            [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! MINUS           [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! TIMES           [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! DIV             [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! LT              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! GT              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! LE              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! GE              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! EQ              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! CONJUNCTION     [ shift and go to state 51 ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 79

    (29) binaria -> expresion DISJUNCTION expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    DISJUNCTION     reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    SEMICOLON       reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    PARENTHESISCLOSE reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    COMA            reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51

  ! PLUS            [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! MINUS           [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! TIMES           [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! DIV             [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! LT              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! GT              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! LE              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! GE              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! EQ              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! CONJUNCTION     [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! DISJUNCTION     [ shift and go to state 52 ]


state 80

    (56) condicion -> IF PARENTHESISOPEN expresion . PARENTHESISCLOSE bloque_llaves otra_condicion
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PARENTHESISCLOSE shift and go to state 93
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 81

    (18) expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .

    PLUS            reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    MINUS           reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    TIMES           reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    DIV             reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    LT              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    GT              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    LE              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    GE              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    EQ              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    CONJUNCTION     reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    DISJUNCTION     reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    SEMICOLON       reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    PARENTHESISCLOSE reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    COMA            reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)


state 82

    (60) bucle -> WHILE PARENTHESISOPEN expresion . PARENTHESISCLOSE bloque_llaves
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PARENTHESISCLOSE shift and go to state 94
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 83

    (66) funcion -> FUNCTION ID PARENTHESISOPEN . lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (67) lista_arg -> .
    (68) lista_arg -> . lista_arg_rec
    (69) lista_arg_rec -> . ID COLON tipo
    (70) lista_arg_rec -> . ID COLON tipo COMA lista_arg_rec

    PARENTHESISCLOSE reduce using rule 67 (lista_arg -> .)
    ID              shift and go to state 95

    lista_arg                      shift and go to state 96
    lista_arg_rec                  shift and go to state 97

state 84

    (71) function_call -> ID PARENTHESISOPEN lista_param . PARENTHESISCLOSE

    PARENTHESISCLOSE shift and go to state 98


state 85

    (73) lista_param -> lista_param_rec .

    PARENTHESISCLOSE reduce using rule 73 (lista_param -> lista_param_rec .)


state 86

    (74) lista_param_rec -> expresion . COMA lista_param_rec
    (75) lista_param_rec -> expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    COMA            shift and go to state 99
    PARENTHESISCLOSE reduce using rule 75 (lista_param_rec -> expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 87

    (46) acceso_propiedad -> ID DOT ID . acceso_propiedad_rec
    (48) acceso_propiedad_rec -> .
    (49) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (50) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PLUS            reduce using rule 48 (acceso_propiedad_rec -> .)
    MINUS           reduce using rule 48 (acceso_propiedad_rec -> .)
    TIMES           reduce using rule 48 (acceso_propiedad_rec -> .)
    DIV             reduce using rule 48 (acceso_propiedad_rec -> .)
    LT              reduce using rule 48 (acceso_propiedad_rec -> .)
    GT              reduce using rule 48 (acceso_propiedad_rec -> .)
    LE              reduce using rule 48 (acceso_propiedad_rec -> .)
    GE              reduce using rule 48 (acceso_propiedad_rec -> .)
    EQ              reduce using rule 48 (acceso_propiedad_rec -> .)
    CONJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    DISJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    SEMICOLON       reduce using rule 48 (acceso_propiedad_rec -> .)
    PARENTHESISCLOSE reduce using rule 48 (acceso_propiedad_rec -> .)
    COMA            reduce using rule 48 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 100
    BRACKETOPEN     shift and go to state 102

    acceso_propiedad_rec           shift and go to state 101

state 88

    (47) acceso_propiedad -> ID BRACKETOPEN STRING . BRACKETCLOSE acceso_propiedad_rec

    BRACKETCLOSE    shift and go to state 103


state 89

    (54) lista_id -> ID COMA lista_id .

    EQUAL           reduce using rule 54 (lista_id -> ID COMA lista_id .)
    SEMICOLON       reduce using rule 54 (lista_id -> ID COMA lista_id .)


state 90

    (52) declaracion -> LET lista_id EQUAL . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 104
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 91

    (55) asignacion -> lista_id EQUAL expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       reduce using rule 55 (asignacion -> lista_id EQUAL expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 92

    (76) definicion_objeto -> TYPE ID COLON . ID

    ID              shift and go to state 105


state 93

    (56) condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE . bloque_llaves otra_condicion
    (59) bloque_llaves -> . LLAVEA bloque_programa LLAVEC

    LLAVEA          shift and go to state 107

    bloque_llaves                  shift and go to state 106

state 94

    (60) bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE . bloque_llaves
    (59) bloque_llaves -> . LLAVEA bloque_programa LLAVEC

    LLAVEA          shift and go to state 107

    bloque_llaves                  shift and go to state 108

state 95

    (69) lista_arg_rec -> ID . COLON tipo
    (70) lista_arg_rec -> ID . COLON tipo COMA lista_arg_rec

    COLON           shift and go to state 109


state 96

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg . PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    PARENTHESISCLOSE shift and go to state 110


state 97

    (68) lista_arg -> lista_arg_rec .

    PARENTHESISCLOSE reduce using rule 68 (lista_arg -> lista_arg_rec .)


state 98

    (71) function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .

    PLUS            reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    MINUS           reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    TIMES           reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    DIV             reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    LT              reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    GT              reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    LE              reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    GE              reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    EQ              reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    CONJUNCTION     reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    DISJUNCTION     reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    SEMICOLON       reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    PARENTHESISCLOSE reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    COMA            reduce using rule 71 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)


state 99

    (74) lista_param_rec -> expresion COMA . lista_param_rec
    (74) lista_param_rec -> . expresion COMA lista_param_rec
    (75) lista_param_rec -> . expresion
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 86
    lista_param_rec                shift and go to state 111
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 100

    (49) acceso_propiedad_rec -> DOT . ID acceso_propiedad_rec

    ID              shift and go to state 112


state 101

    (46) acceso_propiedad -> ID DOT ID acceso_propiedad_rec .

    PLUS            reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    MINUS           reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    TIMES           reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    DIV             reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    LT              reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    GT              reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    LE              reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    GE              reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    EQ              reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    CONJUNCTION     reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    DISJUNCTION     reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    SEMICOLON       reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    PARENTHESISCLOSE reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    COMA            reduce using rule 46 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)


state 102

    (50) acceso_propiedad_rec -> BRACKETOPEN . STRING BRACKETCLOSE acceso_propiedad_rec

    STRING          shift and go to state 113


state 103

    (47) acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE . acceso_propiedad_rec
    (48) acceso_propiedad_rec -> .
    (49) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (50) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PLUS            reduce using rule 48 (acceso_propiedad_rec -> .)
    MINUS           reduce using rule 48 (acceso_propiedad_rec -> .)
    TIMES           reduce using rule 48 (acceso_propiedad_rec -> .)
    DIV             reduce using rule 48 (acceso_propiedad_rec -> .)
    LT              reduce using rule 48 (acceso_propiedad_rec -> .)
    GT              reduce using rule 48 (acceso_propiedad_rec -> .)
    LE              reduce using rule 48 (acceso_propiedad_rec -> .)
    GE              reduce using rule 48 (acceso_propiedad_rec -> .)
    EQ              reduce using rule 48 (acceso_propiedad_rec -> .)
    CONJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    DISJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    SEMICOLON       reduce using rule 48 (acceso_propiedad_rec -> .)
    PARENTHESISCLOSE reduce using rule 48 (acceso_propiedad_rec -> .)
    COMA            reduce using rule 48 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 100
    BRACKETOPEN     shift and go to state 102

    acceso_propiedad_rec           shift and go to state 114

state 104

    (52) declaracion -> LET lista_id EQUAL expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       reduce using rule 52 (declaracion -> LET lista_id EQUAL expresion .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 105

    (76) definicion_objeto -> TYPE ID COLON ID .

    SEMICOLON       reduce using rule 76 (definicion_objeto -> TYPE ID COLON ID .)


state 106

    (56) condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves . otra_condicion
    (57) otra_condicion -> .
    (58) otra_condicion -> . ELSE bloque_llaves

    IF              reduce using rule 57 (otra_condicion -> .)
    WHILE           reduce using rule 57 (otra_condicion -> .)
    FUNCTION        reduce using rule 57 (otra_condicion -> .)
    PARENTHESISOPEN reduce using rule 57 (otra_condicion -> .)
    ID              reduce using rule 57 (otra_condicion -> .)
    ENTERO          reduce using rule 57 (otra_condicion -> .)
    BIN             reduce using rule 57 (otra_condicion -> .)
    OCT             reduce using rule 57 (otra_condicion -> .)
    HEX             reduce using rule 57 (otra_condicion -> .)
    REAL            reduce using rule 57 (otra_condicion -> .)
    NCIENT          reduce using rule 57 (otra_condicion -> .)
    CHAR            reduce using rule 57 (otra_condicion -> .)
    TR              reduce using rule 57 (otra_condicion -> .)
    FL              reduce using rule 57 (otra_condicion -> .)
    NULL            reduce using rule 57 (otra_condicion -> .)
    LET             reduce using rule 57 (otra_condicion -> .)
    TYPE            reduce using rule 57 (otra_condicion -> .)
    PLUS            reduce using rule 57 (otra_condicion -> .)
    MINUS           reduce using rule 57 (otra_condicion -> .)
    NEG             reduce using rule 57 (otra_condicion -> .)
    $end            reduce using rule 57 (otra_condicion -> .)
    LLAVEC          reduce using rule 57 (otra_condicion -> .)
    RETURN          reduce using rule 57 (otra_condicion -> .)
    ELSE            shift and go to state 116

    otra_condicion                 shift and go to state 115

state 107

    (59) bloque_llaves -> LLAVEA . bloque_programa LLAVEC
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . especial
    (8) sentencia -> . no_especial SEMICOLON
    (9) especial -> . condicion
    (10) especial -> . bucle
    (11) especial -> . funcion
    (12) no_especial -> . expresion
    (13) no_especial -> . declaracion
    (14) no_especial -> . asignacion
    (15) no_especial -> . definicion_objeto
    (56) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (60) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (66) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (51) declaracion -> . LET lista_id
    (52) declaracion -> . LET lista_id EQUAL expresion
    (55) asignacion -> . lista_id EQUAL expresion
    (76) definicion_objeto -> . TYPE ID COLON ID
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
    (53) lista_id -> . ID
    (54) lista_id -> . ID COMA lista_id

    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 19
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    LET             shift and go to state 34
    TYPE            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    bloque_programa                shift and go to state 117
    sentencia                      shift and go to state 5
    especial                       shift and go to state 6
    no_especial                    shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    expresion                      shift and go to state 11
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    definicion_objeto              shift and go to state 14
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33
    lista_id                       shift and go to state 35

state 108

    (60) bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .

    IF              reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    WHILE           reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    FUNCTION        reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    PARENTHESISOPEN reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    ID              reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    ENTERO          reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    BIN             reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    OCT             reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    HEX             reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    REAL            reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    NCIENT          reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    CHAR            reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    TR              reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    FL              reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    NULL            reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    LET             reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    TYPE            reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    PLUS            reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    MINUS           reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    NEG             reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    $end            reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    LLAVEC          reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    RETURN          reduce using rule 60 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)


state 109

    (69) lista_arg_rec -> ID COLON . tipo
    (70) lista_arg_rec -> ID COLON . tipo COMA lista_arg_rec
    (61) tipo -> . INT
    (62) tipo -> . FLOAT
    (63) tipo -> . CHARACTER
    (64) tipo -> . BOOLEAN
    (65) tipo -> . ID

    INT             shift and go to state 120
    FLOAT           shift and go to state 121
    CHARACTER       shift and go to state 122
    BOOLEAN         shift and go to state 123
    ID              shift and go to state 118

    tipo                           shift and go to state 119

state 110

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE . COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    COLON           shift and go to state 124


state 111

    (74) lista_param_rec -> expresion COMA lista_param_rec .

    PARENTHESISCLOSE reduce using rule 74 (lista_param_rec -> expresion COMA lista_param_rec .)


state 112

    (49) acceso_propiedad_rec -> DOT ID . acceso_propiedad_rec
    (48) acceso_propiedad_rec -> .
    (49) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (50) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PLUS            reduce using rule 48 (acceso_propiedad_rec -> .)
    MINUS           reduce using rule 48 (acceso_propiedad_rec -> .)
    TIMES           reduce using rule 48 (acceso_propiedad_rec -> .)
    DIV             reduce using rule 48 (acceso_propiedad_rec -> .)
    LT              reduce using rule 48 (acceso_propiedad_rec -> .)
    GT              reduce using rule 48 (acceso_propiedad_rec -> .)
    LE              reduce using rule 48 (acceso_propiedad_rec -> .)
    GE              reduce using rule 48 (acceso_propiedad_rec -> .)
    EQ              reduce using rule 48 (acceso_propiedad_rec -> .)
    CONJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    DISJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    SEMICOLON       reduce using rule 48 (acceso_propiedad_rec -> .)
    PARENTHESISCLOSE reduce using rule 48 (acceso_propiedad_rec -> .)
    COMA            reduce using rule 48 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 100
    BRACKETOPEN     shift and go to state 102

    acceso_propiedad_rec           shift and go to state 125

state 113

    (50) acceso_propiedad_rec -> BRACKETOPEN STRING . BRACKETCLOSE acceso_propiedad_rec

    BRACKETCLOSE    shift and go to state 126


state 114

    (47) acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .

    PLUS            reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    MINUS           reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    TIMES           reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    DIV             reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    LT              reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    GT              reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    LE              reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    GE              reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    EQ              reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    CONJUNCTION     reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    DISJUNCTION     reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    SEMICOLON       reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    PARENTHESISCLOSE reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    COMA            reduce using rule 47 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)


state 115

    (56) condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .

    IF              reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    WHILE           reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    FUNCTION        reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    PARENTHESISOPEN reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    ID              reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    ENTERO          reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    BIN             reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    OCT             reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    HEX             reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    REAL            reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    NCIENT          reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    CHAR            reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    TR              reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    FL              reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    NULL            reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    LET             reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    TYPE            reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    PLUS            reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    MINUS           reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    NEG             reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    $end            reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    LLAVEC          reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    RETURN          reduce using rule 56 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)


state 116

    (58) otra_condicion -> ELSE . bloque_llaves
    (59) bloque_llaves -> . LLAVEA bloque_programa LLAVEC

    LLAVEA          shift and go to state 107

    bloque_llaves                  shift and go to state 127

state 117

    (59) bloque_llaves -> LLAVEA bloque_programa . LLAVEC

    LLAVEC          shift and go to state 128


state 118

    (65) tipo -> ID .

    COMA            reduce using rule 65 (tipo -> ID .)
    PARENTHESISCLOSE reduce using rule 65 (tipo -> ID .)
    LLAVEA          reduce using rule 65 (tipo -> ID .)


state 119

    (69) lista_arg_rec -> ID COLON tipo .
    (70) lista_arg_rec -> ID COLON tipo . COMA lista_arg_rec

    PARENTHESISCLOSE reduce using rule 69 (lista_arg_rec -> ID COLON tipo .)
    COMA            shift and go to state 129


state 120

    (61) tipo -> INT .

    COMA            reduce using rule 61 (tipo -> INT .)
    PARENTHESISCLOSE reduce using rule 61 (tipo -> INT .)
    LLAVEA          reduce using rule 61 (tipo -> INT .)


state 121

    (62) tipo -> FLOAT .

    COMA            reduce using rule 62 (tipo -> FLOAT .)
    PARENTHESISCLOSE reduce using rule 62 (tipo -> FLOAT .)
    LLAVEA          reduce using rule 62 (tipo -> FLOAT .)


state 122

    (63) tipo -> CHARACTER .

    COMA            reduce using rule 63 (tipo -> CHARACTER .)
    PARENTHESISCLOSE reduce using rule 63 (tipo -> CHARACTER .)
    LLAVEA          reduce using rule 63 (tipo -> CHARACTER .)


state 123

    (64) tipo -> BOOLEAN .

    COMA            reduce using rule 64 (tipo -> BOOLEAN .)
    PARENTHESISCLOSE reduce using rule 64 (tipo -> BOOLEAN .)
    LLAVEA          reduce using rule 64 (tipo -> BOOLEAN .)


state 124

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON . tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (61) tipo -> . INT
    (62) tipo -> . FLOAT
    (63) tipo -> . CHARACTER
    (64) tipo -> . BOOLEAN
    (65) tipo -> . ID

    INT             shift and go to state 120
    FLOAT           shift and go to state 121
    CHARACTER       shift and go to state 122
    BOOLEAN         shift and go to state 123
    ID              shift and go to state 118

    tipo                           shift and go to state 130

state 125

    (49) acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .

    PLUS            reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    MINUS           reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    TIMES           reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    DIV             reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    LT              reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    GT              reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    LE              reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    GE              reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    EQ              reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    CONJUNCTION     reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    DISJUNCTION     reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    SEMICOLON       reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    PARENTHESISCLOSE reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    COMA            reduce using rule 49 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)


state 126

    (50) acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE . acceso_propiedad_rec
    (48) acceso_propiedad_rec -> .
    (49) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (50) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PLUS            reduce using rule 48 (acceso_propiedad_rec -> .)
    MINUS           reduce using rule 48 (acceso_propiedad_rec -> .)
    TIMES           reduce using rule 48 (acceso_propiedad_rec -> .)
    DIV             reduce using rule 48 (acceso_propiedad_rec -> .)
    LT              reduce using rule 48 (acceso_propiedad_rec -> .)
    GT              reduce using rule 48 (acceso_propiedad_rec -> .)
    LE              reduce using rule 48 (acceso_propiedad_rec -> .)
    GE              reduce using rule 48 (acceso_propiedad_rec -> .)
    EQ              reduce using rule 48 (acceso_propiedad_rec -> .)
    CONJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    DISJUNCTION     reduce using rule 48 (acceso_propiedad_rec -> .)
    SEMICOLON       reduce using rule 48 (acceso_propiedad_rec -> .)
    PARENTHESISCLOSE reduce using rule 48 (acceso_propiedad_rec -> .)
    COMA            reduce using rule 48 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 100
    BRACKETOPEN     shift and go to state 102

    acceso_propiedad_rec           shift and go to state 131

state 127

    (58) otra_condicion -> ELSE bloque_llaves .

    IF              reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    WHILE           reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    FUNCTION        reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    PARENTHESISOPEN reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    ID              reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    ENTERO          reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    BIN             reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    OCT             reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    HEX             reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    REAL            reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    NCIENT          reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    CHAR            reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    TR              reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    FL              reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    NULL            reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    LET             reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    TYPE            reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    PLUS            reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    MINUS           reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    NEG             reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    $end            reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    LLAVEC          reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)
    RETURN          reduce using rule 58 (otra_condicion -> ELSE bloque_llaves .)


state 128

    (59) bloque_llaves -> LLAVEA bloque_programa LLAVEC .

    ELSE            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    IF              reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    WHILE           reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    FUNCTION        reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    PARENTHESISOPEN reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    ID              reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    ENTERO          reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    BIN             reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    OCT             reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    HEX             reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    REAL            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    NCIENT          reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    CHAR            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    TR              reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    FL              reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    NULL            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    LET             reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    TYPE            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    PLUS            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    MINUS           reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    NEG             reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    $end            reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    LLAVEC          reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    RETURN          reduce using rule 59 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)


state 129

    (70) lista_arg_rec -> ID COLON tipo COMA . lista_arg_rec
    (69) lista_arg_rec -> . ID COLON tipo
    (70) lista_arg_rec -> . ID COLON tipo COMA lista_arg_rec

    ID              shift and go to state 95

    lista_arg_rec                  shift and go to state 132

state 130

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo . LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    LLAVEA          shift and go to state 133


state 131

    (50) acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .

    PLUS            reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    MINUS           reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    TIMES           reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    DIV             reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    LT              reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    GT              reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    LE              reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    GE              reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    EQ              reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    CONJUNCTION     reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    DISJUNCTION     reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    SEMICOLON       reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    PARENTHESISCLOSE reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    COMA            reduce using rule 50 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)


state 132

    (70) lista_arg_rec -> ID COLON tipo COMA lista_arg_rec .

    PARENTHESISCLOSE reduce using rule 70 (lista_arg_rec -> ID COLON tipo COMA lista_arg_rec .)


state 133

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA . axioma RETURN expresion SEMICOLON LLAVEC
    (2) axioma -> . programa
    (3) axioma -> . empty
    (4) programa -> . bloque_programa
    (1) empty -> .
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . especial
    (8) sentencia -> . no_especial SEMICOLON
    (9) especial -> . condicion
    (10) especial -> . bucle
    (11) especial -> . funcion
    (12) no_especial -> . expresion
    (13) no_especial -> . declaracion
    (14) no_especial -> . asignacion
    (15) no_especial -> . definicion_objeto
    (56) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (60) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (66) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (51) declaracion -> . LET lista_id
    (52) declaracion -> . LET lista_id EQUAL expresion
    (55) asignacion -> . lista_id EQUAL expresion
    (76) definicion_objeto -> . TYPE ID COLON ID
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
    (53) lista_id -> . ID
    (54) lista_id -> . ID COMA lista_id

    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 19
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    LET             shift and go to state 34
    TYPE            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    axioma                         shift and go to state 134
    expresion                      shift and go to state 11
    programa                       shift and go to state 2
    empty                          shift and go to state 3
    bloque_programa                shift and go to state 4
    sentencia                      shift and go to state 5
    especial                       shift and go to state 6
    no_especial                    shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    definicion_objeto              shift and go to state 14
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33
    lista_id                       shift and go to state 35

state 134

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma . RETURN expresion SEMICOLON LLAVEC

    RETURN          shift and go to state 135


state 135

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN . expresion SEMICOLON LLAVEC
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . BIN
    (36) expresion -> . OCT
    (37) expresion -> . HEX
    (38) expresion -> . REAL
    (39) expresion -> . NCIENT
    (40) expresion -> . CHAR
    (41) expresion -> . TR
    (42) expresion -> . FL
    (43) expresion -> . NULL
    (44) expresion -> . function_call
    (45) expresion -> . acceso_propiedad
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (71) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (46) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (47) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 16
    ID              shift and go to state 55
    ENTERO          shift and go to state 22
    BIN             shift and go to state 23
    OCT             shift and go to state 24
    HEX             shift and go to state 25
    REAL            shift and go to state 26
    NCIENT          shift and go to state 27
    CHAR            shift and go to state 28
    TR              shift and go to state 29
    FL              shift and go to state 30
    NULL            shift and go to state 31
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    NEG             shift and go to state 39

    expresion                      shift and go to state 136
    binaria                        shift and go to state 20
    unaria                         shift and go to state 21
    function_call                  shift and go to state 32
    acceso_propiedad               shift and go to state 33

state 136

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion . SEMICOLON LLAVEC
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       shift and go to state 137
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIV             shift and go to state 45
    LT              shift and go to state 46
    GT              shift and go to state 47
    LE              shift and go to state 48
    GE              shift and go to state 49
    EQ              shift and go to state 50
    CONJUNCTION     shift and go to state 51
    DISJUNCTION     shift and go to state 52


state 137

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON . LLAVEC

    LLAVEC          shift and go to state 138


state 138

    (66) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .

    IF              reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    WHILE           reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    FUNCTION        reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    PARENTHESISOPEN reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    ID              reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    ENTERO          reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    BIN             reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    OCT             reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    HEX             reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    REAL            reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    NCIENT          reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    CHAR            reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    TR              reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    FL              reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    NULL            reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    LET             reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    TYPE            reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    PLUS            reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    MINUS           reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    NEG             reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    $end            reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    LLAVEC          reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    RETURN          reduce using rule 66 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)

