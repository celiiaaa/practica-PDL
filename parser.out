Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> axioma
Rule 1     empty -> <empty>
Rule 2     axioma -> programa
Rule 3     axioma -> empty
Rule 4     programa -> bloque_programa
Rule 5     bloque_programa -> sentencia
Rule 6     bloque_programa -> sentencia bloque_programa
Rule 7     sentencia -> declaracion SEMICOLON
Rule 8     sentencia -> asignacion SEMICOLON
Rule 9     sentencia -> condicion
Rule 10    sentencia -> bucle
Rule 11    sentencia -> funcion
Rule 12    sentencia -> declaracion_objeto SEMICOLON
Rule 13    sentencia -> asignacion_objeto SEMICOLON
Rule 14    sentencia -> function_call SEMICOLON
Rule 15    expresion -> literal
Rule 16    expresion -> binaria
Rule 17    expresion -> unaria
Rule 18    expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE
Rule 19    binaria -> expresion PLUS expresion
Rule 20    binaria -> expresion MINUS expresion
Rule 21    binaria -> expresion TIMES expresion
Rule 22    binaria -> expresion DIV expresion
Rule 23    binaria -> expresion LT expresion
Rule 24    binaria -> expresion GT expresion
Rule 25    binaria -> expresion LE expresion
Rule 26    binaria -> expresion GE expresion
Rule 27    binaria -> expresion EQ expresion
Rule 28    binaria -> expresion CONJUNCTION expresion
Rule 29    binaria -> expresion DISJUNCTION expresion
Rule 30    unaria -> PLUS expresion
Rule 31    unaria -> MINUS expresion
Rule 32    unaria -> NEG expresion
Rule 33    literal -> ID
Rule 34    literal -> ENTERO
Rule 35    literal -> BIN
Rule 36    literal -> OCT
Rule 37    literal -> HEX
Rule 38    literal -> REAL
Rule 39    literal -> NCIENT
Rule 40    literal -> CHAR
Rule 41    literal -> TR
Rule 42    literal -> FL
Rule 43    literal -> NULL
Rule 44    expresion -> objeto_asg
Rule 45    expresion -> acceso_obj
Rule 46    expresion -> function_call
Rule 47    acceso_propiedad -> ID DOT ID acceso_propiedad_rec
Rule 48    acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
Rule 49    acceso_propiedad_rec -> <empty>
Rule 50    acceso_propiedad_rec -> DOT ID acceso_propiedad_rec
Rule 51    acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec
Rule 52    acceso_obj -> ID DOT ID acceso_obj_rec
Rule 53    acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
Rule 54    acceso_obj_rec -> <empty>
Rule 55    acceso_obj_rec -> DOT ID acceso_obj_rec
Rule 56    acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
Rule 57    declaracion -> LET lista_id
Rule 58    declaracion -> LET lista_id_mas EQUAL expresion
Rule 59    lista_id -> ID
Rule 60    lista_id -> ID COMA lista_id
Rule 61    lista_id -> ID COLON ID
Rule 62    lista_id -> ID COLON ID COMA lista_id
Rule 63    lista_id_mas -> ID
Rule 64    lista_id_mas -> ID COMA lista_id_mas
Rule 65    lista_id_mas -> acceso_propiedad
Rule 66    lista_id_mas -> acceso_propiedad COMA lista_id_mas
Rule 67    asignacion -> lista_id_mas EQUAL expresion
Rule 68    condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
Rule 69    otra_condicion -> <empty>
Rule 70    otra_condicion -> ELSE bloque_llaves
Rule 71    bloque_llaves -> LLAVEA bloque_programa LLAVEC
Rule 72    bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
Rule 73    tipo -> INT
Rule 74    tipo -> FLOAT
Rule 75    tipo -> CHARACTER
Rule 76    tipo -> BOOLEAN
Rule 77    tipo -> ID
Rule 78    funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
Rule 79    lista_arg -> <empty>
Rule 80    lista_arg -> lista_arg_rec
Rule 81    lista_arg_rec -> ID COLON tipo
Rule 82    lista_arg_rec -> ID COLON tipo COMA lista_arg_rec
Rule 83    function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
Rule 84    lista_param -> <empty>
Rule 85    lista_param -> lista_param_rec
Rule 86    lista_param_rec -> expresion COMA lista_param_rec
Rule 87    lista_param_rec -> expresion
Rule 88    declaracion_objeto -> TYPE ID EQUAL objeto_dec
Rule 89    objeto_dec -> LLAVEA propiedades_dec LLAVEC
Rule 90    propiedades_dec -> <empty>
Rule 91    propiedades_dec -> propiedad_dec
Rule 92    propiedades_dec -> propiedad_dec COMA propiedades_dec
Rule 93    propiedad_dec -> ID COLON tipo
Rule 94    propiedad_dec -> STRING COLON tipo
Rule 95    propiedad_dec -> ID COLON objeto_dec
Rule 96    propiedad_dec -> STRING COLON objeto_dec
Rule 97    asignacion_objeto -> LET ID COLON ID EQUAL objeto_asg
Rule 98    objeto_asg -> LLAVEA propiedades_asg LLAVEC
Rule 99    propiedades_asg -> <empty>
Rule 100   propiedades_asg -> propiedad_asg
Rule 101   propiedades_asg -> propiedad_asg COMA propiedades_asg
Rule 102   propiedad_asg -> ID COLON expresion
Rule 103   propiedad_asg -> STRING COLON expresion

Terminals, with rules where they appear

BIN                  : 35
BOOLEAN              : 76
BRACKETCLOSE         : 48 51 53 56
BRACKETOPEN          : 48 51 53 56
CHAR                 : 40
CHARACTER            : 75
COLON                : 61 62 78 81 82 93 94 95 96 97 102 103
COMA                 : 60 62 64 66 82 86 92 101
CONJUNCTION          : 28
DISJUNCTION          : 29
DIV                  : 22
DOT                  : 47 50 52 55
ELSE                 : 70
ENTERO               : 34
EQ                   : 27
EQUAL                : 58 67 88 97
FL                   : 42
FLOAT                : 74
FUNCTION             : 78
GE                   : 26
GT                   : 24
HEX                  : 37
ID                   : 33 47 47 48 50 52 52 53 55 59 60 61 61 62 62 63 64 77 78 81 82 83 88 93 95 97 97 102
IF                   : 68
INT                  : 73
LE                   : 25
LET                  : 57 58 97
LLAVEA               : 71 78 89 98
LLAVEC               : 71 78 89 98
LT                   : 23
MINUS                : 20 31
NCIENT               : 39
NEG                  : 32
NULL                 : 43
OCT                  : 36
PARENTHESISCLOSE     : 18 68 72 78 83
PARENTHESISOPEN      : 18 68 72 78 83
PLUS                 : 19 30
REAL                 : 38
RETURN               : 78
SEMICOLON            : 7 8 12 13 14 78
STRING               : 48 51 53 56 94 96 103
TIMES                : 21
TR                   : 41
TYPE                 : 88
WHILE                : 72
error                : 

Nonterminals, with rules where they appear

acceso_obj           : 45
acceso_obj_rec       : 52 53 55 56
acceso_propiedad     : 65 66
acceso_propiedad_rec : 47 48 50 51
asignacion           : 8
asignacion_objeto    : 13
axioma               : 78 0
binaria              : 16
bloque_llaves        : 68 70 72
bloque_programa      : 4 6 71
bucle                : 10
condicion            : 9
declaracion          : 7
declaracion_objeto   : 12
empty                : 3
expresion            : 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 58 67 68 72 78 86 87 102 103
funcion              : 11
function_call        : 14 46
lista_arg            : 78
lista_arg_rec        : 80 82
lista_id             : 57 60 62
lista_id_mas         : 58 64 66 67
lista_param          : 83
lista_param_rec      : 85 86
literal              : 15
objeto_asg           : 44 97
objeto_dec           : 88 95 96
otra_condicion       : 68
programa             : 2
propiedad_asg        : 100 101
propiedad_dec        : 91 92
propiedades_asg      : 98 101
propiedades_dec      : 89 92
sentencia            : 5 6
tipo                 : 78 81 82 93 94
unaria               : 17

Parsing method: LALR

state 0

    (0) S' -> . axioma
    (2) axioma -> . programa
    (3) axioma -> . empty
    (4) programa -> . bloque_programa
    (1) empty -> .
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . declaracion SEMICOLON
    (8) sentencia -> . asignacion SEMICOLON
    (9) sentencia -> . condicion
    (10) sentencia -> . bucle
    (11) sentencia -> . funcion
    (12) sentencia -> . declaracion_objeto SEMICOLON
    (13) sentencia -> . asignacion_objeto SEMICOLON
    (14) sentencia -> . function_call SEMICOLON
    (57) declaracion -> . LET lista_id
    (58) declaracion -> . LET lista_id_mas EQUAL expresion
    (67) asignacion -> . lista_id_mas EQUAL expresion
    (68) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (72) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (78) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (88) declaracion_objeto -> . TYPE ID EQUAL objeto_dec
    (97) asignacion_objeto -> . LET ID COLON ID EQUAL objeto_asg
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    $end            reduce using rule 1 (empty -> .)
    LET             shift and go to state 14
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    TYPE            shift and go to state 20
    ID              shift and go to state 19

    axioma                         shift and go to state 1
    programa                       shift and go to state 2
    empty                          shift and go to state 3
    bloque_programa                shift and go to state 4
    sentencia                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    declaracion_objeto             shift and go to state 11
    asignacion_objeto              shift and go to state 12
    function_call                  shift and go to state 13
    lista_id_mas                   shift and go to state 15
    acceso_propiedad               shift and go to state 21

state 1

    (0) S' -> axioma .



state 2

    (2) axioma -> programa .

    $end            reduce using rule 2 (axioma -> programa .)
    RETURN          reduce using rule 2 (axioma -> programa .)


state 3

    (3) axioma -> empty .

    $end            reduce using rule 3 (axioma -> empty .)
    RETURN          reduce using rule 3 (axioma -> empty .)


state 4

    (4) programa -> bloque_programa .

    $end            reduce using rule 4 (programa -> bloque_programa .)
    RETURN          reduce using rule 4 (programa -> bloque_programa .)


state 5

    (5) bloque_programa -> sentencia .
    (6) bloque_programa -> sentencia . bloque_programa
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . declaracion SEMICOLON
    (8) sentencia -> . asignacion SEMICOLON
    (9) sentencia -> . condicion
    (10) sentencia -> . bucle
    (11) sentencia -> . funcion
    (12) sentencia -> . declaracion_objeto SEMICOLON
    (13) sentencia -> . asignacion_objeto SEMICOLON
    (14) sentencia -> . function_call SEMICOLON
    (57) declaracion -> . LET lista_id
    (58) declaracion -> . LET lista_id_mas EQUAL expresion
    (67) asignacion -> . lista_id_mas EQUAL expresion
    (68) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (72) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (78) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (88) declaracion_objeto -> . TYPE ID EQUAL objeto_dec
    (97) asignacion_objeto -> . LET ID COLON ID EQUAL objeto_asg
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    $end            reduce using rule 5 (bloque_programa -> sentencia .)
    LLAVEC          reduce using rule 5 (bloque_programa -> sentencia .)
    RETURN          reduce using rule 5 (bloque_programa -> sentencia .)
    LET             shift and go to state 14
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    TYPE            shift and go to state 20
    ID              shift and go to state 19

    sentencia                      shift and go to state 5
    bloque_programa                shift and go to state 22
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    declaracion_objeto             shift and go to state 11
    asignacion_objeto              shift and go to state 12
    function_call                  shift and go to state 13
    lista_id_mas                   shift and go to state 15
    acceso_propiedad               shift and go to state 21

state 6

    (7) sentencia -> declaracion . SEMICOLON

    SEMICOLON       shift and go to state 23


state 7

    (8) sentencia -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 24


state 8

    (9) sentencia -> condicion .

    LET             reduce using rule 9 (sentencia -> condicion .)
    IF              reduce using rule 9 (sentencia -> condicion .)
    WHILE           reduce using rule 9 (sentencia -> condicion .)
    FUNCTION        reduce using rule 9 (sentencia -> condicion .)
    TYPE            reduce using rule 9 (sentencia -> condicion .)
    ID              reduce using rule 9 (sentencia -> condicion .)
    $end            reduce using rule 9 (sentencia -> condicion .)
    LLAVEC          reduce using rule 9 (sentencia -> condicion .)
    RETURN          reduce using rule 9 (sentencia -> condicion .)


state 9

    (10) sentencia -> bucle .

    LET             reduce using rule 10 (sentencia -> bucle .)
    IF              reduce using rule 10 (sentencia -> bucle .)
    WHILE           reduce using rule 10 (sentencia -> bucle .)
    FUNCTION        reduce using rule 10 (sentencia -> bucle .)
    TYPE            reduce using rule 10 (sentencia -> bucle .)
    ID              reduce using rule 10 (sentencia -> bucle .)
    $end            reduce using rule 10 (sentencia -> bucle .)
    LLAVEC          reduce using rule 10 (sentencia -> bucle .)
    RETURN          reduce using rule 10 (sentencia -> bucle .)


state 10

    (11) sentencia -> funcion .

    LET             reduce using rule 11 (sentencia -> funcion .)
    IF              reduce using rule 11 (sentencia -> funcion .)
    WHILE           reduce using rule 11 (sentencia -> funcion .)
    FUNCTION        reduce using rule 11 (sentencia -> funcion .)
    TYPE            reduce using rule 11 (sentencia -> funcion .)
    ID              reduce using rule 11 (sentencia -> funcion .)
    $end            reduce using rule 11 (sentencia -> funcion .)
    LLAVEC          reduce using rule 11 (sentencia -> funcion .)
    RETURN          reduce using rule 11 (sentencia -> funcion .)


state 11

    (12) sentencia -> declaracion_objeto . SEMICOLON

    SEMICOLON       shift and go to state 25


state 12

    (13) sentencia -> asignacion_objeto . SEMICOLON

    SEMICOLON       shift and go to state 26


state 13

    (14) sentencia -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 27


state 14

    (57) declaracion -> LET . lista_id
    (58) declaracion -> LET . lista_id_mas EQUAL expresion
    (97) asignacion_objeto -> LET . ID COLON ID EQUAL objeto_asg
    (59) lista_id -> . ID
    (60) lista_id -> . ID COMA lista_id
    (61) lista_id -> . ID COLON ID
    (62) lista_id -> . ID COLON ID COMA lista_id
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    ID              shift and go to state 30

    lista_id                       shift and go to state 28
    lista_id_mas                   shift and go to state 29
    acceso_propiedad               shift and go to state 21

state 15

    (67) asignacion -> lista_id_mas . EQUAL expresion

    EQUAL           shift and go to state 31


state 16

    (68) condicion -> IF . PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion

    PARENTHESISOPEN shift and go to state 32


state 17

    (72) bucle -> WHILE . PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves

    PARENTHESISOPEN shift and go to state 33


state 18

    (78) funcion -> FUNCTION . ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    ID              shift and go to state 34


state 19

    (83) function_call -> ID . PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (63) lista_id_mas -> ID .
    (64) lista_id_mas -> ID . COMA lista_id_mas
    (47) acceso_propiedad -> ID . DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    PARENTHESISOPEN shift and go to state 35
    EQUAL           reduce using rule 63 (lista_id_mas -> ID .)
    COMA            shift and go to state 36
    DOT             shift and go to state 37
    BRACKETOPEN     shift and go to state 38


state 20

    (88) declaracion_objeto -> TYPE . ID EQUAL objeto_dec

    ID              shift and go to state 39


state 21

    (65) lista_id_mas -> acceso_propiedad .
    (66) lista_id_mas -> acceso_propiedad . COMA lista_id_mas

    EQUAL           reduce using rule 65 (lista_id_mas -> acceso_propiedad .)
    COMA            shift and go to state 40


state 22

    (6) bloque_programa -> sentencia bloque_programa .

    $end            reduce using rule 6 (bloque_programa -> sentencia bloque_programa .)
    LLAVEC          reduce using rule 6 (bloque_programa -> sentencia bloque_programa .)
    RETURN          reduce using rule 6 (bloque_programa -> sentencia bloque_programa .)


state 23

    (7) sentencia -> declaracion SEMICOLON .

    LET             reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    IF              reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    WHILE           reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    FUNCTION        reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    TYPE            reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    ID              reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    $end            reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    LLAVEC          reduce using rule 7 (sentencia -> declaracion SEMICOLON .)
    RETURN          reduce using rule 7 (sentencia -> declaracion SEMICOLON .)


state 24

    (8) sentencia -> asignacion SEMICOLON .

    LET             reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    IF              reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    WHILE           reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    FUNCTION        reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    TYPE            reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    ID              reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    $end            reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    LLAVEC          reduce using rule 8 (sentencia -> asignacion SEMICOLON .)
    RETURN          reduce using rule 8 (sentencia -> asignacion SEMICOLON .)


state 25

    (12) sentencia -> declaracion_objeto SEMICOLON .

    LET             reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    IF              reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    WHILE           reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    FUNCTION        reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    TYPE            reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    ID              reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    $end            reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    LLAVEC          reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)
    RETURN          reduce using rule 12 (sentencia -> declaracion_objeto SEMICOLON .)


state 26

    (13) sentencia -> asignacion_objeto SEMICOLON .

    LET             reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    IF              reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    WHILE           reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    FUNCTION        reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    TYPE            reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    ID              reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    $end            reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    LLAVEC          reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)
    RETURN          reduce using rule 13 (sentencia -> asignacion_objeto SEMICOLON .)


state 27

    (14) sentencia -> function_call SEMICOLON .

    LET             reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    IF              reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    WHILE           reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    FUNCTION        reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    TYPE            reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    ID              reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    $end            reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    LLAVEC          reduce using rule 14 (sentencia -> function_call SEMICOLON .)
    RETURN          reduce using rule 14 (sentencia -> function_call SEMICOLON .)


state 28

    (57) declaracion -> LET lista_id .

    SEMICOLON       reduce using rule 57 (declaracion -> LET lista_id .)


state 29

    (58) declaracion -> LET lista_id_mas . EQUAL expresion

    EQUAL           shift and go to state 41


state 30

    (97) asignacion_objeto -> LET ID . COLON ID EQUAL objeto_asg
    (59) lista_id -> ID .
    (60) lista_id -> ID . COMA lista_id
    (61) lista_id -> ID . COLON ID
    (62) lista_id -> ID . COLON ID COMA lista_id
    (63) lista_id_mas -> ID .
    (64) lista_id_mas -> ID . COMA lista_id_mas
    (47) acceso_propiedad -> ID . DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    COLON           shift and go to state 42
    SEMICOLON       reduce using rule 59 (lista_id -> ID .)
    COMA            shift and go to state 43
    EQUAL           reduce using rule 63 (lista_id_mas -> ID .)
    DOT             shift and go to state 37
    BRACKETOPEN     shift and go to state 38


state 31

    (67) asignacion -> lista_id_mas EQUAL . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 44
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 32

    (68) condicion -> IF PARENTHESISOPEN . expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 67
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 33

    (72) bucle -> WHILE PARENTHESISOPEN . expresion PARENTHESISCLOSE bloque_llaves
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 68
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 34

    (78) funcion -> FUNCTION ID . PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    PARENTHESISOPEN shift and go to state 69


state 35

    (83) function_call -> ID PARENTHESISOPEN . lista_param PARENTHESISCLOSE
    (84) lista_param -> .
    (85) lista_param -> . lista_param_rec
    (86) lista_param_rec -> . expresion COMA lista_param_rec
    (87) lista_param_rec -> . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISCLOSE reduce using rule 84 (lista_param -> .)
    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    lista_param                    shift and go to state 70
    lista_param_rec                shift and go to state 71
    expresion                      shift and go to state 72
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 36

    (64) lista_id_mas -> ID COMA . lista_id_mas
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    ID              shift and go to state 73

    lista_id_mas                   shift and go to state 74
    acceso_propiedad               shift and go to state 21

state 37

    (47) acceso_propiedad -> ID DOT . ID acceso_propiedad_rec

    ID              shift and go to state 75


state 38

    (48) acceso_propiedad -> ID BRACKETOPEN . STRING BRACKETCLOSE acceso_propiedad_rec

    STRING          shift and go to state 76


state 39

    (88) declaracion_objeto -> TYPE ID . EQUAL objeto_dec

    EQUAL           shift and go to state 77


state 40

    (66) lista_id_mas -> acceso_propiedad COMA . lista_id_mas
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    ID              shift and go to state 73

    acceso_propiedad               shift and go to state 21
    lista_id_mas                   shift and go to state 78

state 41

    (58) declaracion -> LET lista_id_mas EQUAL . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 79
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 42

    (97) asignacion_objeto -> LET ID COLON . ID EQUAL objeto_asg
    (61) lista_id -> ID COLON . ID
    (62) lista_id -> ID COLON . ID COMA lista_id

    ID              shift and go to state 80


state 43

    (60) lista_id -> ID COMA . lista_id
    (64) lista_id_mas -> ID COMA . lista_id_mas
    (59) lista_id -> . ID
    (60) lista_id -> . ID COMA lista_id
    (61) lista_id -> . ID COLON ID
    (62) lista_id -> . ID COLON ID COMA lista_id
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    ID              shift and go to state 81

    lista_id                       shift and go to state 82
    lista_id_mas                   shift and go to state 74
    acceso_propiedad               shift and go to state 21

state 44

    (67) asignacion -> lista_id_mas EQUAL expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       reduce using rule 67 (asignacion -> lista_id_mas EQUAL expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 45

    (15) expresion -> literal .

    PLUS            reduce using rule 15 (expresion -> literal .)
    MINUS           reduce using rule 15 (expresion -> literal .)
    TIMES           reduce using rule 15 (expresion -> literal .)
    DIV             reduce using rule 15 (expresion -> literal .)
    LT              reduce using rule 15 (expresion -> literal .)
    GT              reduce using rule 15 (expresion -> literal .)
    LE              reduce using rule 15 (expresion -> literal .)
    GE              reduce using rule 15 (expresion -> literal .)
    EQ              reduce using rule 15 (expresion -> literal .)
    CONJUNCTION     reduce using rule 15 (expresion -> literal .)
    DISJUNCTION     reduce using rule 15 (expresion -> literal .)
    SEMICOLON       reduce using rule 15 (expresion -> literal .)
    PARENTHESISCLOSE reduce using rule 15 (expresion -> literal .)
    COMA            reduce using rule 15 (expresion -> literal .)
    LLAVEC          reduce using rule 15 (expresion -> literal .)


state 46

    (16) expresion -> binaria .

    PLUS            reduce using rule 16 (expresion -> binaria .)
    MINUS           reduce using rule 16 (expresion -> binaria .)
    TIMES           reduce using rule 16 (expresion -> binaria .)
    DIV             reduce using rule 16 (expresion -> binaria .)
    LT              reduce using rule 16 (expresion -> binaria .)
    GT              reduce using rule 16 (expresion -> binaria .)
    LE              reduce using rule 16 (expresion -> binaria .)
    GE              reduce using rule 16 (expresion -> binaria .)
    EQ              reduce using rule 16 (expresion -> binaria .)
    CONJUNCTION     reduce using rule 16 (expresion -> binaria .)
    DISJUNCTION     reduce using rule 16 (expresion -> binaria .)
    SEMICOLON       reduce using rule 16 (expresion -> binaria .)
    PARENTHESISCLOSE reduce using rule 16 (expresion -> binaria .)
    COMA            reduce using rule 16 (expresion -> binaria .)
    LLAVEC          reduce using rule 16 (expresion -> binaria .)


state 47

    (17) expresion -> unaria .

    PLUS            reduce using rule 17 (expresion -> unaria .)
    MINUS           reduce using rule 17 (expresion -> unaria .)
    TIMES           reduce using rule 17 (expresion -> unaria .)
    DIV             reduce using rule 17 (expresion -> unaria .)
    LT              reduce using rule 17 (expresion -> unaria .)
    GT              reduce using rule 17 (expresion -> unaria .)
    LE              reduce using rule 17 (expresion -> unaria .)
    GE              reduce using rule 17 (expresion -> unaria .)
    EQ              reduce using rule 17 (expresion -> unaria .)
    CONJUNCTION     reduce using rule 17 (expresion -> unaria .)
    DISJUNCTION     reduce using rule 17 (expresion -> unaria .)
    SEMICOLON       reduce using rule 17 (expresion -> unaria .)
    PARENTHESISCLOSE reduce using rule 17 (expresion -> unaria .)
    COMA            reduce using rule 17 (expresion -> unaria .)
    LLAVEC          reduce using rule 17 (expresion -> unaria .)


state 48

    (18) expresion -> PARENTHESISOPEN . expresion PARENTHESISCLOSE
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 94
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 49

    (44) expresion -> objeto_asg .

    PLUS            reduce using rule 44 (expresion -> objeto_asg .)
    MINUS           reduce using rule 44 (expresion -> objeto_asg .)
    TIMES           reduce using rule 44 (expresion -> objeto_asg .)
    DIV             reduce using rule 44 (expresion -> objeto_asg .)
    LT              reduce using rule 44 (expresion -> objeto_asg .)
    GT              reduce using rule 44 (expresion -> objeto_asg .)
    LE              reduce using rule 44 (expresion -> objeto_asg .)
    GE              reduce using rule 44 (expresion -> objeto_asg .)
    EQ              reduce using rule 44 (expresion -> objeto_asg .)
    CONJUNCTION     reduce using rule 44 (expresion -> objeto_asg .)
    DISJUNCTION     reduce using rule 44 (expresion -> objeto_asg .)
    SEMICOLON       reduce using rule 44 (expresion -> objeto_asg .)
    PARENTHESISCLOSE reduce using rule 44 (expresion -> objeto_asg .)
    COMA            reduce using rule 44 (expresion -> objeto_asg .)
    LLAVEC          reduce using rule 44 (expresion -> objeto_asg .)


state 50

    (45) expresion -> acceso_obj .

    PLUS            reduce using rule 45 (expresion -> acceso_obj .)
    MINUS           reduce using rule 45 (expresion -> acceso_obj .)
    TIMES           reduce using rule 45 (expresion -> acceso_obj .)
    DIV             reduce using rule 45 (expresion -> acceso_obj .)
    LT              reduce using rule 45 (expresion -> acceso_obj .)
    GT              reduce using rule 45 (expresion -> acceso_obj .)
    LE              reduce using rule 45 (expresion -> acceso_obj .)
    GE              reduce using rule 45 (expresion -> acceso_obj .)
    EQ              reduce using rule 45 (expresion -> acceso_obj .)
    CONJUNCTION     reduce using rule 45 (expresion -> acceso_obj .)
    DISJUNCTION     reduce using rule 45 (expresion -> acceso_obj .)
    SEMICOLON       reduce using rule 45 (expresion -> acceso_obj .)
    PARENTHESISCLOSE reduce using rule 45 (expresion -> acceso_obj .)
    COMA            reduce using rule 45 (expresion -> acceso_obj .)
    LLAVEC          reduce using rule 45 (expresion -> acceso_obj .)


state 51

    (46) expresion -> function_call .

    PLUS            reduce using rule 46 (expresion -> function_call .)
    MINUS           reduce using rule 46 (expresion -> function_call .)
    TIMES           reduce using rule 46 (expresion -> function_call .)
    DIV             reduce using rule 46 (expresion -> function_call .)
    LT              reduce using rule 46 (expresion -> function_call .)
    GT              reduce using rule 46 (expresion -> function_call .)
    LE              reduce using rule 46 (expresion -> function_call .)
    GE              reduce using rule 46 (expresion -> function_call .)
    EQ              reduce using rule 46 (expresion -> function_call .)
    CONJUNCTION     reduce using rule 46 (expresion -> function_call .)
    DISJUNCTION     reduce using rule 46 (expresion -> function_call .)
    SEMICOLON       reduce using rule 46 (expresion -> function_call .)
    PARENTHESISCLOSE reduce using rule 46 (expresion -> function_call .)
    COMA            reduce using rule 46 (expresion -> function_call .)
    LLAVEC          reduce using rule 46 (expresion -> function_call .)


state 52

    (33) literal -> ID .
    (52) acceso_obj -> ID . DOT ID acceso_obj_rec
    (53) acceso_obj -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> ID . PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PLUS            reduce using rule 33 (literal -> ID .)
    MINUS           reduce using rule 33 (literal -> ID .)
    TIMES           reduce using rule 33 (literal -> ID .)
    DIV             reduce using rule 33 (literal -> ID .)
    LT              reduce using rule 33 (literal -> ID .)
    GT              reduce using rule 33 (literal -> ID .)
    LE              reduce using rule 33 (literal -> ID .)
    GE              reduce using rule 33 (literal -> ID .)
    EQ              reduce using rule 33 (literal -> ID .)
    CONJUNCTION     reduce using rule 33 (literal -> ID .)
    DISJUNCTION     reduce using rule 33 (literal -> ID .)
    SEMICOLON       reduce using rule 33 (literal -> ID .)
    PARENTHESISCLOSE reduce using rule 33 (literal -> ID .)
    COMA            reduce using rule 33 (literal -> ID .)
    LLAVEC          reduce using rule 33 (literal -> ID .)
    DOT             shift and go to state 95
    BRACKETOPEN     shift and go to state 96
    PARENTHESISOPEN shift and go to state 35


state 53

    (34) literal -> ENTERO .

    PLUS            reduce using rule 34 (literal -> ENTERO .)
    MINUS           reduce using rule 34 (literal -> ENTERO .)
    TIMES           reduce using rule 34 (literal -> ENTERO .)
    DIV             reduce using rule 34 (literal -> ENTERO .)
    LT              reduce using rule 34 (literal -> ENTERO .)
    GT              reduce using rule 34 (literal -> ENTERO .)
    LE              reduce using rule 34 (literal -> ENTERO .)
    GE              reduce using rule 34 (literal -> ENTERO .)
    EQ              reduce using rule 34 (literal -> ENTERO .)
    CONJUNCTION     reduce using rule 34 (literal -> ENTERO .)
    DISJUNCTION     reduce using rule 34 (literal -> ENTERO .)
    SEMICOLON       reduce using rule 34 (literal -> ENTERO .)
    PARENTHESISCLOSE reduce using rule 34 (literal -> ENTERO .)
    COMA            reduce using rule 34 (literal -> ENTERO .)
    LLAVEC          reduce using rule 34 (literal -> ENTERO .)


state 54

    (35) literal -> BIN .

    PLUS            reduce using rule 35 (literal -> BIN .)
    MINUS           reduce using rule 35 (literal -> BIN .)
    TIMES           reduce using rule 35 (literal -> BIN .)
    DIV             reduce using rule 35 (literal -> BIN .)
    LT              reduce using rule 35 (literal -> BIN .)
    GT              reduce using rule 35 (literal -> BIN .)
    LE              reduce using rule 35 (literal -> BIN .)
    GE              reduce using rule 35 (literal -> BIN .)
    EQ              reduce using rule 35 (literal -> BIN .)
    CONJUNCTION     reduce using rule 35 (literal -> BIN .)
    DISJUNCTION     reduce using rule 35 (literal -> BIN .)
    SEMICOLON       reduce using rule 35 (literal -> BIN .)
    PARENTHESISCLOSE reduce using rule 35 (literal -> BIN .)
    COMA            reduce using rule 35 (literal -> BIN .)
    LLAVEC          reduce using rule 35 (literal -> BIN .)


state 55

    (36) literal -> OCT .

    PLUS            reduce using rule 36 (literal -> OCT .)
    MINUS           reduce using rule 36 (literal -> OCT .)
    TIMES           reduce using rule 36 (literal -> OCT .)
    DIV             reduce using rule 36 (literal -> OCT .)
    LT              reduce using rule 36 (literal -> OCT .)
    GT              reduce using rule 36 (literal -> OCT .)
    LE              reduce using rule 36 (literal -> OCT .)
    GE              reduce using rule 36 (literal -> OCT .)
    EQ              reduce using rule 36 (literal -> OCT .)
    CONJUNCTION     reduce using rule 36 (literal -> OCT .)
    DISJUNCTION     reduce using rule 36 (literal -> OCT .)
    SEMICOLON       reduce using rule 36 (literal -> OCT .)
    PARENTHESISCLOSE reduce using rule 36 (literal -> OCT .)
    COMA            reduce using rule 36 (literal -> OCT .)
    LLAVEC          reduce using rule 36 (literal -> OCT .)


state 56

    (37) literal -> HEX .

    PLUS            reduce using rule 37 (literal -> HEX .)
    MINUS           reduce using rule 37 (literal -> HEX .)
    TIMES           reduce using rule 37 (literal -> HEX .)
    DIV             reduce using rule 37 (literal -> HEX .)
    LT              reduce using rule 37 (literal -> HEX .)
    GT              reduce using rule 37 (literal -> HEX .)
    LE              reduce using rule 37 (literal -> HEX .)
    GE              reduce using rule 37 (literal -> HEX .)
    EQ              reduce using rule 37 (literal -> HEX .)
    CONJUNCTION     reduce using rule 37 (literal -> HEX .)
    DISJUNCTION     reduce using rule 37 (literal -> HEX .)
    SEMICOLON       reduce using rule 37 (literal -> HEX .)
    PARENTHESISCLOSE reduce using rule 37 (literal -> HEX .)
    COMA            reduce using rule 37 (literal -> HEX .)
    LLAVEC          reduce using rule 37 (literal -> HEX .)


state 57

    (38) literal -> REAL .

    PLUS            reduce using rule 38 (literal -> REAL .)
    MINUS           reduce using rule 38 (literal -> REAL .)
    TIMES           reduce using rule 38 (literal -> REAL .)
    DIV             reduce using rule 38 (literal -> REAL .)
    LT              reduce using rule 38 (literal -> REAL .)
    GT              reduce using rule 38 (literal -> REAL .)
    LE              reduce using rule 38 (literal -> REAL .)
    GE              reduce using rule 38 (literal -> REAL .)
    EQ              reduce using rule 38 (literal -> REAL .)
    CONJUNCTION     reduce using rule 38 (literal -> REAL .)
    DISJUNCTION     reduce using rule 38 (literal -> REAL .)
    SEMICOLON       reduce using rule 38 (literal -> REAL .)
    PARENTHESISCLOSE reduce using rule 38 (literal -> REAL .)
    COMA            reduce using rule 38 (literal -> REAL .)
    LLAVEC          reduce using rule 38 (literal -> REAL .)


state 58

    (39) literal -> NCIENT .

    PLUS            reduce using rule 39 (literal -> NCIENT .)
    MINUS           reduce using rule 39 (literal -> NCIENT .)
    TIMES           reduce using rule 39 (literal -> NCIENT .)
    DIV             reduce using rule 39 (literal -> NCIENT .)
    LT              reduce using rule 39 (literal -> NCIENT .)
    GT              reduce using rule 39 (literal -> NCIENT .)
    LE              reduce using rule 39 (literal -> NCIENT .)
    GE              reduce using rule 39 (literal -> NCIENT .)
    EQ              reduce using rule 39 (literal -> NCIENT .)
    CONJUNCTION     reduce using rule 39 (literal -> NCIENT .)
    DISJUNCTION     reduce using rule 39 (literal -> NCIENT .)
    SEMICOLON       reduce using rule 39 (literal -> NCIENT .)
    PARENTHESISCLOSE reduce using rule 39 (literal -> NCIENT .)
    COMA            reduce using rule 39 (literal -> NCIENT .)
    LLAVEC          reduce using rule 39 (literal -> NCIENT .)


state 59

    (40) literal -> CHAR .

    PLUS            reduce using rule 40 (literal -> CHAR .)
    MINUS           reduce using rule 40 (literal -> CHAR .)
    TIMES           reduce using rule 40 (literal -> CHAR .)
    DIV             reduce using rule 40 (literal -> CHAR .)
    LT              reduce using rule 40 (literal -> CHAR .)
    GT              reduce using rule 40 (literal -> CHAR .)
    LE              reduce using rule 40 (literal -> CHAR .)
    GE              reduce using rule 40 (literal -> CHAR .)
    EQ              reduce using rule 40 (literal -> CHAR .)
    CONJUNCTION     reduce using rule 40 (literal -> CHAR .)
    DISJUNCTION     reduce using rule 40 (literal -> CHAR .)
    SEMICOLON       reduce using rule 40 (literal -> CHAR .)
    PARENTHESISCLOSE reduce using rule 40 (literal -> CHAR .)
    COMA            reduce using rule 40 (literal -> CHAR .)
    LLAVEC          reduce using rule 40 (literal -> CHAR .)


state 60

    (41) literal -> TR .

    PLUS            reduce using rule 41 (literal -> TR .)
    MINUS           reduce using rule 41 (literal -> TR .)
    TIMES           reduce using rule 41 (literal -> TR .)
    DIV             reduce using rule 41 (literal -> TR .)
    LT              reduce using rule 41 (literal -> TR .)
    GT              reduce using rule 41 (literal -> TR .)
    LE              reduce using rule 41 (literal -> TR .)
    GE              reduce using rule 41 (literal -> TR .)
    EQ              reduce using rule 41 (literal -> TR .)
    CONJUNCTION     reduce using rule 41 (literal -> TR .)
    DISJUNCTION     reduce using rule 41 (literal -> TR .)
    SEMICOLON       reduce using rule 41 (literal -> TR .)
    PARENTHESISCLOSE reduce using rule 41 (literal -> TR .)
    COMA            reduce using rule 41 (literal -> TR .)
    LLAVEC          reduce using rule 41 (literal -> TR .)


state 61

    (42) literal -> FL .

    PLUS            reduce using rule 42 (literal -> FL .)
    MINUS           reduce using rule 42 (literal -> FL .)
    TIMES           reduce using rule 42 (literal -> FL .)
    DIV             reduce using rule 42 (literal -> FL .)
    LT              reduce using rule 42 (literal -> FL .)
    GT              reduce using rule 42 (literal -> FL .)
    LE              reduce using rule 42 (literal -> FL .)
    GE              reduce using rule 42 (literal -> FL .)
    EQ              reduce using rule 42 (literal -> FL .)
    CONJUNCTION     reduce using rule 42 (literal -> FL .)
    DISJUNCTION     reduce using rule 42 (literal -> FL .)
    SEMICOLON       reduce using rule 42 (literal -> FL .)
    PARENTHESISCLOSE reduce using rule 42 (literal -> FL .)
    COMA            reduce using rule 42 (literal -> FL .)
    LLAVEC          reduce using rule 42 (literal -> FL .)


state 62

    (43) literal -> NULL .

    PLUS            reduce using rule 43 (literal -> NULL .)
    MINUS           reduce using rule 43 (literal -> NULL .)
    TIMES           reduce using rule 43 (literal -> NULL .)
    DIV             reduce using rule 43 (literal -> NULL .)
    LT              reduce using rule 43 (literal -> NULL .)
    GT              reduce using rule 43 (literal -> NULL .)
    LE              reduce using rule 43 (literal -> NULL .)
    GE              reduce using rule 43 (literal -> NULL .)
    EQ              reduce using rule 43 (literal -> NULL .)
    CONJUNCTION     reduce using rule 43 (literal -> NULL .)
    DISJUNCTION     reduce using rule 43 (literal -> NULL .)
    SEMICOLON       reduce using rule 43 (literal -> NULL .)
    PARENTHESISCLOSE reduce using rule 43 (literal -> NULL .)
    COMA            reduce using rule 43 (literal -> NULL .)
    LLAVEC          reduce using rule 43 (literal -> NULL .)


state 63

    (30) unaria -> PLUS . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 97
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 64

    (31) unaria -> MINUS . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 98
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 65

    (32) unaria -> NEG . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 99
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 66

    (98) objeto_asg -> LLAVEA . propiedades_asg LLAVEC
    (99) propiedades_asg -> .
    (100) propiedades_asg -> . propiedad_asg
    (101) propiedades_asg -> . propiedad_asg COMA propiedades_asg
    (102) propiedad_asg -> . ID COLON expresion
    (103) propiedad_asg -> . STRING COLON expresion

    LLAVEC          reduce using rule 99 (propiedades_asg -> .)
    ID              shift and go to state 102
    STRING          shift and go to state 103

    propiedades_asg                shift and go to state 100
    propiedad_asg                  shift and go to state 101

state 67

    (68) condicion -> IF PARENTHESISOPEN expresion . PARENTHESISCLOSE bloque_llaves otra_condicion
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PARENTHESISCLOSE shift and go to state 104
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 68

    (72) bucle -> WHILE PARENTHESISOPEN expresion . PARENTHESISCLOSE bloque_llaves
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PARENTHESISCLOSE shift and go to state 105
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 69

    (78) funcion -> FUNCTION ID PARENTHESISOPEN . lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (79) lista_arg -> .
    (80) lista_arg -> . lista_arg_rec
    (81) lista_arg_rec -> . ID COLON tipo
    (82) lista_arg_rec -> . ID COLON tipo COMA lista_arg_rec

    PARENTHESISCLOSE reduce using rule 79 (lista_arg -> .)
    ID              shift and go to state 106

    lista_arg                      shift and go to state 107
    lista_arg_rec                  shift and go to state 108

state 70

    (83) function_call -> ID PARENTHESISOPEN lista_param . PARENTHESISCLOSE

    PARENTHESISCLOSE shift and go to state 109


state 71

    (85) lista_param -> lista_param_rec .

    PARENTHESISCLOSE reduce using rule 85 (lista_param -> lista_param_rec .)


state 72

    (86) lista_param_rec -> expresion . COMA lista_param_rec
    (87) lista_param_rec -> expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    COMA            shift and go to state 110
    PARENTHESISCLOSE reduce using rule 87 (lista_param_rec -> expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 73

    (63) lista_id_mas -> ID .
    (64) lista_id_mas -> ID . COMA lista_id_mas
    (47) acceso_propiedad -> ID . DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    EQUAL           reduce using rule 63 (lista_id_mas -> ID .)
    COMA            shift and go to state 36
    DOT             shift and go to state 37
    BRACKETOPEN     shift and go to state 38


state 74

    (64) lista_id_mas -> ID COMA lista_id_mas .

    EQUAL           reduce using rule 64 (lista_id_mas -> ID COMA lista_id_mas .)


state 75

    (47) acceso_propiedad -> ID DOT ID . acceso_propiedad_rec
    (49) acceso_propiedad_rec -> .
    (50) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (51) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    COMA            reduce using rule 49 (acceso_propiedad_rec -> .)
    EQUAL           reduce using rule 49 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 111
    BRACKETOPEN     shift and go to state 113

    acceso_propiedad_rec           shift and go to state 112

state 76

    (48) acceso_propiedad -> ID BRACKETOPEN STRING . BRACKETCLOSE acceso_propiedad_rec

    BRACKETCLOSE    shift and go to state 114


state 77

    (88) declaracion_objeto -> TYPE ID EQUAL . objeto_dec
    (89) objeto_dec -> . LLAVEA propiedades_dec LLAVEC

    LLAVEA          shift and go to state 116

    objeto_dec                     shift and go to state 115

state 78

    (66) lista_id_mas -> acceso_propiedad COMA lista_id_mas .

    EQUAL           reduce using rule 66 (lista_id_mas -> acceso_propiedad COMA lista_id_mas .)


state 79

    (58) declaracion -> LET lista_id_mas EQUAL expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       reduce using rule 58 (declaracion -> LET lista_id_mas EQUAL expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 80

    (97) asignacion_objeto -> LET ID COLON ID . EQUAL objeto_asg
    (61) lista_id -> ID COLON ID .
    (62) lista_id -> ID COLON ID . COMA lista_id

    EQUAL           shift and go to state 117
    SEMICOLON       reduce using rule 61 (lista_id -> ID COLON ID .)
    COMA            shift and go to state 118


state 81

    (59) lista_id -> ID .
    (60) lista_id -> ID . COMA lista_id
    (61) lista_id -> ID . COLON ID
    (62) lista_id -> ID . COLON ID COMA lista_id
    (63) lista_id_mas -> ID .
    (64) lista_id_mas -> ID . COMA lista_id_mas
    (47) acceso_propiedad -> ID . DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> ID . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    SEMICOLON       reduce using rule 59 (lista_id -> ID .)
    COMA            shift and go to state 43
    COLON           shift and go to state 119
    EQUAL           reduce using rule 63 (lista_id_mas -> ID .)
    DOT             shift and go to state 37
    BRACKETOPEN     shift and go to state 38


state 82

    (60) lista_id -> ID COMA lista_id .

    SEMICOLON       reduce using rule 60 (lista_id -> ID COMA lista_id .)


state 83

    (19) binaria -> expresion PLUS . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 120
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 84

    (20) binaria -> expresion MINUS . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 121
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 85

    (21) binaria -> expresion TIMES . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 122
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 86

    (22) binaria -> expresion DIV . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 123
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 87

    (23) binaria -> expresion LT . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 124
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 88

    (24) binaria -> expresion GT . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 125
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 89

    (25) binaria -> expresion LE . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 126
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 90

    (26) binaria -> expresion GE . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 127
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 91

    (27) binaria -> expresion EQ . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 128
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 92

    (28) binaria -> expresion CONJUNCTION . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 129
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 93

    (29) binaria -> expresion DISJUNCTION . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 130
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 94

    (18) expresion -> PARENTHESISOPEN expresion . PARENTHESISCLOSE
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PARENTHESISCLOSE shift and go to state 131
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 95

    (52) acceso_obj -> ID DOT . ID acceso_obj_rec

    ID              shift and go to state 132


state 96

    (53) acceso_obj -> ID BRACKETOPEN . STRING BRACKETCLOSE acceso_obj_rec

    STRING          shift and go to state 133


state 97

    (30) unaria -> PLUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 30 (unaria -> PLUS expresion .)
    MINUS           reduce using rule 30 (unaria -> PLUS expresion .)
    TIMES           reduce using rule 30 (unaria -> PLUS expresion .)
    DIV             reduce using rule 30 (unaria -> PLUS expresion .)
    LT              reduce using rule 30 (unaria -> PLUS expresion .)
    GT              reduce using rule 30 (unaria -> PLUS expresion .)
    LE              reduce using rule 30 (unaria -> PLUS expresion .)
    GE              reduce using rule 30 (unaria -> PLUS expresion .)
    EQ              reduce using rule 30 (unaria -> PLUS expresion .)
    CONJUNCTION     reduce using rule 30 (unaria -> PLUS expresion .)
    DISJUNCTION     reduce using rule 30 (unaria -> PLUS expresion .)
    SEMICOLON       reduce using rule 30 (unaria -> PLUS expresion .)
    PARENTHESISCLOSE reduce using rule 30 (unaria -> PLUS expresion .)
    COMA            reduce using rule 30 (unaria -> PLUS expresion .)
    LLAVEC          reduce using rule 30 (unaria -> PLUS expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 98

    (31) unaria -> MINUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 31 (unaria -> MINUS expresion .)
    MINUS           reduce using rule 31 (unaria -> MINUS expresion .)
    TIMES           reduce using rule 31 (unaria -> MINUS expresion .)
    DIV             reduce using rule 31 (unaria -> MINUS expresion .)
    LT              reduce using rule 31 (unaria -> MINUS expresion .)
    GT              reduce using rule 31 (unaria -> MINUS expresion .)
    LE              reduce using rule 31 (unaria -> MINUS expresion .)
    GE              reduce using rule 31 (unaria -> MINUS expresion .)
    EQ              reduce using rule 31 (unaria -> MINUS expresion .)
    CONJUNCTION     reduce using rule 31 (unaria -> MINUS expresion .)
    DISJUNCTION     reduce using rule 31 (unaria -> MINUS expresion .)
    SEMICOLON       reduce using rule 31 (unaria -> MINUS expresion .)
    PARENTHESISCLOSE reduce using rule 31 (unaria -> MINUS expresion .)
    COMA            reduce using rule 31 (unaria -> MINUS expresion .)
    LLAVEC          reduce using rule 31 (unaria -> MINUS expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 99

    (32) unaria -> NEG expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 32 (unaria -> NEG expresion .)
    MINUS           reduce using rule 32 (unaria -> NEG expresion .)
    TIMES           reduce using rule 32 (unaria -> NEG expresion .)
    DIV             reduce using rule 32 (unaria -> NEG expresion .)
    LT              reduce using rule 32 (unaria -> NEG expresion .)
    GT              reduce using rule 32 (unaria -> NEG expresion .)
    LE              reduce using rule 32 (unaria -> NEG expresion .)
    GE              reduce using rule 32 (unaria -> NEG expresion .)
    EQ              reduce using rule 32 (unaria -> NEG expresion .)
    CONJUNCTION     reduce using rule 32 (unaria -> NEG expresion .)
    DISJUNCTION     reduce using rule 32 (unaria -> NEG expresion .)
    SEMICOLON       reduce using rule 32 (unaria -> NEG expresion .)
    PARENTHESISCLOSE reduce using rule 32 (unaria -> NEG expresion .)
    COMA            reduce using rule 32 (unaria -> NEG expresion .)
    LLAVEC          reduce using rule 32 (unaria -> NEG expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 100

    (98) objeto_asg -> LLAVEA propiedades_asg . LLAVEC

    LLAVEC          shift and go to state 134


state 101

    (100) propiedades_asg -> propiedad_asg .
    (101) propiedades_asg -> propiedad_asg . COMA propiedades_asg

    LLAVEC          reduce using rule 100 (propiedades_asg -> propiedad_asg .)
    COMA            shift and go to state 135


state 102

    (102) propiedad_asg -> ID . COLON expresion

    COLON           shift and go to state 136


state 103

    (103) propiedad_asg -> STRING . COLON expresion

    COLON           shift and go to state 137


state 104

    (68) condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE . bloque_llaves otra_condicion
    (71) bloque_llaves -> . LLAVEA bloque_programa LLAVEC

    LLAVEA          shift and go to state 139

    bloque_llaves                  shift and go to state 138

state 105

    (72) bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE . bloque_llaves
    (71) bloque_llaves -> . LLAVEA bloque_programa LLAVEC

    LLAVEA          shift and go to state 139

    bloque_llaves                  shift and go to state 140

state 106

    (81) lista_arg_rec -> ID . COLON tipo
    (82) lista_arg_rec -> ID . COLON tipo COMA lista_arg_rec

    COLON           shift and go to state 141


state 107

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg . PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    PARENTHESISCLOSE shift and go to state 142


state 108

    (80) lista_arg -> lista_arg_rec .

    PARENTHESISCLOSE reduce using rule 80 (lista_arg -> lista_arg_rec .)


state 109

    (83) function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .

    SEMICOLON       reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    PLUS            reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    MINUS           reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    TIMES           reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    DIV             reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    LT              reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    GT              reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    LE              reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    GE              reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    EQ              reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    CONJUNCTION     reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    DISJUNCTION     reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    PARENTHESISCLOSE reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    COMA            reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)
    LLAVEC          reduce using rule 83 (function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE .)


state 110

    (86) lista_param_rec -> expresion COMA . lista_param_rec
    (86) lista_param_rec -> . expresion COMA lista_param_rec
    (87) lista_param_rec -> . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 72
    lista_param_rec                shift and go to state 143
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 111

    (50) acceso_propiedad_rec -> DOT . ID acceso_propiedad_rec

    ID              shift and go to state 144


state 112

    (47) acceso_propiedad -> ID DOT ID acceso_propiedad_rec .

    COMA            reduce using rule 47 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)
    EQUAL           reduce using rule 47 (acceso_propiedad -> ID DOT ID acceso_propiedad_rec .)


state 113

    (51) acceso_propiedad_rec -> BRACKETOPEN . STRING BRACKETCLOSE acceso_propiedad_rec

    STRING          shift and go to state 145


state 114

    (48) acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE . acceso_propiedad_rec
    (49) acceso_propiedad_rec -> .
    (50) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (51) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    COMA            reduce using rule 49 (acceso_propiedad_rec -> .)
    EQUAL           reduce using rule 49 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 111
    BRACKETOPEN     shift and go to state 113

    acceso_propiedad_rec           shift and go to state 146

state 115

    (88) declaracion_objeto -> TYPE ID EQUAL objeto_dec .

    SEMICOLON       reduce using rule 88 (declaracion_objeto -> TYPE ID EQUAL objeto_dec .)


state 116

    (89) objeto_dec -> LLAVEA . propiedades_dec LLAVEC
    (90) propiedades_dec -> .
    (91) propiedades_dec -> . propiedad_dec
    (92) propiedades_dec -> . propiedad_dec COMA propiedades_dec
    (93) propiedad_dec -> . ID COLON tipo
    (94) propiedad_dec -> . STRING COLON tipo
    (95) propiedad_dec -> . ID COLON objeto_dec
    (96) propiedad_dec -> . STRING COLON objeto_dec

    LLAVEC          reduce using rule 90 (propiedades_dec -> .)
    ID              shift and go to state 149
    STRING          shift and go to state 150

    propiedades_dec                shift and go to state 147
    propiedad_dec                  shift and go to state 148

state 117

    (97) asignacion_objeto -> LET ID COLON ID EQUAL . objeto_asg
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC

    LLAVEA          shift and go to state 66

    objeto_asg                     shift and go to state 151

state 118

    (62) lista_id -> ID COLON ID COMA . lista_id
    (59) lista_id -> . ID
    (60) lista_id -> . ID COMA lista_id
    (61) lista_id -> . ID COLON ID
    (62) lista_id -> . ID COLON ID COMA lista_id

    ID              shift and go to state 152

    lista_id                       shift and go to state 153

state 119

    (61) lista_id -> ID COLON . ID
    (62) lista_id -> ID COLON . ID COMA lista_id

    ID              shift and go to state 154


state 120

    (19) binaria -> expresion PLUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 19 (binaria -> expresion PLUS expresion .)
    MINUS           reduce using rule 19 (binaria -> expresion PLUS expresion .)
    LT              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    GT              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    LE              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    GE              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    EQ              reduce using rule 19 (binaria -> expresion PLUS expresion .)
    CONJUNCTION     reduce using rule 19 (binaria -> expresion PLUS expresion .)
    DISJUNCTION     reduce using rule 19 (binaria -> expresion PLUS expresion .)
    SEMICOLON       reduce using rule 19 (binaria -> expresion PLUS expresion .)
    PARENTHESISCLOSE reduce using rule 19 (binaria -> expresion PLUS expresion .)
    COMA            reduce using rule 19 (binaria -> expresion PLUS expresion .)
    LLAVEC          reduce using rule 19 (binaria -> expresion PLUS expresion .)
    TIMES           shift and go to state 85
    DIV             shift and go to state 86

  ! TIMES           [ reduce using rule 19 (binaria -> expresion PLUS expresion .) ]
  ! DIV             [ reduce using rule 19 (binaria -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 121

    (20) binaria -> expresion MINUS expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 20 (binaria -> expresion MINUS expresion .)
    MINUS           reduce using rule 20 (binaria -> expresion MINUS expresion .)
    LT              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    GT              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    LE              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    GE              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    EQ              reduce using rule 20 (binaria -> expresion MINUS expresion .)
    CONJUNCTION     reduce using rule 20 (binaria -> expresion MINUS expresion .)
    DISJUNCTION     reduce using rule 20 (binaria -> expresion MINUS expresion .)
    SEMICOLON       reduce using rule 20 (binaria -> expresion MINUS expresion .)
    PARENTHESISCLOSE reduce using rule 20 (binaria -> expresion MINUS expresion .)
    COMA            reduce using rule 20 (binaria -> expresion MINUS expresion .)
    LLAVEC          reduce using rule 20 (binaria -> expresion MINUS expresion .)
    TIMES           shift and go to state 85
    DIV             shift and go to state 86

  ! TIMES           [ reduce using rule 20 (binaria -> expresion MINUS expresion .) ]
  ! DIV             [ reduce using rule 20 (binaria -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 122

    (21) binaria -> expresion TIMES expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 21 (binaria -> expresion TIMES expresion .)
    MINUS           reduce using rule 21 (binaria -> expresion TIMES expresion .)
    TIMES           reduce using rule 21 (binaria -> expresion TIMES expresion .)
    DIV             reduce using rule 21 (binaria -> expresion TIMES expresion .)
    LT              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    GT              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    LE              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    GE              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    EQ              reduce using rule 21 (binaria -> expresion TIMES expresion .)
    CONJUNCTION     reduce using rule 21 (binaria -> expresion TIMES expresion .)
    DISJUNCTION     reduce using rule 21 (binaria -> expresion TIMES expresion .)
    SEMICOLON       reduce using rule 21 (binaria -> expresion TIMES expresion .)
    PARENTHESISCLOSE reduce using rule 21 (binaria -> expresion TIMES expresion .)
    COMA            reduce using rule 21 (binaria -> expresion TIMES expresion .)
    LLAVEC          reduce using rule 21 (binaria -> expresion TIMES expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 123

    (22) binaria -> expresion DIV expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    PLUS            reduce using rule 22 (binaria -> expresion DIV expresion .)
    MINUS           reduce using rule 22 (binaria -> expresion DIV expresion .)
    TIMES           reduce using rule 22 (binaria -> expresion DIV expresion .)
    DIV             reduce using rule 22 (binaria -> expresion DIV expresion .)
    LT              reduce using rule 22 (binaria -> expresion DIV expresion .)
    GT              reduce using rule 22 (binaria -> expresion DIV expresion .)
    LE              reduce using rule 22 (binaria -> expresion DIV expresion .)
    GE              reduce using rule 22 (binaria -> expresion DIV expresion .)
    EQ              reduce using rule 22 (binaria -> expresion DIV expresion .)
    CONJUNCTION     reduce using rule 22 (binaria -> expresion DIV expresion .)
    DISJUNCTION     reduce using rule 22 (binaria -> expresion DIV expresion .)
    SEMICOLON       reduce using rule 22 (binaria -> expresion DIV expresion .)
    PARENTHESISCLOSE reduce using rule 22 (binaria -> expresion DIV expresion .)
    COMA            reduce using rule 22 (binaria -> expresion DIV expresion .)
    LLAVEC          reduce using rule 22 (binaria -> expresion DIV expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 124

    (23) binaria -> expresion LT expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 23 (binaria -> expresion LT expresion .)
    GT              reduce using rule 23 (binaria -> expresion LT expresion .)
    LE              reduce using rule 23 (binaria -> expresion LT expresion .)
    GE              reduce using rule 23 (binaria -> expresion LT expresion .)
    EQ              reduce using rule 23 (binaria -> expresion LT expresion .)
    CONJUNCTION     reduce using rule 23 (binaria -> expresion LT expresion .)
    DISJUNCTION     reduce using rule 23 (binaria -> expresion LT expresion .)
    SEMICOLON       reduce using rule 23 (binaria -> expresion LT expresion .)
    PARENTHESISCLOSE reduce using rule 23 (binaria -> expresion LT expresion .)
    COMA            reduce using rule 23 (binaria -> expresion LT expresion .)
    LLAVEC          reduce using rule 23 (binaria -> expresion LT expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86

  ! PLUS            [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! MINUS           [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! TIMES           [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! DIV             [ reduce using rule 23 (binaria -> expresion LT expresion .) ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 125

    (24) binaria -> expresion GT expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 24 (binaria -> expresion GT expresion .)
    GT              reduce using rule 24 (binaria -> expresion GT expresion .)
    LE              reduce using rule 24 (binaria -> expresion GT expresion .)
    GE              reduce using rule 24 (binaria -> expresion GT expresion .)
    EQ              reduce using rule 24 (binaria -> expresion GT expresion .)
    CONJUNCTION     reduce using rule 24 (binaria -> expresion GT expresion .)
    DISJUNCTION     reduce using rule 24 (binaria -> expresion GT expresion .)
    SEMICOLON       reduce using rule 24 (binaria -> expresion GT expresion .)
    PARENTHESISCLOSE reduce using rule 24 (binaria -> expresion GT expresion .)
    COMA            reduce using rule 24 (binaria -> expresion GT expresion .)
    LLAVEC          reduce using rule 24 (binaria -> expresion GT expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86

  ! PLUS            [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! MINUS           [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! TIMES           [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! DIV             [ reduce using rule 24 (binaria -> expresion GT expresion .) ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 126

    (25) binaria -> expresion LE expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 25 (binaria -> expresion LE expresion .)
    GT              reduce using rule 25 (binaria -> expresion LE expresion .)
    LE              reduce using rule 25 (binaria -> expresion LE expresion .)
    GE              reduce using rule 25 (binaria -> expresion LE expresion .)
    EQ              reduce using rule 25 (binaria -> expresion LE expresion .)
    CONJUNCTION     reduce using rule 25 (binaria -> expresion LE expresion .)
    DISJUNCTION     reduce using rule 25 (binaria -> expresion LE expresion .)
    SEMICOLON       reduce using rule 25 (binaria -> expresion LE expresion .)
    PARENTHESISCLOSE reduce using rule 25 (binaria -> expresion LE expresion .)
    COMA            reduce using rule 25 (binaria -> expresion LE expresion .)
    LLAVEC          reduce using rule 25 (binaria -> expresion LE expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86

  ! PLUS            [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! MINUS           [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! TIMES           [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! DIV             [ reduce using rule 25 (binaria -> expresion LE expresion .) ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 127

    (26) binaria -> expresion GE expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    LT              reduce using rule 26 (binaria -> expresion GE expresion .)
    GT              reduce using rule 26 (binaria -> expresion GE expresion .)
    LE              reduce using rule 26 (binaria -> expresion GE expresion .)
    GE              reduce using rule 26 (binaria -> expresion GE expresion .)
    EQ              reduce using rule 26 (binaria -> expresion GE expresion .)
    CONJUNCTION     reduce using rule 26 (binaria -> expresion GE expresion .)
    DISJUNCTION     reduce using rule 26 (binaria -> expresion GE expresion .)
    SEMICOLON       reduce using rule 26 (binaria -> expresion GE expresion .)
    PARENTHESISCLOSE reduce using rule 26 (binaria -> expresion GE expresion .)
    COMA            reduce using rule 26 (binaria -> expresion GE expresion .)
    LLAVEC          reduce using rule 26 (binaria -> expresion GE expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86

  ! PLUS            [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! MINUS           [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! TIMES           [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! DIV             [ reduce using rule 26 (binaria -> expresion GE expresion .) ]
  ! LT              [ shift and go to state 87 ]
  ! GT              [ shift and go to state 88 ]
  ! LE              [ shift and go to state 89 ]
  ! GE              [ shift and go to state 90 ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 128

    (27) binaria -> expresion EQ expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    EQ              reduce using rule 27 (binaria -> expresion EQ expresion .)
    CONJUNCTION     reduce using rule 27 (binaria -> expresion EQ expresion .)
    DISJUNCTION     reduce using rule 27 (binaria -> expresion EQ expresion .)
    SEMICOLON       reduce using rule 27 (binaria -> expresion EQ expresion .)
    PARENTHESISCLOSE reduce using rule 27 (binaria -> expresion EQ expresion .)
    COMA            reduce using rule 27 (binaria -> expresion EQ expresion .)
    LLAVEC          reduce using rule 27 (binaria -> expresion EQ expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90

  ! PLUS            [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! MINUS           [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! TIMES           [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! DIV             [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! LT              [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! GT              [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! LE              [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! GE              [ reduce using rule 27 (binaria -> expresion EQ expresion .) ]
  ! EQ              [ shift and go to state 91 ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 129

    (28) binaria -> expresion CONJUNCTION expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    CONJUNCTION     reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    DISJUNCTION     reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    SEMICOLON       reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    PARENTHESISCLOSE reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    COMA            reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    LLAVEC          reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91

  ! PLUS            [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! MINUS           [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! TIMES           [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! DIV             [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! LT              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! GT              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! LE              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! GE              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! EQ              [ reduce using rule 28 (binaria -> expresion CONJUNCTION expresion .) ]
  ! CONJUNCTION     [ shift and go to state 92 ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 130

    (29) binaria -> expresion DISJUNCTION expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    DISJUNCTION     reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    SEMICOLON       reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    PARENTHESISCLOSE reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    COMA            reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    LLAVEC          reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92

  ! PLUS            [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! MINUS           [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! TIMES           [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! DIV             [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! LT              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! GT              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! LE              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! GE              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! EQ              [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! CONJUNCTION     [ reduce using rule 29 (binaria -> expresion DISJUNCTION expresion .) ]
  ! DISJUNCTION     [ shift and go to state 93 ]


state 131

    (18) expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .

    PLUS            reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    MINUS           reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    TIMES           reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    DIV             reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    LT              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    GT              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    LE              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    GE              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    EQ              reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    CONJUNCTION     reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    DISJUNCTION     reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    SEMICOLON       reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    PARENTHESISCLOSE reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    COMA            reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)
    LLAVEC          reduce using rule 18 (expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE .)


state 132

    (52) acceso_obj -> ID DOT ID . acceso_obj_rec
    (54) acceso_obj_rec -> .
    (55) acceso_obj_rec -> . DOT ID acceso_obj_rec
    (56) acceso_obj_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec

    PLUS            reduce using rule 54 (acceso_obj_rec -> .)
    MINUS           reduce using rule 54 (acceso_obj_rec -> .)
    TIMES           reduce using rule 54 (acceso_obj_rec -> .)
    DIV             reduce using rule 54 (acceso_obj_rec -> .)
    LT              reduce using rule 54 (acceso_obj_rec -> .)
    GT              reduce using rule 54 (acceso_obj_rec -> .)
    LE              reduce using rule 54 (acceso_obj_rec -> .)
    GE              reduce using rule 54 (acceso_obj_rec -> .)
    EQ              reduce using rule 54 (acceso_obj_rec -> .)
    CONJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    DISJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    SEMICOLON       reduce using rule 54 (acceso_obj_rec -> .)
    PARENTHESISCLOSE reduce using rule 54 (acceso_obj_rec -> .)
    COMA            reduce using rule 54 (acceso_obj_rec -> .)
    LLAVEC          reduce using rule 54 (acceso_obj_rec -> .)
    DOT             shift and go to state 155
    BRACKETOPEN     shift and go to state 157

    acceso_obj_rec                 shift and go to state 156

state 133

    (53) acceso_obj -> ID BRACKETOPEN STRING . BRACKETCLOSE acceso_obj_rec

    BRACKETCLOSE    shift and go to state 158


state 134

    (98) objeto_asg -> LLAVEA propiedades_asg LLAVEC .

    PLUS            reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    MINUS           reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    TIMES           reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    DIV             reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    LT              reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    GT              reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    LE              reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    GE              reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    EQ              reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    CONJUNCTION     reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    DISJUNCTION     reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    SEMICOLON       reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    PARENTHESISCLOSE reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    COMA            reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)
    LLAVEC          reduce using rule 98 (objeto_asg -> LLAVEA propiedades_asg LLAVEC .)


state 135

    (101) propiedades_asg -> propiedad_asg COMA . propiedades_asg
    (99) propiedades_asg -> .
    (100) propiedades_asg -> . propiedad_asg
    (101) propiedades_asg -> . propiedad_asg COMA propiedades_asg
    (102) propiedad_asg -> . ID COLON expresion
    (103) propiedad_asg -> . STRING COLON expresion

    LLAVEC          reduce using rule 99 (propiedades_asg -> .)
    ID              shift and go to state 102
    STRING          shift and go to state 103

    propiedad_asg                  shift and go to state 101
    propiedades_asg                shift and go to state 159

state 136

    (102) propiedad_asg -> ID COLON . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 160
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 137

    (103) propiedad_asg -> STRING COLON . expresion
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 161
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 138

    (68) condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves . otra_condicion
    (69) otra_condicion -> .
    (70) otra_condicion -> . ELSE bloque_llaves

    LET             reduce using rule 69 (otra_condicion -> .)
    IF              reduce using rule 69 (otra_condicion -> .)
    WHILE           reduce using rule 69 (otra_condicion -> .)
    FUNCTION        reduce using rule 69 (otra_condicion -> .)
    TYPE            reduce using rule 69 (otra_condicion -> .)
    ID              reduce using rule 69 (otra_condicion -> .)
    $end            reduce using rule 69 (otra_condicion -> .)
    LLAVEC          reduce using rule 69 (otra_condicion -> .)
    RETURN          reduce using rule 69 (otra_condicion -> .)
    ELSE            shift and go to state 163

    otra_condicion                 shift and go to state 162

state 139

    (71) bloque_llaves -> LLAVEA . bloque_programa LLAVEC
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . declaracion SEMICOLON
    (8) sentencia -> . asignacion SEMICOLON
    (9) sentencia -> . condicion
    (10) sentencia -> . bucle
    (11) sentencia -> . funcion
    (12) sentencia -> . declaracion_objeto SEMICOLON
    (13) sentencia -> . asignacion_objeto SEMICOLON
    (14) sentencia -> . function_call SEMICOLON
    (57) declaracion -> . LET lista_id
    (58) declaracion -> . LET lista_id_mas EQUAL expresion
    (67) asignacion -> . lista_id_mas EQUAL expresion
    (68) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (72) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (78) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (88) declaracion_objeto -> . TYPE ID EQUAL objeto_dec
    (97) asignacion_objeto -> . LET ID COLON ID EQUAL objeto_asg
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    LET             shift and go to state 14
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    TYPE            shift and go to state 20
    ID              shift and go to state 19

    bloque_programa                shift and go to state 164
    sentencia                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    declaracion_objeto             shift and go to state 11
    asignacion_objeto              shift and go to state 12
    function_call                  shift and go to state 13
    lista_id_mas                   shift and go to state 15
    acceso_propiedad               shift and go to state 21

state 140

    (72) bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .

    LET             reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    IF              reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    WHILE           reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    FUNCTION        reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    TYPE            reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    ID              reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    $end            reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    LLAVEC          reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)
    RETURN          reduce using rule 72 (bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves .)


state 141

    (81) lista_arg_rec -> ID COLON . tipo
    (82) lista_arg_rec -> ID COLON . tipo COMA lista_arg_rec
    (73) tipo -> . INT
    (74) tipo -> . FLOAT
    (75) tipo -> . CHARACTER
    (76) tipo -> . BOOLEAN
    (77) tipo -> . ID

    INT             shift and go to state 167
    FLOAT           shift and go to state 168
    CHARACTER       shift and go to state 169
    BOOLEAN         shift and go to state 170
    ID              shift and go to state 165

    tipo                           shift and go to state 166

state 142

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE . COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    COLON           shift and go to state 171


state 143

    (86) lista_param_rec -> expresion COMA lista_param_rec .

    PARENTHESISCLOSE reduce using rule 86 (lista_param_rec -> expresion COMA lista_param_rec .)


state 144

    (50) acceso_propiedad_rec -> DOT ID . acceso_propiedad_rec
    (49) acceso_propiedad_rec -> .
    (50) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (51) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    COMA            reduce using rule 49 (acceso_propiedad_rec -> .)
    EQUAL           reduce using rule 49 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 111
    BRACKETOPEN     shift and go to state 113

    acceso_propiedad_rec           shift and go to state 172

state 145

    (51) acceso_propiedad_rec -> BRACKETOPEN STRING . BRACKETCLOSE acceso_propiedad_rec

    BRACKETCLOSE    shift and go to state 173


state 146

    (48) acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .

    COMA            reduce using rule 48 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    EQUAL           reduce using rule 48 (acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)


state 147

    (89) objeto_dec -> LLAVEA propiedades_dec . LLAVEC

    LLAVEC          shift and go to state 174


state 148

    (91) propiedades_dec -> propiedad_dec .
    (92) propiedades_dec -> propiedad_dec . COMA propiedades_dec

    LLAVEC          reduce using rule 91 (propiedades_dec -> propiedad_dec .)
    COMA            shift and go to state 175


state 149

    (93) propiedad_dec -> ID . COLON tipo
    (95) propiedad_dec -> ID . COLON objeto_dec

    COLON           shift and go to state 176


state 150

    (94) propiedad_dec -> STRING . COLON tipo
    (96) propiedad_dec -> STRING . COLON objeto_dec

    COLON           shift and go to state 177


state 151

    (97) asignacion_objeto -> LET ID COLON ID EQUAL objeto_asg .

    SEMICOLON       reduce using rule 97 (asignacion_objeto -> LET ID COLON ID EQUAL objeto_asg .)


state 152

    (59) lista_id -> ID .
    (60) lista_id -> ID . COMA lista_id
    (61) lista_id -> ID . COLON ID
    (62) lista_id -> ID . COLON ID COMA lista_id

    SEMICOLON       reduce using rule 59 (lista_id -> ID .)
    COMA            shift and go to state 178
    COLON           shift and go to state 119


state 153

    (62) lista_id -> ID COLON ID COMA lista_id .

    SEMICOLON       reduce using rule 62 (lista_id -> ID COLON ID COMA lista_id .)


state 154

    (61) lista_id -> ID COLON ID .
    (62) lista_id -> ID COLON ID . COMA lista_id

    SEMICOLON       reduce using rule 61 (lista_id -> ID COLON ID .)
    COMA            shift and go to state 118


state 155

    (55) acceso_obj_rec -> DOT . ID acceso_obj_rec

    ID              shift and go to state 179


state 156

    (52) acceso_obj -> ID DOT ID acceso_obj_rec .

    PLUS            reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    MINUS           reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    TIMES           reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    DIV             reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    LT              reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    GT              reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    LE              reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    GE              reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    EQ              reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    CONJUNCTION     reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    DISJUNCTION     reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    SEMICOLON       reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    PARENTHESISCLOSE reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    COMA            reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)
    LLAVEC          reduce using rule 52 (acceso_obj -> ID DOT ID acceso_obj_rec .)


state 157

    (56) acceso_obj_rec -> BRACKETOPEN . STRING BRACKETCLOSE acceso_obj_rec

    STRING          shift and go to state 180


state 158

    (53) acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE . acceso_obj_rec
    (54) acceso_obj_rec -> .
    (55) acceso_obj_rec -> . DOT ID acceso_obj_rec
    (56) acceso_obj_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec

    PLUS            reduce using rule 54 (acceso_obj_rec -> .)
    MINUS           reduce using rule 54 (acceso_obj_rec -> .)
    TIMES           reduce using rule 54 (acceso_obj_rec -> .)
    DIV             reduce using rule 54 (acceso_obj_rec -> .)
    LT              reduce using rule 54 (acceso_obj_rec -> .)
    GT              reduce using rule 54 (acceso_obj_rec -> .)
    LE              reduce using rule 54 (acceso_obj_rec -> .)
    GE              reduce using rule 54 (acceso_obj_rec -> .)
    EQ              reduce using rule 54 (acceso_obj_rec -> .)
    CONJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    DISJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    SEMICOLON       reduce using rule 54 (acceso_obj_rec -> .)
    PARENTHESISCLOSE reduce using rule 54 (acceso_obj_rec -> .)
    COMA            reduce using rule 54 (acceso_obj_rec -> .)
    LLAVEC          reduce using rule 54 (acceso_obj_rec -> .)
    DOT             shift and go to state 155
    BRACKETOPEN     shift and go to state 157

    acceso_obj_rec                 shift and go to state 181

state 159

    (101) propiedades_asg -> propiedad_asg COMA propiedades_asg .

    LLAVEC          reduce using rule 101 (propiedades_asg -> propiedad_asg COMA propiedades_asg .)


state 160

    (102) propiedad_asg -> ID COLON expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    COMA            reduce using rule 102 (propiedad_asg -> ID COLON expresion .)
    LLAVEC          reduce using rule 102 (propiedad_asg -> ID COLON expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 161

    (103) propiedad_asg -> STRING COLON expresion .
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    COMA            reduce using rule 103 (propiedad_asg -> STRING COLON expresion .)
    LLAVEC          reduce using rule 103 (propiedad_asg -> STRING COLON expresion .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 162

    (68) condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .

    LET             reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    IF              reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    WHILE           reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    FUNCTION        reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    TYPE            reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    ID              reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    $end            reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    LLAVEC          reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)
    RETURN          reduce using rule 68 (condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion .)


state 163

    (70) otra_condicion -> ELSE . bloque_llaves
    (71) bloque_llaves -> . LLAVEA bloque_programa LLAVEC

    LLAVEA          shift and go to state 139

    bloque_llaves                  shift and go to state 182

state 164

    (71) bloque_llaves -> LLAVEA bloque_programa . LLAVEC

    LLAVEC          shift and go to state 183


state 165

    (77) tipo -> ID .

    COMA            reduce using rule 77 (tipo -> ID .)
    PARENTHESISCLOSE reduce using rule 77 (tipo -> ID .)
    LLAVEA          reduce using rule 77 (tipo -> ID .)
    LLAVEC          reduce using rule 77 (tipo -> ID .)


state 166

    (81) lista_arg_rec -> ID COLON tipo .
    (82) lista_arg_rec -> ID COLON tipo . COMA lista_arg_rec

    PARENTHESISCLOSE reduce using rule 81 (lista_arg_rec -> ID COLON tipo .)
    COMA            shift and go to state 184


state 167

    (73) tipo -> INT .

    COMA            reduce using rule 73 (tipo -> INT .)
    PARENTHESISCLOSE reduce using rule 73 (tipo -> INT .)
    LLAVEA          reduce using rule 73 (tipo -> INT .)
    LLAVEC          reduce using rule 73 (tipo -> INT .)


state 168

    (74) tipo -> FLOAT .

    COMA            reduce using rule 74 (tipo -> FLOAT .)
    PARENTHESISCLOSE reduce using rule 74 (tipo -> FLOAT .)
    LLAVEA          reduce using rule 74 (tipo -> FLOAT .)
    LLAVEC          reduce using rule 74 (tipo -> FLOAT .)


state 169

    (75) tipo -> CHARACTER .

    COMA            reduce using rule 75 (tipo -> CHARACTER .)
    PARENTHESISCLOSE reduce using rule 75 (tipo -> CHARACTER .)
    LLAVEA          reduce using rule 75 (tipo -> CHARACTER .)
    LLAVEC          reduce using rule 75 (tipo -> CHARACTER .)


state 170

    (76) tipo -> BOOLEAN .

    COMA            reduce using rule 76 (tipo -> BOOLEAN .)
    PARENTHESISCLOSE reduce using rule 76 (tipo -> BOOLEAN .)
    LLAVEA          reduce using rule 76 (tipo -> BOOLEAN .)
    LLAVEC          reduce using rule 76 (tipo -> BOOLEAN .)


state 171

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON . tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (73) tipo -> . INT
    (74) tipo -> . FLOAT
    (75) tipo -> . CHARACTER
    (76) tipo -> . BOOLEAN
    (77) tipo -> . ID

    INT             shift and go to state 167
    FLOAT           shift and go to state 168
    CHARACTER       shift and go to state 169
    BOOLEAN         shift and go to state 170
    ID              shift and go to state 165

    tipo                           shift and go to state 185

state 172

    (50) acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .

    COMA            reduce using rule 50 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)
    EQUAL           reduce using rule 50 (acceso_propiedad_rec -> DOT ID acceso_propiedad_rec .)


state 173

    (51) acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE . acceso_propiedad_rec
    (49) acceso_propiedad_rec -> .
    (50) acceso_propiedad_rec -> . DOT ID acceso_propiedad_rec
    (51) acceso_propiedad_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    COMA            reduce using rule 49 (acceso_propiedad_rec -> .)
    EQUAL           reduce using rule 49 (acceso_propiedad_rec -> .)
    DOT             shift and go to state 111
    BRACKETOPEN     shift and go to state 113

    acceso_propiedad_rec           shift and go to state 186

state 174

    (89) objeto_dec -> LLAVEA propiedades_dec LLAVEC .

    SEMICOLON       reduce using rule 89 (objeto_dec -> LLAVEA propiedades_dec LLAVEC .)
    COMA            reduce using rule 89 (objeto_dec -> LLAVEA propiedades_dec LLAVEC .)
    LLAVEC          reduce using rule 89 (objeto_dec -> LLAVEA propiedades_dec LLAVEC .)


state 175

    (92) propiedades_dec -> propiedad_dec COMA . propiedades_dec
    (90) propiedades_dec -> .
    (91) propiedades_dec -> . propiedad_dec
    (92) propiedades_dec -> . propiedad_dec COMA propiedades_dec
    (93) propiedad_dec -> . ID COLON tipo
    (94) propiedad_dec -> . STRING COLON tipo
    (95) propiedad_dec -> . ID COLON objeto_dec
    (96) propiedad_dec -> . STRING COLON objeto_dec

    LLAVEC          reduce using rule 90 (propiedades_dec -> .)
    ID              shift and go to state 149
    STRING          shift and go to state 150

    propiedad_dec                  shift and go to state 148
    propiedades_dec                shift and go to state 187

state 176

    (93) propiedad_dec -> ID COLON . tipo
    (95) propiedad_dec -> ID COLON . objeto_dec
    (73) tipo -> . INT
    (74) tipo -> . FLOAT
    (75) tipo -> . CHARACTER
    (76) tipo -> . BOOLEAN
    (77) tipo -> . ID
    (89) objeto_dec -> . LLAVEA propiedades_dec LLAVEC

    INT             shift and go to state 167
    FLOAT           shift and go to state 168
    CHARACTER       shift and go to state 169
    BOOLEAN         shift and go to state 170
    ID              shift and go to state 165
    LLAVEA          shift and go to state 116

    tipo                           shift and go to state 188
    objeto_dec                     shift and go to state 189

state 177

    (94) propiedad_dec -> STRING COLON . tipo
    (96) propiedad_dec -> STRING COLON . objeto_dec
    (73) tipo -> . INT
    (74) tipo -> . FLOAT
    (75) tipo -> . CHARACTER
    (76) tipo -> . BOOLEAN
    (77) tipo -> . ID
    (89) objeto_dec -> . LLAVEA propiedades_dec LLAVEC

    INT             shift and go to state 167
    FLOAT           shift and go to state 168
    CHARACTER       shift and go to state 169
    BOOLEAN         shift and go to state 170
    ID              shift and go to state 165
    LLAVEA          shift and go to state 116

    tipo                           shift and go to state 190
    objeto_dec                     shift and go to state 191

state 178

    (60) lista_id -> ID COMA . lista_id
    (59) lista_id -> . ID
    (60) lista_id -> . ID COMA lista_id
    (61) lista_id -> . ID COLON ID
    (62) lista_id -> . ID COLON ID COMA lista_id

    ID              shift and go to state 152

    lista_id                       shift and go to state 82

state 179

    (55) acceso_obj_rec -> DOT ID . acceso_obj_rec
    (54) acceso_obj_rec -> .
    (55) acceso_obj_rec -> . DOT ID acceso_obj_rec
    (56) acceso_obj_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec

    PLUS            reduce using rule 54 (acceso_obj_rec -> .)
    MINUS           reduce using rule 54 (acceso_obj_rec -> .)
    TIMES           reduce using rule 54 (acceso_obj_rec -> .)
    DIV             reduce using rule 54 (acceso_obj_rec -> .)
    LT              reduce using rule 54 (acceso_obj_rec -> .)
    GT              reduce using rule 54 (acceso_obj_rec -> .)
    LE              reduce using rule 54 (acceso_obj_rec -> .)
    GE              reduce using rule 54 (acceso_obj_rec -> .)
    EQ              reduce using rule 54 (acceso_obj_rec -> .)
    CONJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    DISJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    SEMICOLON       reduce using rule 54 (acceso_obj_rec -> .)
    PARENTHESISCLOSE reduce using rule 54 (acceso_obj_rec -> .)
    COMA            reduce using rule 54 (acceso_obj_rec -> .)
    LLAVEC          reduce using rule 54 (acceso_obj_rec -> .)
    DOT             shift and go to state 155
    BRACKETOPEN     shift and go to state 157

    acceso_obj_rec                 shift and go to state 192

state 180

    (56) acceso_obj_rec -> BRACKETOPEN STRING . BRACKETCLOSE acceso_obj_rec

    BRACKETCLOSE    shift and go to state 193


state 181

    (53) acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .

    PLUS            reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    MINUS           reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    TIMES           reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    DIV             reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    LT              reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    GT              reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    LE              reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    GE              reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    EQ              reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    CONJUNCTION     reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    DISJUNCTION     reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    SEMICOLON       reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    PARENTHESISCLOSE reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    COMA            reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    LLAVEC          reduce using rule 53 (acceso_obj -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)


state 182

    (70) otra_condicion -> ELSE bloque_llaves .

    LET             reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    IF              reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    WHILE           reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    FUNCTION        reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    TYPE            reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    ID              reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    $end            reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    LLAVEC          reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)
    RETURN          reduce using rule 70 (otra_condicion -> ELSE bloque_llaves .)


state 183

    (71) bloque_llaves -> LLAVEA bloque_programa LLAVEC .

    ELSE            reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    LET             reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    IF              reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    WHILE           reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    FUNCTION        reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    TYPE            reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    ID              reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    $end            reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    LLAVEC          reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)
    RETURN          reduce using rule 71 (bloque_llaves -> LLAVEA bloque_programa LLAVEC .)


state 184

    (82) lista_arg_rec -> ID COLON tipo COMA . lista_arg_rec
    (81) lista_arg_rec -> . ID COLON tipo
    (82) lista_arg_rec -> . ID COLON tipo COMA lista_arg_rec

    ID              shift and go to state 106

    lista_arg_rec                  shift and go to state 194

state 185

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo . LLAVEA axioma RETURN expresion SEMICOLON LLAVEC

    LLAVEA          shift and go to state 195


state 186

    (51) acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .

    COMA            reduce using rule 51 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)
    EQUAL           reduce using rule 51 (acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec .)


state 187

    (92) propiedades_dec -> propiedad_dec COMA propiedades_dec .

    LLAVEC          reduce using rule 92 (propiedades_dec -> propiedad_dec COMA propiedades_dec .)


state 188

    (93) propiedad_dec -> ID COLON tipo .

    COMA            reduce using rule 93 (propiedad_dec -> ID COLON tipo .)
    LLAVEC          reduce using rule 93 (propiedad_dec -> ID COLON tipo .)


state 189

    (95) propiedad_dec -> ID COLON objeto_dec .

    COMA            reduce using rule 95 (propiedad_dec -> ID COLON objeto_dec .)
    LLAVEC          reduce using rule 95 (propiedad_dec -> ID COLON objeto_dec .)


state 190

    (94) propiedad_dec -> STRING COLON tipo .

    COMA            reduce using rule 94 (propiedad_dec -> STRING COLON tipo .)
    LLAVEC          reduce using rule 94 (propiedad_dec -> STRING COLON tipo .)


state 191

    (96) propiedad_dec -> STRING COLON objeto_dec .

    COMA            reduce using rule 96 (propiedad_dec -> STRING COLON objeto_dec .)
    LLAVEC          reduce using rule 96 (propiedad_dec -> STRING COLON objeto_dec .)


state 192

    (55) acceso_obj_rec -> DOT ID acceso_obj_rec .

    PLUS            reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    MINUS           reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    TIMES           reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    DIV             reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    LT              reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    GT              reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    LE              reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    GE              reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    EQ              reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    CONJUNCTION     reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    DISJUNCTION     reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    SEMICOLON       reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    PARENTHESISCLOSE reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    COMA            reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)
    LLAVEC          reduce using rule 55 (acceso_obj_rec -> DOT ID acceso_obj_rec .)


state 193

    (56) acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE . acceso_obj_rec
    (54) acceso_obj_rec -> .
    (55) acceso_obj_rec -> . DOT ID acceso_obj_rec
    (56) acceso_obj_rec -> . BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec

    PLUS            reduce using rule 54 (acceso_obj_rec -> .)
    MINUS           reduce using rule 54 (acceso_obj_rec -> .)
    TIMES           reduce using rule 54 (acceso_obj_rec -> .)
    DIV             reduce using rule 54 (acceso_obj_rec -> .)
    LT              reduce using rule 54 (acceso_obj_rec -> .)
    GT              reduce using rule 54 (acceso_obj_rec -> .)
    LE              reduce using rule 54 (acceso_obj_rec -> .)
    GE              reduce using rule 54 (acceso_obj_rec -> .)
    EQ              reduce using rule 54 (acceso_obj_rec -> .)
    CONJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    DISJUNCTION     reduce using rule 54 (acceso_obj_rec -> .)
    SEMICOLON       reduce using rule 54 (acceso_obj_rec -> .)
    PARENTHESISCLOSE reduce using rule 54 (acceso_obj_rec -> .)
    COMA            reduce using rule 54 (acceso_obj_rec -> .)
    LLAVEC          reduce using rule 54 (acceso_obj_rec -> .)
    DOT             shift and go to state 155
    BRACKETOPEN     shift and go to state 157

    acceso_obj_rec                 shift and go to state 196

state 194

    (82) lista_arg_rec -> ID COLON tipo COMA lista_arg_rec .

    PARENTHESISCLOSE reduce using rule 82 (lista_arg_rec -> ID COLON tipo COMA lista_arg_rec .)


state 195

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA . axioma RETURN expresion SEMICOLON LLAVEC
    (2) axioma -> . programa
    (3) axioma -> . empty
    (4) programa -> . bloque_programa
    (1) empty -> .
    (5) bloque_programa -> . sentencia
    (6) bloque_programa -> . sentencia bloque_programa
    (7) sentencia -> . declaracion SEMICOLON
    (8) sentencia -> . asignacion SEMICOLON
    (9) sentencia -> . condicion
    (10) sentencia -> . bucle
    (11) sentencia -> . funcion
    (12) sentencia -> . declaracion_objeto SEMICOLON
    (13) sentencia -> . asignacion_objeto SEMICOLON
    (14) sentencia -> . function_call SEMICOLON
    (57) declaracion -> . LET lista_id
    (58) declaracion -> . LET lista_id_mas EQUAL expresion
    (67) asignacion -> . lista_id_mas EQUAL expresion
    (68) condicion -> . IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion
    (72) bucle -> . WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves
    (78) funcion -> . FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC
    (88) declaracion_objeto -> . TYPE ID EQUAL objeto_dec
    (97) asignacion_objeto -> . LET ID COLON ID EQUAL objeto_asg
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE
    (63) lista_id_mas -> . ID
    (64) lista_id_mas -> . ID COMA lista_id_mas
    (65) lista_id_mas -> . acceso_propiedad
    (66) lista_id_mas -> . acceso_propiedad COMA lista_id_mas
    (47) acceso_propiedad -> . ID DOT ID acceso_propiedad_rec
    (48) acceso_propiedad -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec

    RETURN          reduce using rule 1 (empty -> .)
    LET             shift and go to state 14
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FUNCTION        shift and go to state 18
    TYPE            shift and go to state 20
    ID              shift and go to state 19

    axioma                         shift and go to state 197
    programa                       shift and go to state 2
    empty                          shift and go to state 3
    bloque_programa                shift and go to state 4
    sentencia                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    condicion                      shift and go to state 8
    bucle                          shift and go to state 9
    funcion                        shift and go to state 10
    declaracion_objeto             shift and go to state 11
    asignacion_objeto              shift and go to state 12
    function_call                  shift and go to state 13
    lista_id_mas                   shift and go to state 15
    acceso_propiedad               shift and go to state 21

state 196

    (56) acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .

    PLUS            reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    MINUS           reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    TIMES           reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    DIV             reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    LT              reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    GT              reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    LE              reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    GE              reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    EQ              reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    CONJUNCTION     reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    DISJUNCTION     reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    SEMICOLON       reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    PARENTHESISCLOSE reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    COMA            reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)
    LLAVEC          reduce using rule 56 (acceso_obj_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec .)


state 197

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma . RETURN expresion SEMICOLON LLAVEC

    RETURN          shift and go to state 198


state 198

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN . expresion SEMICOLON LLAVEC
    (15) expresion -> . literal
    (16) expresion -> . binaria
    (17) expresion -> . unaria
    (18) expresion -> . PARENTHESISOPEN expresion PARENTHESISCLOSE
    (44) expresion -> . objeto_asg
    (45) expresion -> . acceso_obj
    (46) expresion -> . function_call
    (33) literal -> . ID
    (34) literal -> . ENTERO
    (35) literal -> . BIN
    (36) literal -> . OCT
    (37) literal -> . HEX
    (38) literal -> . REAL
    (39) literal -> . NCIENT
    (40) literal -> . CHAR
    (41) literal -> . TR
    (42) literal -> . FL
    (43) literal -> . NULL
    (19) binaria -> . expresion PLUS expresion
    (20) binaria -> . expresion MINUS expresion
    (21) binaria -> . expresion TIMES expresion
    (22) binaria -> . expresion DIV expresion
    (23) binaria -> . expresion LT expresion
    (24) binaria -> . expresion GT expresion
    (25) binaria -> . expresion LE expresion
    (26) binaria -> . expresion GE expresion
    (27) binaria -> . expresion EQ expresion
    (28) binaria -> . expresion CONJUNCTION expresion
    (29) binaria -> . expresion DISJUNCTION expresion
    (30) unaria -> . PLUS expresion
    (31) unaria -> . MINUS expresion
    (32) unaria -> . NEG expresion
    (98) objeto_asg -> . LLAVEA propiedades_asg LLAVEC
    (52) acceso_obj -> . ID DOT ID acceso_obj_rec
    (53) acceso_obj -> . ID BRACKETOPEN STRING BRACKETCLOSE acceso_obj_rec
    (83) function_call -> . ID PARENTHESISOPEN lista_param PARENTHESISCLOSE

    PARENTHESISOPEN shift and go to state 48
    ID              shift and go to state 52
    ENTERO          shift and go to state 53
    BIN             shift and go to state 54
    OCT             shift and go to state 55
    HEX             shift and go to state 56
    REAL            shift and go to state 57
    NCIENT          shift and go to state 58
    CHAR            shift and go to state 59
    TR              shift and go to state 60
    FL              shift and go to state 61
    NULL            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NEG             shift and go to state 65
    LLAVEA          shift and go to state 66

    expresion                      shift and go to state 199
    literal                        shift and go to state 45
    binaria                        shift and go to state 46
    unaria                         shift and go to state 47
    objeto_asg                     shift and go to state 49
    acceso_obj                     shift and go to state 50
    function_call                  shift and go to state 51

state 199

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion . SEMICOLON LLAVEC
    (19) binaria -> expresion . PLUS expresion
    (20) binaria -> expresion . MINUS expresion
    (21) binaria -> expresion . TIMES expresion
    (22) binaria -> expresion . DIV expresion
    (23) binaria -> expresion . LT expresion
    (24) binaria -> expresion . GT expresion
    (25) binaria -> expresion . LE expresion
    (26) binaria -> expresion . GE expresion
    (27) binaria -> expresion . EQ expresion
    (28) binaria -> expresion . CONJUNCTION expresion
    (29) binaria -> expresion . DISJUNCTION expresion

    SEMICOLON       shift and go to state 200
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIV             shift and go to state 86
    LT              shift and go to state 87
    GT              shift and go to state 88
    LE              shift and go to state 89
    GE              shift and go to state 90
    EQ              shift and go to state 91
    CONJUNCTION     shift and go to state 92
    DISJUNCTION     shift and go to state 93


state 200

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON . LLAVEC

    LLAVEC          shift and go to state 201


state 201

    (78) funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .

    LET             reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    IF              reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    WHILE           reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    FUNCTION        reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    TYPE            reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    ID              reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    $end            reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    LLAVEC          reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)
    RETURN          reduce using rule 78 (funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC .)

