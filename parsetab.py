
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'axiomaleftDISJUNCTIONleftCONJUNCTIONnonassocEQLTGTLEGEleftPLUSMINUSleftTIMESDIVrightUPLUSUMINUSrightNEGBIN BOOLEAN BRACKETCLOSE BRACKETOPEN CHAR CHARACTER COLON COMA CONJUNCTION DISJUNCTION DIV DOT ELSE ENTERO EQ EQUAL FL FLOAT FUNCTION GE GT HEX ID IF INT LE LET LLAVEA LLAVEC LT MINUS NCIENT NEG NULL OCT PARENTHESISCLOSE PARENTHESISOPEN PLUS REAL RETURN SEMICOLON STRING TIMES TR TYPE WHILEempty :axioma : programa\n                  | emptyprograma : bloque_programabloque_programa : sentencia\n                           | sentencia bloque_programasentencia : declaracion SEMICOLON\n                     | asignacion SEMICOLON\n                     | condicion\n                     | bucle \n                     | funcion\n                     | declaracion_objeto SEMICOLON\n                     | asignacion_objeto SEMICOLON\n                     | function_call SEMICOLONexpresion : binaria\n                     | unaria\n                     | PARENTHESISOPEN expresion PARENTHESISCLOSE\n                     | asg_ajsonbinaria : expresion PLUS expresion\n                   | expresion MINUS expresionbinaria : expresion TIMES expresion\n                   | expresion DIV expresionbinaria : expresion LT expresion\n                   | expresion GT expresion\n                   | expresion LE expresion\n                   | expresion GE expresionbinaria : expresion EQ expresionbinaria : expresion CONJUNCTION expresion\n                   | expresion DISJUNCTION expresionunaria : PLUS expresion %prec UPLUS\n                  | MINUS expresion %prec UMINUS\n                  | NEG expresionexpresion : IDexpresion : ENTERO\n                     | BIN\n                     | OCT\n                     | HEXexpresion : REAL\n                     | NCIENTexpresion : CHARexpresion : TR\n                     | FLexpresion : NULLexpresion : function_call\n                     | acceso_propiedadacceso_propiedad : ID DOT ID acceso_propiedad_rec\n                            | ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_recacceso_propiedad_rec : \n                                | DOT ID acceso_propiedad_rec\n                                | BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_recdeclaracion : LET lista_id\n                       | LET lista_id_norm EQUAL expresionlista_id_norm : ID lista_id_nreclista_id_nrec :\n                         | COMA ID lista_id_nreclista_id : ID lista_id_reclista_id : ID COLON ID lista_id_rec\n                    | acceso_propiedad lista_id_reclista_id_rec : \n                        | COMA ID lista_id_rec\n                        | COMA ID COLON ID lista_id_rec\n                        | acceso_propiedad lista_id_recasignacion : lista_id EQUAL expresioncondicion : IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicionotra_condicion : \n                          | ELSE bloque_llavesbloque_llaves : LLAVEA bloque_programa LLAVECbucle : WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llavestipo : INT\n                | FLOAT\n                | CHARACTER\n                | BOOLEAN\n                | IDfuncion : FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEClista_arg : \n                     | lista_arg_reclista_arg_rec : ID COLON tipo\n                         | ID COLON tipo COMA lista_arg_recfunction_call : ID PARENTHESISOPEN lista_param PARENTHESISCLOSElista_param : \n                       | lista_param_reclista_param_rec : expresion COMA lista_param_rec\n                           | expresiondeclaracion_objeto : TYPE ID EQUAL def_ajsondef_ajson : LLAVEA def_propiedades LLAVECdef_propiedades : \n                           | ID COLON valor_def_propiedad def_propiedades_rec\n                           | STRING COLON valor_def_propiedad def_propiedades_recdef_propiedades_rec : COMA def_propiedades\n                               | valor_def_propiedad : tipo\n                               | def_ajsonasignacion_objeto : LET ID COLON ID EQUAL asg_ajsonasg_ajson : LLAVEA asg_propiedades LLAVECasg_propiedades :\n                           | ID COLON valor_asg_propiedad asg_propiedades_rec\n                           | STRING COLON valor_asg_propiedad asg_propiedades_recasg_propiedades_rec : COMA asg_propiedades\n                               | valor_asg_propiedad : expresion'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,9,10,22,23,24,25,26,27,137,139,154,173,174,193,],[-1,0,-2,-3,-4,-5,-9,-10,-11,-6,-7,-8,-12,-13,-14,-65,-68,-64,-66,-67,-74,]),'LET':([0,5,8,9,10,23,24,25,26,27,137,138,139,154,173,174,184,193,],[14,14,-9,-10,-11,-7,-8,-12,-13,-14,-65,14,-68,-64,-66,-67,14,-74,]),'IF':([0,5,8,9,10,23,24,25,26,27,137,138,139,154,173,174,184,193,],[16,16,-9,-10,-11,-7,-8,-12,-13,-14,-65,16,-68,-64,-66,-67,16,-74,]),'WHILE':([0,5,8,9,10,23,24,25,26,27,137,138,139,154,173,174,184,193,],[17,17,-9,-10,-11,-7,-8,-12,-13,-14,-65,17,-68,-64,-66,-67,17,-74,]),'FUNCTION':([0,5,8,9,10,23,24,25,26,27,137,138,139,154,173,174,184,193,],[18,18,-9,-10,-11,-7,-8,-12,-13,-14,-65,18,-68,-64,-66,-67,18,-74,]),'TYPE':([0,5,8,9,10,23,24,25,26,27,137,138,139,154,173,174,184,193,],[20,20,-9,-10,-11,-7,-8,-12,-13,-14,-65,20,-68,-64,-66,-67,20,-74,]),'ID':([0,5,8,9,10,14,18,19,20,21,23,24,25,26,27,30,31,32,33,36,38,39,41,42,45,46,48,52,67,68,69,70,73,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,110,112,113,115,117,119,135,136,137,138,139,140,143,145,146,154,163,164,165,168,169,171,173,174,175,177,184,186,190,193,],[19,19,-9,-10,-11,30,34,35,43,35,-7,-8,-12,-13,-14,35,54,54,54,54,77,78,80,35,54,84,85,54,54,54,54,102,106,35,-48,35,35,35,54,54,54,54,54,54,54,54,54,54,54,54,143,-46,-48,146,148,54,54,-65,19,-68,157,-48,-47,35,-64,157,-49,-48,157,157,102,-66,-67,106,-50,19,148,54,-74,]),'RETURN':([2,3,4,5,8,9,10,22,23,24,25,26,27,137,139,154,173,174,184,188,193,],[-2,-3,-4,-5,-9,-10,-11,-6,-7,-8,-12,-13,-14,-65,-68,-64,-66,-67,-1,190,-74,]),'LLAVEC':([5,8,9,10,22,23,24,25,26,27,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,78,98,99,100,101,109,113,115,119,122,123,124,125,126,127,128,129,130,131,132,133,134,137,139,143,145,147,151,152,153,154,156,157,159,160,161,162,164,165,167,170,171,172,173,174,177,178,179,180,181,182,185,186,187,189,192,193,],[-5,-9,-10,-11,-6,-7,-8,-12,-13,-14,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-95,-48,-30,-31,-32,134,-79,-46,-48,-86,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-17,-94,-65,-68,-48,-47,167,-99,-100,-99,-64,174,-73,-69,-70,-71,-72,-49,-48,-85,-96,-95,-97,-66,-67,-50,-90,-91,-92,-90,-98,-87,-86,-88,-89,193,-74,]),'SEMICOLON':([6,7,11,12,13,21,28,30,37,42,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,78,80,81,83,84,85,98,99,100,109,111,113,115,116,118,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,146,150,164,165,166,167,177,191,],[23,24,25,26,27,-59,-51,-59,-56,-59,-58,-63,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-48,-59,-62,-52,-59,-59,-30,-31,-32,-79,-57,-46,-48,-60,-84,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-17,-94,-48,-47,-59,-93,-49,-48,-61,-85,-50,192,]),'EQUAL':([15,19,21,29,30,37,42,43,44,47,77,78,80,81,84,85,111,113,115,116,121,143,145,146,164,165,166,177,],[31,-59,-59,45,-54,-56,-59,82,-58,-53,-59,-48,-59,-62,120,-54,-57,-46,-48,-60,-55,-48,-47,-59,-49,-48,-61,-50,]),'PARENTHESISOPEN':([16,17,19,31,32,33,34,36,45,52,54,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[32,33,36,52,52,52,73,52,52,52,36,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'COLON':([19,30,80,85,102,103,106,141,148,149,],[38,46,117,117,135,136,140,163,168,169,]),'DOT':([19,30,35,54,78,115,143,165,],[39,39,39,39,112,112,112,112,]),'BRACKETOPEN':([19,30,35,54,78,115,143,165,],[40,40,40,40,114,114,114,114,]),'COMA':([19,21,30,42,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,76,77,78,80,84,85,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,146,151,152,153,157,158,159,160,161,162,164,165,167,177,178,179,180,181,],[41,41,48,41,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,110,41,-48,41,41,48,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-17,-94,-48,-47,41,171,-100,171,-73,175,-69,-70,-71,-72,-49,-48,-85,-50,186,-91,-92,186,]),'ENTERO':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'BIN':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OCT':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'HEX':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'REAL':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'NCIENT':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'CHAR':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TR':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FL':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'NULL':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'PLUS':([31,32,33,36,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,76,78,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,110,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,145,152,164,165,177,190,191,],[67,67,67,67,67,86,-15,-16,67,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,67,67,67,86,86,86,-48,86,67,67,67,67,67,67,67,67,67,67,67,86,-30,-31,-32,-79,67,-46,-48,-19,-20,-21,-22,86,86,86,86,86,86,86,-17,-94,67,67,-48,-47,86,-49,-48,-50,67,86,]),'MINUS':([31,32,33,36,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,76,78,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,110,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,145,152,164,165,177,190,191,],[68,68,68,68,68,87,-15,-16,68,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,68,68,68,87,87,87,-48,87,68,68,68,68,68,68,68,68,68,68,68,87,-30,-31,-32,-79,68,-46,-48,-19,-20,-21,-22,87,87,87,87,87,87,87,-17,-94,68,68,-48,-47,87,-49,-48,-50,68,87,]),'NEG':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'LLAVEA':([31,32,33,36,45,52,67,68,69,82,86,87,88,89,90,91,92,93,94,95,96,104,105,110,120,135,136,155,157,159,160,161,162,168,169,176,190,],[70,70,70,70,70,70,70,70,70,119,70,70,70,70,70,70,70,70,70,70,70,138,138,70,70,70,70,138,-73,-69,-70,-71,-72,119,119,184,70,]),'PARENTHESISCLOSE':([36,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,73,74,75,76,78,97,98,99,100,107,108,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,157,158,159,160,161,162,164,165,177,183,],[-80,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,104,105,-75,109,-81,-83,-48,133,-30,-31,-32,141,-76,-79,-46,-48,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-17,-94,-82,-48,-47,-73,-77,-69,-70,-71,-72,-49,-48,-50,-78,]),'STRING':([40,70,114,119,171,186,],[79,103,144,149,103,149,]),'TIMES':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[88,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,88,88,88,-48,88,88,-30,-31,-32,-79,-46,-48,88,88,-21,-22,88,88,88,88,88,88,88,-17,-94,-48,-47,88,-49,-48,-50,88,]),'DIV':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[89,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,89,89,89,-48,89,89,-30,-31,-32,-79,-46,-48,89,89,-21,-22,89,89,89,89,89,89,89,-17,-94,-48,-47,89,-49,-48,-50,89,]),'LT':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[90,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,90,90,90,-48,90,90,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,None,None,None,None,None,90,90,-17,-94,-48,-47,90,-49,-48,-50,90,]),'GT':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[91,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,91,91,91,-48,91,91,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,None,None,None,None,None,91,91,-17,-94,-48,-47,91,-49,-48,-50,91,]),'LE':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[92,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,92,92,92,-48,92,92,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,None,None,None,None,None,92,92,-17,-94,-48,-47,92,-49,-48,-50,92,]),'GE':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[93,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,93,93,93,-48,93,93,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,None,None,None,None,None,93,93,-17,-94,-48,-47,93,-49,-48,-50,93,]),'EQ':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[94,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,94,94,94,-48,94,94,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,None,None,None,None,None,94,94,-17,-94,-48,-47,94,-49,-48,-50,94,]),'CONJUNCTION':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[95,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,95,95,95,-48,95,95,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,95,-17,-94,-48,-47,95,-49,-48,-50,95,]),'DISJUNCTION':([49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,76,78,83,97,98,99,100,109,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,143,145,152,164,165,177,191,],[96,-15,-16,-18,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,96,96,96,-48,96,96,-30,-31,-32,-79,-46,-48,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-17,-94,-48,-47,96,-49,-48,-50,96,]),'BRACKETCLOSE':([79,144,],[115,165,]),'ELSE':([137,174,],[155,-67,]),'INT':([140,163,168,169,],[159,159,159,159,]),'FLOAT':([140,163,168,169,],[160,160,160,160,]),'CHARACTER':([140,163,168,169,],[161,161,161,161,]),'BOOLEAN':([140,163,168,169,],[162,162,162,162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,184,],[1,188,]),'programa':([0,184,],[2,2,]),'empty':([0,184,],[3,3,]),'bloque_programa':([0,5,138,184,],[4,22,156,4,]),'sentencia':([0,5,138,184,],[5,5,5,5,]),'declaracion':([0,5,138,184,],[6,6,6,6,]),'asignacion':([0,5,138,184,],[7,7,7,7,]),'condicion':([0,5,138,184,],[8,8,8,8,]),'bucle':([0,5,138,184,],[9,9,9,9,]),'funcion':([0,5,138,184,],[10,10,10,10,]),'declaracion_objeto':([0,5,138,184,],[11,11,11,11,]),'asignacion_objeto':([0,5,138,184,],[12,12,12,12,]),'function_call':([0,5,31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,138,184,190,],[13,13,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,13,13,65,]),'lista_id':([0,5,14,138,184,],[15,15,28,15,15,]),'acceso_propiedad':([0,5,14,19,21,30,31,32,33,36,42,45,52,67,68,69,77,80,84,85,86,87,88,89,90,91,92,93,94,95,96,110,135,136,138,146,184,190,],[21,21,21,42,42,42,66,66,66,66,42,66,66,66,66,66,42,42,42,42,66,66,66,66,66,66,66,66,66,66,66,66,66,66,21,42,21,66,]),'lista_id_norm':([14,],[29,]),'lista_id_rec':([19,21,30,42,77,80,84,85,146,],[37,44,37,81,111,116,111,116,166,]),'lista_id_nrec':([30,85,],[47,121,]),'expresion':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[49,71,72,76,83,97,98,99,100,122,123,124,125,126,127,128,129,130,131,132,76,152,152,191,]),'binaria':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'unaria':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,135,136,190,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'asg_ajson':([31,32,33,36,45,52,67,68,69,86,87,88,89,90,91,92,93,94,95,96,110,120,135,136,190,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,150,53,53,53,]),'lista_param':([36,],[74,]),'lista_param_rec':([36,110,],[75,142,]),'asg_propiedades':([70,171,],[101,182,]),'lista_arg':([73,],[107,]),'lista_arg_rec':([73,175,],[108,183,]),'acceso_propiedad_rec':([78,115,143,165,],[113,145,164,177,]),'def_ajson':([82,168,169,],[118,180,180,]),'bloque_llaves':([104,105,155,],[137,139,173,]),'def_propiedades':([119,186,],[147,189,]),'valor_asg_propiedad':([135,136,],[151,153,]),'otra_condicion':([137,],[154,]),'tipo':([140,163,168,169,],[158,176,179,179,]),'asg_propiedades_rec':([151,153,],[170,172,]),'valor_def_propiedad':([168,169,],[178,181,]),'def_propiedades_rec':([178,181,],[185,187,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','new_parser.py',31),
  ('axioma -> programa','axioma',1,'p_axioma','new_parser.py',36),
  ('axioma -> empty','axioma',1,'p_axioma','new_parser.py',37),
  ('programa -> bloque_programa','programa',1,'p_programa','new_parser.py',41),
  ('bloque_programa -> sentencia','bloque_programa',1,'p_bloque_programa','new_parser.py',45),
  ('bloque_programa -> sentencia bloque_programa','bloque_programa',2,'p_bloque_programa','new_parser.py',46),
  ('sentencia -> declaracion SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',52),
  ('sentencia -> asignacion SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',53),
  ('sentencia -> condicion','sentencia',1,'p_sentencia','new_parser.py',54),
  ('sentencia -> bucle','sentencia',1,'p_sentencia','new_parser.py',55),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','new_parser.py',56),
  ('sentencia -> declaracion_objeto SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',57),
  ('sentencia -> asignacion_objeto SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',58),
  ('sentencia -> function_call SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',59),
  ('expresion -> binaria','expresion',1,'p_expresion','new_parser.py',63),
  ('expresion -> unaria','expresion',1,'p_expresion','new_parser.py',64),
  ('expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE','expresion',3,'p_expresion','new_parser.py',65),
  ('expresion -> asg_ajson','expresion',1,'p_expresion','new_parser.py',66),
  ('binaria -> expresion PLUS expresion','binaria',3,'p_binaria_aritmetica1','new_parser.py',71),
  ('binaria -> expresion MINUS expresion','binaria',3,'p_binaria_aritmetica1','new_parser.py',72),
  ('binaria -> expresion TIMES expresion','binaria',3,'p_binaria_aritmetica2','new_parser.py',100),
  ('binaria -> expresion DIV expresion','binaria',3,'p_binaria_aritmetica2','new_parser.py',101),
  ('binaria -> expresion LT expresion','binaria',3,'p_binaria_booleana1','new_parser.py',129),
  ('binaria -> expresion GT expresion','binaria',3,'p_binaria_booleana1','new_parser.py',130),
  ('binaria -> expresion LE expresion','binaria',3,'p_binaria_booleana1','new_parser.py',131),
  ('binaria -> expresion GE expresion','binaria',3,'p_binaria_booleana1','new_parser.py',132),
  ('binaria -> expresion EQ expresion','binaria',3,'p_binaria_booleana2','new_parser.py',164),
  ('binaria -> expresion CONJUNCTION expresion','binaria',3,'p_binaria_conjunto','new_parser.py',188),
  ('binaria -> expresion DISJUNCTION expresion','binaria',3,'p_binaria_conjunto','new_parser.py',189),
  ('unaria -> PLUS expresion','unaria',2,'p_unaria','new_parser.py',207),
  ('unaria -> MINUS expresion','unaria',2,'p_unaria','new_parser.py',208),
  ('unaria -> NEG expresion','unaria',2,'p_unaria','new_parser.py',209),
  ('expresion -> ID','expresion',1,'p_expresion_identificador','new_parser.py',224),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','new_parser.py',233),
  ('expresion -> BIN','expresion',1,'p_expresion_entero','new_parser.py',234),
  ('expresion -> OCT','expresion',1,'p_expresion_entero','new_parser.py',235),
  ('expresion -> HEX','expresion',1,'p_expresion_entero','new_parser.py',236),
  ('expresion -> REAL','expresion',1,'p_expresion_real','new_parser.py',242),
  ('expresion -> NCIENT','expresion',1,'p_expresion_real','new_parser.py',243),
  ('expresion -> CHAR','expresion',1,'p_expresion_char','new_parser.py',249),
  ('expresion -> TR','expresion',1,'p_expresion_bool','new_parser.py',255),
  ('expresion -> FL','expresion',1,'p_expresion_bool','new_parser.py',256),
  ('expresion -> NULL','expresion',1,'p_expresion_nulo','new_parser.py',262),
  ('expresion -> function_call','expresion',1,'p_expresion_otra','new_parser.py',268),
  ('expresion -> acceso_propiedad','expresion',1,'p_expresion_otra','new_parser.py',269),
  ('acceso_propiedad -> ID DOT ID acceso_propiedad_rec','acceso_propiedad',4,'p_acceso_propiedad','new_parser.py',273),
  ('acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec','acceso_propiedad',5,'p_acceso_propiedad','new_parser.py',274),
  ('acceso_propiedad_rec -> <empty>','acceso_propiedad_rec',0,'p_acceso_propiedad_rec','new_parser.py',278),
  ('acceso_propiedad_rec -> DOT ID acceso_propiedad_rec','acceso_propiedad_rec',3,'p_acceso_propiedad_rec','new_parser.py',279),
  ('acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec','acceso_propiedad_rec',4,'p_acceso_propiedad_rec','new_parser.py',280),
  ('declaracion -> LET lista_id','declaracion',2,'p_declaracion','new_parser.py',284),
  ('declaracion -> LET lista_id_norm EQUAL expresion','declaracion',4,'p_declaracion','new_parser.py',285),
  ('lista_id_norm -> ID lista_id_nrec','lista_id_norm',2,'p_lista_id_norm','new_parser.py',304),
  ('lista_id_nrec -> <empty>','lista_id_nrec',0,'p_lista_id_nrec','new_parser.py',308),
  ('lista_id_nrec -> COMA ID lista_id_nrec','lista_id_nrec',3,'p_lista_id_nrec','new_parser.py',309),
  ('lista_id -> ID lista_id_rec','lista_id',2,'p_lista_identificador','new_parser.py',313),
  ('lista_id -> ID COLON ID lista_id_rec','lista_id',4,'p_lista_id_obj','new_parser.py',320),
  ('lista_id -> acceso_propiedad lista_id_rec','lista_id',2,'p_lista_id_obj','new_parser.py',321),
  ('lista_id_rec -> <empty>','lista_id_rec',0,'p_lista_id_rec','new_parser.py',325),
  ('lista_id_rec -> COMA ID lista_id_rec','lista_id_rec',3,'p_lista_id_rec','new_parser.py',326),
  ('lista_id_rec -> COMA ID COLON ID lista_id_rec','lista_id_rec',5,'p_lista_id_rec','new_parser.py',327),
  ('lista_id_rec -> acceso_propiedad lista_id_rec','lista_id_rec',2,'p_lista_id_rec','new_parser.py',328),
  ('asignacion -> lista_id EQUAL expresion','asignacion',3,'p_asignacion','new_parser.py',337),
  ('condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion','condicion',6,'p_condicion','new_parser.py',345),
  ('otra_condicion -> <empty>','otra_condicion',0,'p_otra_condicion','new_parser.py',354),
  ('otra_condicion -> ELSE bloque_llaves','otra_condicion',2,'p_otra_condicion','new_parser.py',355),
  ('bloque_llaves -> LLAVEA bloque_programa LLAVEC','bloque_llaves',3,'p_bloque_llaves','new_parser.py',361),
  ('bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves','bucle',5,'p_bucle','new_parser.py',366),
  ('tipo -> INT','tipo',1,'p_tipo','new_parser.py',376),
  ('tipo -> FLOAT','tipo',1,'p_tipo','new_parser.py',377),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','new_parser.py',378),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','new_parser.py',379),
  ('tipo -> ID','tipo',1,'p_tipo','new_parser.py',380),
  ('funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC','funcion',13,'p_funcion','new_parser.py',387),
  ('lista_arg -> <empty>','lista_arg',0,'p_lista_arg','new_parser.py',394),
  ('lista_arg -> lista_arg_rec','lista_arg',1,'p_lista_arg','new_parser.py',395),
  ('lista_arg_rec -> ID COLON tipo','lista_arg_rec',3,'p_lista_arg_rec','new_parser.py',399),
  ('lista_arg_rec -> ID COLON tipo COMA lista_arg_rec','lista_arg_rec',5,'p_lista_arg_rec','new_parser.py',400),
  ('function_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE','function_call',4,'p_function_call','new_parser.py',404),
  ('lista_param -> <empty>','lista_param',0,'p_lista_param','new_parser.py',408),
  ('lista_param -> lista_param_rec','lista_param',1,'p_lista_param','new_parser.py',409),
  ('lista_param_rec -> expresion COMA lista_param_rec','lista_param_rec',3,'p_lista_param_rec','new_parser.py',413),
  ('lista_param_rec -> expresion','lista_param_rec',1,'p_lista_param_rec','new_parser.py',414),
  ('declaracion_objeto -> TYPE ID EQUAL def_ajson','declaracion_objeto',4,'p_declaracion_objeto','new_parser.py',419),
  ('def_ajson -> LLAVEA def_propiedades LLAVEC','def_ajson',3,'p_def_ajson','new_parser.py',423),
  ('def_propiedades -> <empty>','def_propiedades',0,'p_def_propiedades','new_parser.py',429),
  ('def_propiedades -> ID COLON valor_def_propiedad def_propiedades_rec','def_propiedades',4,'p_def_propiedades','new_parser.py',430),
  ('def_propiedades -> STRING COLON valor_def_propiedad def_propiedades_rec','def_propiedades',4,'p_def_propiedades','new_parser.py',431),
  ('def_propiedades_rec -> COMA def_propiedades','def_propiedades_rec',2,'p_def_propiedades_rec','new_parser.py',435),
  ('def_propiedades_rec -> <empty>','def_propiedades_rec',0,'p_def_propiedades_rec','new_parser.py',436),
  ('valor_def_propiedad -> tipo','valor_def_propiedad',1,'p_valor_def_propiedad','new_parser.py',440),
  ('valor_def_propiedad -> def_ajson','valor_def_propiedad',1,'p_valor_def_propiedad','new_parser.py',441),
  ('asignacion_objeto -> LET ID COLON ID EQUAL asg_ajson','asignacion_objeto',6,'p_asignacion_objeto','new_parser.py',445),
  ('asg_ajson -> LLAVEA asg_propiedades LLAVEC','asg_ajson',3,'p_asg_ajson','new_parser.py',449),
  ('asg_propiedades -> <empty>','asg_propiedades',0,'p_asg_propiedades','new_parser.py',453),
  ('asg_propiedades -> ID COLON valor_asg_propiedad asg_propiedades_rec','asg_propiedades',4,'p_asg_propiedades','new_parser.py',454),
  ('asg_propiedades -> STRING COLON valor_asg_propiedad asg_propiedades_rec','asg_propiedades',4,'p_asg_propiedades','new_parser.py',455),
  ('asg_propiedades_rec -> COMA asg_propiedades','asg_propiedades_rec',2,'p_asg_propiedades_rec','new_parser.py',459),
  ('asg_propiedades_rec -> <empty>','asg_propiedades_rec',0,'p_asg_propiedades_rec','new_parser.py',460),
  ('valor_asg_propiedad -> expresion','valor_asg_propiedad',1,'p_valor_asg_propiedad','new_parser.py',464),
]
