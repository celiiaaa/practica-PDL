
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'axiomaleftDISJUNCTIONleftCONJUNCTIONnonassocEQLTGTLEGEleftPLUSMINUSleftTIMESDIVrightUPLUSUMINUSrightNEGBIN BOOLEAN BRACKETCLOSE BRACKETOPEN CHAR CHARACTER COLON COMA CONJUNCTION DISJUNCTION DIV DOT ELSE ENTERO EQ EQUAL FL FLOAT FUNCTION GE GT HEX ID IF INT LE LET LLAVEA LLAVEC LT MINUS NCIENT NEG NULL OCT PARENTHESISCLOSE PARENTHESISOPEN PLUS REAL RETURN SEMICOLON STRING TIMES TR TYPE WHILEempty :axioma : programa\n                  | emptyprograma : bloque_programabloque_programa : sentencia\n                           | sentencia bloque_programasentencia : declaracion SEMICOLON\n                     | asignacion SEMICOLON\n                     | condicion\n                     | bucle \n                     | funcion\n                     | declaracion_objeto SEMICOLON\n                     | asignacion_objeto SEMICOLON\n                     | function_call SEMICOLONexpresion : binaria\n                     | unaria\n                     | primaria\n                     | asg_ajsonbinaria : expresion PLUS expresion\n                   | expresion MINUS expresion\n                   | expresion TIMES expresion\n                   | expresion DIV expresion\n                   | expresion CONJUNCTION expresion\n                   | expresion DISJUNCTION expresion\n                   | expresion EQ expresion\n                   | expresion LT expresion\n                   | expresion GT expresion\n                   | expresion LE expresion\n                   | expresion GE expresionunaria : PLUS expresion %prec UPLUS\n                  | MINUS expresion %prec UMINUS\n                  | NEG expresionprimaria : literal\n                    | ID\n                    | PARENTHESISOPEN expresion PARENTHESISCLOSEliteral : ENTERO\n                   | REAL\n                   | BIN\n                   | OCT\n                   | NCIENT\n                   | HEX\n                   | CHAR\n                   | TR\n                   | FL\n                   | NULL\n                   | function_call\n                   | acceso_propiedadacceso_propiedad : ID DOT ID acceso_propiedad_rec\n                            | ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_recacceso_propiedad_rec : \n                                | DOT ID acceso_propiedad_rec\n                                | BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_recdeclaracion : LET lista_id\n                       | LET lista_id EQUAL expresionlista_id : ID\n                    | ID COMA lista_id\n                    | ID COLON ID COMA\n                    | ID COLON ID COMA lista_id\n                    | acceso_propiedadasignacion : lista_id EQUAL expresioncondicion : IF PARENTHESISOPEN expresion PARENTHESISCLOSE LLAVEA bloque_programa LLAVEC otra_condicionotra_condicion : \n                          | ELSE LLAVEA bloque_programa LLAVECbucle : WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE LLAVEA bloque_programa LLAVECtipo : INT\n                | FLOAT\n                | CHARACTER\n                | BOOLEAN\n                | IDfuncion : FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA bloque_programa RETURN expresion SEMICOLON LLAVEClista_arg : \n                     | lista_arg_reclista_arg_rec : ID COLON tipo\n                         | ID COLON tipo COMA lista_arg_recfunction_call : ID PARENTHESISOPEN lista_expresion PARENTHESISCLOSElista_expresion : \n                           | lista_expresion_reclista_expresion_rec : expresion COMA lista_expresion_rec\n                               | expresiondeclaracion_objeto : TYPE ID EQUAL def_ajsondef_ajson : LLAVEA propiedades LLAVECpropiedades : \n                       | ID COLON valor_propiedad propiedades_rec\n                       | STRING COLON valor_propiedad propiedades_recpropiedades_rec : COMA propiedades\n                           | valor_propiedad : tipo\n                           | def_ajsonasignacion_objeto : LET ID COLON ID EQUAL asg_ajsonasg_ajson : LLAVEA propiedades_asg LLAVECpropiedades_asg :\n                           | ID COLON valor_propiedad_asg propiedades_asg_rec\n                           | STRING COLON valor_propiedad_asg propiedades_asg_recpropiedades_asg_rec : COMA propiedades_asg\n                               | valor_propiedad_asg : expresion'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,9,10,22,23,24,25,26,27,161,162,171,183,186,],[-1,0,-2,-3,-4,-5,-9,-10,-11,-6,-7,-8,-12,-13,-14,-62,-64,-61,-63,-70,]),'LET':([0,5,8,9,10,23,24,25,26,27,128,129,161,162,171,174,178,183,186,],[14,14,-9,-10,-11,-7,-8,-12,-13,-14,14,14,-62,-64,-61,14,14,-63,-70,]),'IF':([0,5,8,9,10,23,24,25,26,27,128,129,161,162,171,174,178,183,186,],[16,16,-9,-10,-11,-7,-8,-12,-13,-14,16,16,-62,-64,-61,16,16,-63,-70,]),'WHILE':([0,5,8,9,10,23,24,25,26,27,128,129,161,162,171,174,178,183,186,],[17,17,-9,-10,-11,-7,-8,-12,-13,-14,17,17,-62,-64,-61,17,17,-63,-70,]),'FUNCTION':([0,5,8,9,10,23,24,25,26,27,128,129,161,162,171,174,178,183,186,],[18,18,-9,-10,-11,-7,-8,-12,-13,-14,18,18,-62,-64,-61,18,18,-63,-70,]),'TYPE':([0,5,8,9,10,23,24,25,26,27,128,129,161,162,171,174,178,183,186,],[20,20,-9,-10,-11,-7,-8,-12,-13,-14,20,20,-62,-64,-61,20,20,-63,-70,]),'ID':([0,5,8,9,10,14,18,20,23,24,25,26,27,30,31,32,34,35,36,37,40,41,47,48,49,52,53,68,80,81,82,83,84,85,86,87,88,89,90,104,105,106,111,126,127,128,129,130,152,156,157,159,161,162,163,171,174,176,178,182,183,186,],[19,19,-9,-10,-11,29,33,39,-7,-8,-12,-13,-14,51,51,51,51,72,74,75,51,79,51,51,51,51,96,100,51,51,51,51,51,51,51,51,51,51,51,51,72,134,138,51,51,19,19,146,146,146,146,96,-62,-64,100,-61,19,138,19,51,-63,-70,]),'LLAVEC':([5,8,9,10,22,23,24,25,26,27,43,44,45,46,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,75,91,92,93,95,103,107,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,137,141,142,143,144,145,146,148,149,150,151,153,154,155,158,159,160,161,162,165,166,167,168,169,170,171,175,176,177,180,181,183,185,186,],[-5,-9,-10,-11,-6,-7,-8,-12,-13,-14,-15,-16,-17,-18,-33,-34,-91,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-50,-30,-31,-32,125,-75,-48,-50,-82,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-35,-90,-50,-49,155,-95,-96,-95,161,162,-69,-65,-66,-67,-68,-51,-50,-81,-92,-91,-93,-62,-64,-52,-86,-87,-88,-86,-94,-61,-83,-82,-84,-85,183,-63,186,-70,]),'RETURN':([5,8,9,10,22,23,24,25,26,27,161,162,171,179,183,186,],[-5,-9,-10,-11,-6,-7,-8,-12,-13,-14,-62,-64,-61,182,-63,-70,]),'SEMICOLON':([6,7,11,12,13,21,28,29,42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,72,73,75,78,91,92,93,103,105,107,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,136,140,153,154,155,165,184,],[23,24,25,26,27,-59,-53,-55,-60,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-55,-56,-50,-54,-30,-31,-32,-75,-57,-48,-50,-80,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-35,-90,-58,-50,-49,-89,-51,-50,-81,-52,185,]),'EQUAL':([15,19,21,28,29,39,72,73,75,79,105,107,109,133,134,136,153,154,165,],[30,-55,-59,40,-55,77,-55,-56,-50,112,-57,-48,-50,-58,-50,-49,-51,-50,-52,]),'PARENTHESISOPEN':([16,17,19,30,31,32,33,34,40,47,48,49,51,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[31,32,34,52,52,52,68,52,52,52,52,52,34,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'COMA':([19,29,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,71,72,74,75,79,91,92,93,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,141,142,143,146,147,148,149,150,151,153,154,155,165,166,167,168,169,],[35,35,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,104,35,105,-50,105,-30,-31,-32,-75,-48,-50,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-35,-90,-50,-49,159,-96,159,-69,163,-65,-66,-67,-68,-51,-50,-81,-52,176,-87,-88,176,]),'COLON':([19,29,72,96,97,100,131,138,139,],[36,41,36,126,127,130,152,156,157,]),'DOT':([19,29,51,72,75,109,134,154,],[37,37,37,37,106,106,106,106,]),'BRACKETOPEN':([19,29,51,72,75,109,134,154,],[38,38,38,38,108,108,108,108,]),'PLUS':([30,31,32,34,40,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,104,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,136,142,153,154,165,182,184,],[47,47,47,47,47,80,-15,-16,-17,-18,47,47,47,-33,-34,47,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,80,80,80,-50,80,47,47,47,47,47,47,47,47,47,47,47,-30,-31,-32,80,-75,47,-48,-50,-19,-20,-21,-22,80,80,80,80,80,80,80,-35,-90,47,47,-50,-49,80,-51,-50,-52,47,80,]),'MINUS':([30,31,32,34,40,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,104,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,136,142,153,154,165,182,184,],[48,48,48,48,48,81,-15,-16,-17,-18,48,48,48,-33,-34,48,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,81,81,81,-50,81,48,48,48,48,48,48,48,48,48,48,48,-30,-31,-32,81,-75,48,-48,-50,-19,-20,-21,-22,81,81,81,81,81,81,81,-35,-90,48,48,-50,-49,81,-51,-50,-52,48,81,]),'NEG':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LLAVEA':([30,31,32,34,40,47,48,49,52,77,80,81,82,83,84,85,86,87,88,89,90,98,99,104,112,126,127,146,148,149,150,151,156,157,164,172,182,],[53,53,53,53,53,53,53,53,53,111,53,53,53,53,53,53,53,53,53,53,53,128,129,53,53,53,53,-69,-65,-66,-67,-68,111,111,174,178,53,]),'ENTERO':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'REAL':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'BIN':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OCT':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'NCIENT':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'HEX':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'CHAR':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'TR':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FL':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'NULL':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'PARENTHESISCLOSE':([34,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,91,92,93,94,101,102,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,132,134,136,146,147,148,149,150,151,153,154,165,173,],[-76,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,98,99,-71,103,-77,-79,-50,-30,-31,-32,124,131,-72,-75,-48,-50,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-35,-90,-78,-50,-49,-69,-73,-65,-66,-67,-68,-51,-50,-52,-74,]),'STRING':([38,53,108,111,159,176,],[76,97,135,139,97,139,]),'TIMES':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[82,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,82,82,82,-50,82,-30,-31,-32,82,-75,-48,-50,82,82,-21,-22,82,82,82,82,82,82,82,-35,-90,-50,-49,82,-51,-50,-52,82,]),'DIV':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[83,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,83,83,83,-50,83,-30,-31,-32,83,-75,-48,-50,83,83,-21,-22,83,83,83,83,83,83,83,-35,-90,-50,-49,83,-51,-50,-52,83,]),'CONJUNCTION':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[84,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,84,84,84,-50,84,-30,-31,-32,84,-75,-48,-50,-19,-20,-21,-22,-23,84,-25,-26,-27,-28,-29,-35,-90,-50,-49,84,-51,-50,-52,84,]),'DISJUNCTION':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[85,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,85,85,85,-50,85,-30,-31,-32,85,-75,-48,-50,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-35,-90,-50,-49,85,-51,-50,-52,85,]),'EQ':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[86,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,86,86,86,-50,86,-30,-31,-32,86,-75,-48,-50,-19,-20,-21,-22,86,86,None,None,None,None,None,-35,-90,-50,-49,86,-51,-50,-52,86,]),'LT':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[87,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,87,87,87,-50,87,-30,-31,-32,87,-75,-48,-50,-19,-20,-21,-22,87,87,None,None,None,None,None,-35,-90,-50,-49,87,-51,-50,-52,87,]),'GT':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[88,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,88,88,88,-50,88,-30,-31,-32,88,-75,-48,-50,-19,-20,-21,-22,88,88,None,None,None,None,None,-35,-90,-50,-49,88,-51,-50,-52,88,]),'LE':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[89,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,89,89,89,-50,89,-30,-31,-32,89,-75,-48,-50,-19,-20,-21,-22,89,89,None,None,None,None,None,-35,-90,-50,-49,89,-51,-50,-52,89,]),'GE':([42,43,44,45,46,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,78,91,92,93,94,103,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,134,136,142,153,154,165,184,],[90,-15,-16,-17,-18,-33,-34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,90,90,90,-50,90,-30,-31,-32,90,-75,-48,-50,-19,-20,-21,-22,90,90,None,None,None,None,None,-35,-90,-50,-49,90,-51,-50,-52,90,]),'BRACKETCLOSE':([76,135,],[109,154,]),'INT':([130,152,156,157,],[148,148,148,148,]),'FLOAT':([130,152,156,157,],[149,149,149,149,]),'CHARACTER':([130,152,156,157,],[150,150,150,150,]),'BOOLEAN':([130,152,156,157,],[151,151,151,151,]),'ELSE':([161,],[172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,],[1,]),'programa':([0,],[2,]),'empty':([0,],[3,]),'bloque_programa':([0,5,128,129,174,178,],[4,22,144,145,179,181,]),'sentencia':([0,5,128,129,174,178,],[5,5,5,5,5,5,]),'declaracion':([0,5,128,129,174,178,],[6,6,6,6,6,6,]),'asignacion':([0,5,128,129,174,178,],[7,7,7,7,7,7,]),'condicion':([0,5,128,129,174,178,],[8,8,8,8,8,8,]),'bucle':([0,5,128,129,174,178,],[9,9,9,9,9,9,]),'funcion':([0,5,128,129,174,178,],[10,10,10,10,10,10,]),'declaracion_objeto':([0,5,128,129,174,178,],[11,11,11,11,11,11,]),'asignacion_objeto':([0,5,128,129,174,178,],[12,12,12,12,12,12,]),'function_call':([0,5,30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,128,129,174,178,182,],[13,13,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,13,13,13,13,64,]),'lista_id':([0,5,14,35,105,128,129,174,178,],[15,15,28,73,133,15,15,15,15,]),'acceso_propiedad':([0,5,14,30,31,32,34,35,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,105,126,127,128,129,174,178,182,],[21,21,21,65,65,65,65,21,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,21,65,65,21,21,21,21,65,]),'expresion':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[42,66,67,71,78,91,92,93,94,113,114,115,116,117,118,119,120,121,122,123,71,142,142,184,]),'binaria':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'unaria':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'primaria':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'asg_ajson':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,112,126,127,182,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,140,46,46,46,]),'literal':([30,31,32,34,40,47,48,49,52,80,81,82,83,84,85,86,87,88,89,90,104,126,127,182,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'lista_expresion':([34,],[69,]),'lista_expresion_rec':([34,104,],[70,132,]),'propiedades_asg':([53,159,],[95,170,]),'lista_arg':([68,],[101,]),'lista_arg_rec':([68,163,],[102,173,]),'acceso_propiedad_rec':([75,109,134,154,],[107,136,153,165,]),'def_ajson':([77,156,157,],[110,168,168,]),'propiedades':([111,176,],[137,180,]),'valor_propiedad_asg':([126,127,],[141,143,]),'tipo':([130,152,156,157,],[147,164,167,167,]),'propiedades_asg_rec':([141,143,],[158,160,]),'valor_propiedad':([156,157,],[166,169,]),'otra_condicion':([161,],[171,]),'propiedades_rec':([166,169,],[175,177,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','new_parser.py',33),
  ('axioma -> programa','axioma',1,'p_axioma','new_parser.py',38),
  ('axioma -> empty','axioma',1,'p_axioma','new_parser.py',39),
  ('programa -> bloque_programa','programa',1,'p_programa','new_parser.py',43),
  ('bloque_programa -> sentencia','bloque_programa',1,'p_bloque_programa','new_parser.py',47),
  ('bloque_programa -> sentencia bloque_programa','bloque_programa',2,'p_bloque_programa','new_parser.py',48),
  ('sentencia -> declaracion SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',54),
  ('sentencia -> asignacion SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',55),
  ('sentencia -> condicion','sentencia',1,'p_sentencia','new_parser.py',56),
  ('sentencia -> bucle','sentencia',1,'p_sentencia','new_parser.py',57),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','new_parser.py',58),
  ('sentencia -> declaracion_objeto SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',59),
  ('sentencia -> asignacion_objeto SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',60),
  ('sentencia -> function_call SEMICOLON','sentencia',2,'p_sentencia','new_parser.py',61),
  ('expresion -> binaria','expresion',1,'p_expresion','new_parser.py',65),
  ('expresion -> unaria','expresion',1,'p_expresion','new_parser.py',66),
  ('expresion -> primaria','expresion',1,'p_expresion','new_parser.py',67),
  ('expresion -> asg_ajson','expresion',1,'p_expresion','new_parser.py',68),
  ('binaria -> expresion PLUS expresion','binaria',3,'p_binaria','new_parser.py',72),
  ('binaria -> expresion MINUS expresion','binaria',3,'p_binaria','new_parser.py',73),
  ('binaria -> expresion TIMES expresion','binaria',3,'p_binaria','new_parser.py',74),
  ('binaria -> expresion DIV expresion','binaria',3,'p_binaria','new_parser.py',75),
  ('binaria -> expresion CONJUNCTION expresion','binaria',3,'p_binaria','new_parser.py',76),
  ('binaria -> expresion DISJUNCTION expresion','binaria',3,'p_binaria','new_parser.py',77),
  ('binaria -> expresion EQ expresion','binaria',3,'p_binaria','new_parser.py',78),
  ('binaria -> expresion LT expresion','binaria',3,'p_binaria','new_parser.py',79),
  ('binaria -> expresion GT expresion','binaria',3,'p_binaria','new_parser.py',80),
  ('binaria -> expresion LE expresion','binaria',3,'p_binaria','new_parser.py',81),
  ('binaria -> expresion GE expresion','binaria',3,'p_binaria','new_parser.py',82),
  ('unaria -> PLUS expresion','unaria',2,'p_unaria','new_parser.py',87),
  ('unaria -> MINUS expresion','unaria',2,'p_unaria','new_parser.py',88),
  ('unaria -> NEG expresion','unaria',2,'p_unaria','new_parser.py',89),
  ('primaria -> literal','primaria',1,'p_primaria','new_parser.py',95),
  ('primaria -> ID','primaria',1,'p_primaria','new_parser.py',96),
  ('primaria -> PARENTHESISOPEN expresion PARENTHESISCLOSE','primaria',3,'p_primaria','new_parser.py',97),
  ('literal -> ENTERO','literal',1,'p_literal','new_parser.py',101),
  ('literal -> REAL','literal',1,'p_literal','new_parser.py',102),
  ('literal -> BIN','literal',1,'p_literal','new_parser.py',103),
  ('literal -> OCT','literal',1,'p_literal','new_parser.py',104),
  ('literal -> NCIENT','literal',1,'p_literal','new_parser.py',105),
  ('literal -> HEX','literal',1,'p_literal','new_parser.py',106),
  ('literal -> CHAR','literal',1,'p_literal','new_parser.py',107),
  ('literal -> TR','literal',1,'p_literal','new_parser.py',108),
  ('literal -> FL','literal',1,'p_literal','new_parser.py',109),
  ('literal -> NULL','literal',1,'p_literal','new_parser.py',110),
  ('literal -> function_call','literal',1,'p_literal','new_parser.py',111),
  ('literal -> acceso_propiedad','literal',1,'p_literal','new_parser.py',112),
  ('acceso_propiedad -> ID DOT ID acceso_propiedad_rec','acceso_propiedad',4,'p_acceso_propiedad','new_parser.py',116),
  ('acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec','acceso_propiedad',5,'p_acceso_propiedad','new_parser.py',117),
  ('acceso_propiedad_rec -> <empty>','acceso_propiedad_rec',0,'p_acceso_propiedad_rec','new_parser.py',121),
  ('acceso_propiedad_rec -> DOT ID acceso_propiedad_rec','acceso_propiedad_rec',3,'p_acceso_propiedad_rec','new_parser.py',122),
  ('acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec','acceso_propiedad_rec',4,'p_acceso_propiedad_rec','new_parser.py',123),
  ('declaracion -> LET lista_id','declaracion',2,'p_declaracion','new_parser.py',127),
  ('declaracion -> LET lista_id EQUAL expresion','declaracion',4,'p_declaracion','new_parser.py',128),
  ('lista_id -> ID','lista_id',1,'p_lista_id','new_parser.py',132),
  ('lista_id -> ID COMA lista_id','lista_id',3,'p_lista_id','new_parser.py',133),
  ('lista_id -> ID COLON ID COMA','lista_id',4,'p_lista_id','new_parser.py',134),
  ('lista_id -> ID COLON ID COMA lista_id','lista_id',5,'p_lista_id','new_parser.py',135),
  ('lista_id -> acceso_propiedad','lista_id',1,'p_lista_id','new_parser.py',136),
  ('asignacion -> lista_id EQUAL expresion','asignacion',3,'p_asignacion','new_parser.py',140),
  ('condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE LLAVEA bloque_programa LLAVEC otra_condicion','condicion',8,'p_condicion','new_parser.py',148),
  ('otra_condicion -> <empty>','otra_condicion',0,'p_otra_condicion','new_parser.py',152),
  ('otra_condicion -> ELSE LLAVEA bloque_programa LLAVEC','otra_condicion',4,'p_otra_condicion','new_parser.py',153),
  ('bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE LLAVEA bloque_programa LLAVEC','bucle',7,'p_bucle','new_parser.py',159),
  ('tipo -> INT','tipo',1,'p_tipo','new_parser.py',164),
  ('tipo -> FLOAT','tipo',1,'p_tipo','new_parser.py',165),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','new_parser.py',166),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','new_parser.py',167),
  ('tipo -> ID','tipo',1,'p_tipo','new_parser.py',168),
  ('funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA bloque_programa RETURN expresion SEMICOLON LLAVEC','funcion',13,'p_funcion','new_parser.py',175),
  ('lista_arg -> <empty>','lista_arg',0,'p_lista_arg','new_parser.py',179),
  ('lista_arg -> lista_arg_rec','lista_arg',1,'p_lista_arg','new_parser.py',180),
  ('lista_arg_rec -> ID COLON tipo','lista_arg_rec',3,'p_lista_arg_rec','new_parser.py',184),
  ('lista_arg_rec -> ID COLON tipo COMA lista_arg_rec','lista_arg_rec',5,'p_lista_arg_rec','new_parser.py',185),
  ('function_call -> ID PARENTHESISOPEN lista_expresion PARENTHESISCLOSE','function_call',4,'p_function_call','new_parser.py',189),
  ('lista_expresion -> <empty>','lista_expresion',0,'p_lista_expresion','new_parser.py',193),
  ('lista_expresion -> lista_expresion_rec','lista_expresion',1,'p_lista_expresion','new_parser.py',194),
  ('lista_expresion_rec -> expresion COMA lista_expresion_rec','lista_expresion_rec',3,'p_lista_expresion_rec','new_parser.py',198),
  ('lista_expresion_rec -> expresion','lista_expresion_rec',1,'p_lista_expresion_rec','new_parser.py',199),
  ('declaracion_objeto -> TYPE ID EQUAL def_ajson','declaracion_objeto',4,'p_declaracion_objeto','new_parser.py',204),
  ('def_ajson -> LLAVEA propiedades LLAVEC','def_ajson',3,'p_def_ajson','new_parser.py',208),
  ('propiedades -> <empty>','propiedades',0,'p_propiedades','new_parser.py',214),
  ('propiedades -> ID COLON valor_propiedad propiedades_rec','propiedades',4,'p_propiedades','new_parser.py',215),
  ('propiedades -> STRING COLON valor_propiedad propiedades_rec','propiedades',4,'p_propiedades','new_parser.py',216),
  ('propiedades_rec -> COMA propiedades','propiedades_rec',2,'p_propiedades_rec','new_parser.py',220),
  ('propiedades_rec -> <empty>','propiedades_rec',0,'p_propiedades_rec','new_parser.py',221),
  ('valor_propiedad -> tipo','valor_propiedad',1,'p_valor_propiedad','new_parser.py',225),
  ('valor_propiedad -> def_ajson','valor_propiedad',1,'p_valor_propiedad','new_parser.py',226),
  ('asignacion_objeto -> LET ID COLON ID EQUAL asg_ajson','asignacion_objeto',6,'p_asignacion_objeto','new_parser.py',230),
  ('asg_ajson -> LLAVEA propiedades_asg LLAVEC','asg_ajson',3,'p_asg_ajson','new_parser.py',234),
  ('propiedades_asg -> <empty>','propiedades_asg',0,'p_propiedades_asg','new_parser.py',238),
  ('propiedades_asg -> ID COLON valor_propiedad_asg propiedades_asg_rec','propiedades_asg',4,'p_propiedades_asg','new_parser.py',239),
  ('propiedades_asg -> STRING COLON valor_propiedad_asg propiedades_asg_rec','propiedades_asg',4,'p_propiedades_asg','new_parser.py',240),
  ('propiedades_asg_rec -> COMA propiedades_asg','propiedades_asg_rec',2,'p_propiedades_asg_rec','new_parser.py',244),
  ('propiedades_asg_rec -> <empty>','propiedades_asg_rec',0,'p_propiedades_asg_rec','new_parser.py',245),
  ('valor_propiedad_asg -> expresion','valor_propiedad_asg',1,'p_valor_propiedad_asg','new_parser.py',249),
]
