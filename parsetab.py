
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'axiomaleftDISJUNCTIONleftCONJUNCTIONnonassocEQnonassocLTGTLEGEleftPLUSMINUSleftTIMESDIVrightUPLUSUMINUSrightNEGrightEQUALBIN BOOLEAN BRACKETCLOSE BRACKETOPEN CHAR CHARACTER COLON COMA CONJUNCTION DISJUNCTION DIV DOT ELSE ENTERO EQ EQUAL FL FLOAT FUNCTION GE GT HEX ID IF INT LE LET LLAVEA LLAVEC LT MINUS NCIENT NEG NULL OCT PARENTHESISCLOSE PARENTHESISOPEN PLUS REAL RETURN SEMICOLON STRING TIMES TR TYPE WHILEempty :axioma : programa\n                  | emptyprograma : bloque_programabloque_programa : sentencia\n                           | sentencia bloque_programasentencia : declaracion SEMICOLON\n                     | asignacion SEMICOLON\n                     | declaracion_objeto SEMICOLON\n                     | asignacion_objeto SEMICOLON\n                     | funcion_call SEMICOLON\n                     | condicion\n                     | bucle\n                     | funciondeclaracion : LET lista_id\n                       | LET lista_id_mas EQUAL expresionlista_id : ID\n                    | ID COMA lista_idlista_id : ID COLON ID\n                    | ID COLON ID COMA lista_idasignacion : lista_id_mas EQUAL expresionlista_id_mas : ID\n                        | ID COMA lista_id_maslista_id_mas : acceso_propiedad\n                        | acceso_propiedad COMA lista_id_masexpresion : binaria\n                     | unaria\n                     | termino\n                     | PARENTHESISOPEN expresion PARENTHESISCLOSEbinaria : expresion PLUS expresion\n                   | expresion MINUS expresionbinaria : expresion TIMES expresion\n                   | expresion DIV expresionbinaria : expresion LT expresion\n                   | expresion GT expresion\n                   | expresion LE expresion\n                   | expresion GE expresionbinaria : expresion EQ expresionbinaria : expresion CONJUNCTION expresion\n                   | expresion DISJUNCTION expresionunaria : MINUS expresion %prec UMINUS\n                  | PLUS expresion %prec UPLUS\n                  | NEG expresiontermino : IDtermino : ENTERO\n                   | BIN\n                   | OCT\n                   | HEXtermino : REAL\n                   | NCIENTtermino : CHARtermino : TR\n                   | FLtermino : NULLtermino : acceso_propiedadtermino : funcion_calltermino : objeto_asgcondicion : IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicionotra_condicion :\n                          | ELSE bloque_llavesbucle : WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llavesbloque_llaves : LLAVEA bloque_programa LLAVECtipo : INT\n                | FLOAT\n                | CHARACTER\n                | BOOLEANtipo : IDfuncion : FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEClista_arg :\n                     | lista_arg_reclista_arg_rec : ID COLON tipo\n                         | ID COLON tipo COMA lista_arg_recfuncion_call : ID PARENTHESISOPEN lista_param PARENTHESISCLOSElista_param : \n                       | lista_param_reclista_param_rec : expresion\n                           | expresion COMA lista_param_recdeclaracion_objeto : TYPE ID EQUAL objeto_decobjeto_dec : LLAVEA propiedades_dec LLAVECpropiedades_dec : \n                           | propiedad_dec\n                           | propiedad_dec COMA propiedades_decpropiedad_dec : ID COLON tipo\n                         | STRING COLON tipopropiedad_dec : ID COLON objeto_dec\n                         | STRING COLON objeto_decasignacion_objeto : LET ID COLON ID EQUAL objeto_asgobjeto_asg : LLAVEA propiedades_asg LLAVECpropiedades_asg : \n                           | propiedad_asg\n                           | propiedad_asg COMA propiedades_asgpropiedad_asg : ID COLON expresion\n                         | STRING COLON expresionacceso_propiedad : ID DOT ID acceso_propiedad_rec\n                            | ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_recacceso_propiedad_rec : \n                                | DOT ID acceso_propiedad_rec\n                                | BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,11,12,13,22,23,24,25,26,27,142,144,160,177,178,187,],[-1,0,-2,-3,-4,-5,-12,-13,-14,-6,-7,-8,-9,-10,-11,-59,-61,-58,-60,-62,-68,]),'LET':([0,5,11,12,13,23,24,25,26,27,142,143,144,160,177,178,182,187,],[14,14,-12,-13,-14,-7,-8,-9,-10,-11,-59,14,-61,-58,-60,-62,14,-68,]),'TYPE':([0,5,11,12,13,23,24,25,26,27,142,143,144,160,177,178,182,187,],[16,16,-12,-13,-14,-7,-8,-9,-10,-11,-59,16,-61,-58,-60,-62,16,-68,]),'ID':([0,5,11,12,13,14,16,20,23,24,25,26,27,31,33,34,35,37,38,40,41,42,43,48,49,50,51,66,77,83,84,85,86,87,88,89,90,91,92,93,103,105,106,116,117,131,132,133,142,143,144,145,155,156,157,160,169,170,177,178,179,182,184,187,],[17,17,-12,-13,-14,30,32,39,-7,-8,-9,-10,-11,52,52,71,73,52,52,71,52,80,81,52,52,52,52,100,112,52,52,52,52,52,52,52,52,52,52,52,136,52,139,148,150,100,52,52,-59,17,-61,163,136,163,163,-58,163,148,-60,-62,112,17,52,-68,]),'IF':([0,5,11,12,13,23,24,25,26,27,142,143,144,160,177,178,182,187,],[18,18,-12,-13,-14,-7,-8,-9,-10,-11,-59,18,-61,-58,-60,-62,18,-68,]),'WHILE':([0,5,11,12,13,23,24,25,26,27,142,143,144,160,177,178,182,187,],[19,19,-12,-13,-14,-7,-8,-9,-10,-11,-59,19,-61,-58,-60,-62,19,-68,]),'FUNCTION':([0,5,11,12,13,23,24,25,26,27,142,143,144,160,177,178,182,187,],[20,20,-12,-13,-14,-7,-8,-9,-10,-11,-59,20,-61,-58,-60,-62,20,-68,]),'RETURN':([2,3,4,5,11,12,13,22,23,24,25,26,27,142,144,160,177,178,182,183,187,],[-2,-3,-4,-5,-12,-13,-14,-6,-7,-8,-9,-10,-11,-59,-61,-58,-60,-62,-1,184,-68,]),'LLAVEC':([5,11,12,13,22,23,24,25,26,27,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,95,96,97,98,99,103,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,139,141,142,144,151,152,153,154,155,158,159,160,162,163,165,166,167,168,171,172,173,174,175,176,177,178,186,187,],[-5,-12,-13,-14,-6,-7,-8,-9,-10,-11,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-89,-96,-42,-41,-43,130,-90,-80,-73,-94,-96,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-29,-88,-89,154,-81,-96,-95,-59,-61,-91,-92,-93,-79,-80,-97,-96,-58,178,-67,-63,-64,-65,-66,-82,-83,-85,-84,-86,-98,-60,-62,187,-68,]),'SEMICOLON':([6,7,8,9,10,28,30,44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,73,79,80,81,82,95,96,97,102,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,147,148,149,150,154,158,159,176,185,],[23,24,25,26,27,-15,-17,-21,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-96,-16,-19,-17,-18,-42,-41,-43,-78,-73,-94,-96,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-29,-88,-96,-95,-87,-17,-20,-19,-79,-97,-96,-98,186,]),'EQUAL':([15,17,21,29,30,32,71,72,73,78,80,81,107,109,139,141,158,159,176,],[31,-22,-24,41,-22,67,-22,-23,-96,-25,115,-22,-94,-96,-96,-95,-97,-96,-98,]),'PARENTHESISOPEN':([17,18,19,31,33,37,38,39,41,48,49,50,51,52,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[33,37,38,48,48,48,48,77,48,48,48,48,48,33,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'COMA':([17,21,30,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,73,80,81,95,96,97,99,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,135,139,141,148,150,152,153,154,158,159,163,164,165,166,167,168,172,173,174,175,176,],[34,40,43,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,105,34,-96,116,43,-42,-41,-43,131,-73,-94,-96,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-29,-88,155,-96,-95,170,116,-92,-93,-79,-97,-96,-67,179,-63,-64,-65,-66,-83,-85,-84,-86,-98,]),'DOT':([17,30,52,71,73,81,109,139,159,],[35,35,35,35,106,35,106,106,106,]),'BRACKETOPEN':([17,30,52,71,73,81,109,139,159,],[36,36,36,36,108,36,108,108,108,]),'COLON':([30,81,100,101,112,136,137,146,148,],[42,117,132,133,145,156,157,169,117,]),'MINUS':([31,33,37,38,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,139,141,152,153,158,159,176,184,185,],[50,50,50,50,50,84,-26,-27,-28,50,50,50,50,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,84,-96,84,84,84,50,50,50,50,50,50,50,50,50,50,50,84,-42,-41,-43,-73,50,-94,-96,-30,-31,-32,-33,84,84,84,84,84,84,84,-29,-88,50,50,-96,-95,84,84,-97,-96,-98,50,84,]),'PLUS':([31,33,37,38,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,139,141,152,153,158,159,176,184,185,],[49,49,49,49,49,83,-26,-27,-28,49,49,49,49,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,83,-96,83,83,83,49,49,49,49,49,49,49,49,49,49,49,83,-42,-41,-43,-73,49,-94,-96,-30,-31,-32,-33,83,83,83,83,83,83,83,-29,-88,49,49,-96,-95,83,83,-97,-96,-98,49,83,]),'NEG':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ENTERO':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'BIN':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'OCT':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'HEX':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'REAL':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'NCIENT':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'CHAR':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'TR':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FL':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'NULL':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LLAVEA':([31,33,37,38,41,48,49,50,51,67,83,84,85,86,87,88,89,90,91,92,93,105,110,111,115,132,133,156,157,161,163,165,166,167,168,180,184,],[66,66,66,66,66,66,66,66,66,103,66,66,66,66,66,66,66,66,66,66,66,66,143,143,66,66,66,103,103,143,-67,-63,-64,-65,-66,182,66,]),'PARENTHESISCLOSE':([33,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,73,75,76,77,94,95,96,97,104,107,109,113,114,118,119,120,121,122,123,124,125,126,127,128,129,130,138,139,141,158,159,163,164,165,166,167,168,176,181,],[-74,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,104,-75,-76,-96,110,111,-69,129,-42,-41,-43,-73,-94,-96,146,-70,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-29,-88,-77,-96,-95,-97,-96,-67,-71,-63,-64,-65,-66,-98,-72,]),'STRING':([36,66,103,108,131,155,],[74,101,137,140,101,137,]),'TIMES':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[85,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,85,-96,85,85,85,85,-42,-41,-43,-73,-94,-96,85,85,-32,-33,85,85,85,85,85,85,85,-29,-88,-96,-95,85,85,-97,-96,-98,85,]),'DIV':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[86,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,86,-96,86,86,86,86,-42,-41,-43,-73,-94,-96,86,86,-32,-33,86,86,86,86,86,86,86,-29,-88,-96,-95,86,86,-97,-96,-98,86,]),'LT':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[87,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,87,-96,87,87,87,87,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,None,None,None,None,87,87,87,-29,-88,-96,-95,87,87,-97,-96,-98,87,]),'GT':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[88,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,88,-96,88,88,88,88,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,None,None,None,None,88,88,88,-29,-88,-96,-95,88,88,-97,-96,-98,88,]),'LE':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[89,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,89,-96,89,89,89,89,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,None,None,None,None,89,89,89,-29,-88,-96,-95,89,89,-97,-96,-98,89,]),'GE':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[90,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,90,-96,90,90,90,90,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,None,None,None,None,90,90,90,-29,-88,-96,-95,90,90,-97,-96,-98,90,]),'EQ':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[91,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,91,-96,91,91,91,91,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,-34,-35,-36,-37,None,91,91,-29,-88,-96,-95,91,91,-97,-96,-98,91,]),'CONJUNCTION':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[92,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,92,-96,92,92,92,92,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,92,-29,-88,-96,-95,92,92,-97,-96,-98,92,]),'DISJUNCTION':([44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,75,76,79,94,95,96,97,104,107,109,118,119,120,121,122,123,124,125,126,127,128,129,130,139,141,152,153,158,159,176,185,],[93,-26,-27,-28,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,93,-96,93,93,93,93,-42,-41,-43,-73,-94,-96,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-29,-88,-96,-95,93,93,-97,-96,-98,93,]),'BRACKETCLOSE':([74,140,],[109,159,]),'ELSE':([142,178,],[161,-62,]),'INT':([145,156,157,169,],[165,165,165,165,]),'FLOAT':([145,156,157,169,],[166,166,166,166,]),'CHARACTER':([145,156,157,169,],[167,167,167,167,]),'BOOLEAN':([145,156,157,169,],[168,168,168,168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,182,],[1,183,]),'programa':([0,182,],[2,2,]),'empty':([0,182,],[3,3,]),'bloque_programa':([0,5,143,182,],[4,22,162,4,]),'sentencia':([0,5,143,182,],[5,5,5,5,]),'declaracion':([0,5,143,182,],[6,6,6,6,]),'asignacion':([0,5,143,182,],[7,7,7,7,]),'declaracion_objeto':([0,5,143,182,],[8,8,8,8,]),'asignacion_objeto':([0,5,143,182,],[9,9,9,9,]),'funcion_call':([0,5,31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,143,182,184,],[10,10,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,10,10,64,]),'condicion':([0,5,143,182,],[11,11,11,11,]),'bucle':([0,5,143,182,],[12,12,12,12,]),'funcion':([0,5,143,182,],[13,13,13,13,]),'lista_id_mas':([0,5,14,34,40,43,143,182,],[15,15,29,72,78,72,15,15,]),'acceso_propiedad':([0,5,14,31,33,34,37,38,40,41,43,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,143,182,184,],[21,21,21,63,63,21,63,63,21,63,21,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,21,21,63,]),'lista_id':([14,43,116,170,],[28,82,149,82,]),'expresion':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[44,70,75,76,79,94,95,96,97,118,119,120,121,122,123,124,125,126,127,128,70,152,153,185,]),'binaria':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'unaria':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'termino':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,132,133,184,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'objeto_asg':([31,33,37,38,41,48,49,50,51,83,84,85,86,87,88,89,90,91,92,93,105,115,132,133,184,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,147,65,65,65,]),'lista_param':([33,],[68,]),'lista_param_rec':([33,105,],[69,138,]),'propiedades_asg':([66,131,],[98,151,]),'propiedad_asg':([66,131,],[99,99,]),'objeto_dec':([67,156,157,],[102,173,175,]),'acceso_propiedad_rec':([73,109,139,159,],[107,141,158,176,]),'lista_arg':([77,],[113,]),'lista_arg_rec':([77,179,],[114,181,]),'propiedades_dec':([103,155,],[134,171,]),'propiedad_dec':([103,155,],[135,135,]),'bloque_llaves':([110,111,161,],[142,144,177,]),'otra_condicion':([142,],[160,]),'tipo':([145,156,157,169,],[164,172,174,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','newparser.py',37),
  ('axioma -> programa','axioma',1,'p_axioma','newparser.py',42),
  ('axioma -> empty','axioma',1,'p_axioma','newparser.py',43),
  ('programa -> bloque_programa','programa',1,'p_programa','newparser.py',48),
  ('bloque_programa -> sentencia','bloque_programa',1,'p_bloque_programa','newparser.py',53),
  ('bloque_programa -> sentencia bloque_programa','bloque_programa',2,'p_bloque_programa','newparser.py',54),
  ('sentencia -> declaracion SEMICOLON','sentencia',2,'p_sentencia','newparser.py',64),
  ('sentencia -> asignacion SEMICOLON','sentencia',2,'p_sentencia','newparser.py',65),
  ('sentencia -> declaracion_objeto SEMICOLON','sentencia',2,'p_sentencia','newparser.py',66),
  ('sentencia -> asignacion_objeto SEMICOLON','sentencia',2,'p_sentencia','newparser.py',67),
  ('sentencia -> funcion_call SEMICOLON','sentencia',2,'p_sentencia','newparser.py',68),
  ('sentencia -> condicion','sentencia',1,'p_sentencia','newparser.py',69),
  ('sentencia -> bucle','sentencia',1,'p_sentencia','newparser.py',70),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','newparser.py',71),
  ('declaracion -> LET lista_id','declaracion',2,'p_declaracion','newparser.py',83),
  ('declaracion -> LET lista_id_mas EQUAL expresion','declaracion',4,'p_declaracion','newparser.py',84),
  ('lista_id -> ID','lista_id',1,'p_lista_id','newparser.py',107),
  ('lista_id -> ID COMA lista_id','lista_id',3,'p_lista_id','newparser.py',108),
  ('lista_id -> ID COLON ID','lista_id',3,'p_lista_id2','newparser.py',119),
  ('lista_id -> ID COLON ID COMA lista_id','lista_id',5,'p_lista_id2','newparser.py',120),
  ('asignacion -> lista_id_mas EQUAL expresion','asignacion',3,'p_asignacion','newparser.py',132),
  ('lista_id_mas -> ID','lista_id_mas',1,'p_lista_id_mas','newparser.py',144),
  ('lista_id_mas -> ID COMA lista_id_mas','lista_id_mas',3,'p_lista_id_mas','newparser.py',145),
  ('lista_id_mas -> acceso_propiedad','lista_id_mas',1,'p_lista_id_mas2','newparser.py',153),
  ('lista_id_mas -> acceso_propiedad COMA lista_id_mas','lista_id_mas',3,'p_lista_id_mas2','newparser.py',154),
  ('expresion -> binaria','expresion',1,'p_expresion','newparser.py',165),
  ('expresion -> unaria','expresion',1,'p_expresion','newparser.py',166),
  ('expresion -> termino','expresion',1,'p_expresion','newparser.py',167),
  ('expresion -> PARENTHESISOPEN expresion PARENTHESISCLOSE','expresion',3,'p_expresion','newparser.py',168),
  ('binaria -> expresion PLUS expresion','binaria',3,'p_binaria_aritmetica1','newparser.py',177),
  ('binaria -> expresion MINUS expresion','binaria',3,'p_binaria_aritmetica1','newparser.py',178),
  ('binaria -> expresion TIMES expresion','binaria',3,'p_binaria_aritmetica2','newparser.py',239),
  ('binaria -> expresion DIV expresion','binaria',3,'p_binaria_aritmetica2','newparser.py',240),
  ('binaria -> expresion LT expresion','binaria',3,'p_binaria_booleana1','newparser.py',271),
  ('binaria -> expresion GT expresion','binaria',3,'p_binaria_booleana1','newparser.py',272),
  ('binaria -> expresion LE expresion','binaria',3,'p_binaria_booleana1','newparser.py',273),
  ('binaria -> expresion GE expresion','binaria',3,'p_binaria_booleana1','newparser.py',274),
  ('binaria -> expresion EQ expresion','binaria',3,'p_binaria_booleana2','newparser.py',308),
  ('binaria -> expresion CONJUNCTION expresion','binaria',3,'p_binaria_conjunto','newparser.py',340),
  ('binaria -> expresion DISJUNCTION expresion','binaria',3,'p_binaria_conjunto','newparser.py',341),
  ('unaria -> MINUS expresion','unaria',2,'p_unaria','newparser.py',359),
  ('unaria -> PLUS expresion','unaria',2,'p_unaria','newparser.py',360),
  ('unaria -> NEG expresion','unaria',2,'p_unaria','newparser.py',361),
  ('termino -> ID','termino',1,'p_termino_identificador','newparser.py',380),
  ('termino -> ENTERO','termino',1,'p_termino_entero','newparser.py',391),
  ('termino -> BIN','termino',1,'p_termino_entero','newparser.py',392),
  ('termino -> OCT','termino',1,'p_termino_entero','newparser.py',393),
  ('termino -> HEX','termino',1,'p_termino_entero','newparser.py',394),
  ('termino -> REAL','termino',1,'p_termino_real','newparser.py',399),
  ('termino -> NCIENT','termino',1,'p_termino_real','newparser.py',400),
  ('termino -> CHAR','termino',1,'p_termino_caracter','newparser.py',405),
  ('termino -> TR','termino',1,'p_termino_booleano','newparser.py',410),
  ('termino -> FL','termino',1,'p_termino_booleano','newparser.py',411),
  ('termino -> NULL','termino',1,'p_termino_nulo','newparser.py',416),
  ('termino -> acceso_propiedad','termino',1,'p_termino_propiedad','newparser.py',421),
  ('termino -> funcion_call','termino',1,'p_termino_llamada','newparser.py',426),
  ('termino -> objeto_asg','termino',1,'p_termino_objeto','newparser.py',431),
  ('condicion -> IF PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves otra_condicion','condicion',6,'p_condicion','newparser.py',443),
  ('otra_condicion -> <empty>','otra_condicion',0,'p_otra_condicion','newparser.py',452),
  ('otra_condicion -> ELSE bloque_llaves','otra_condicion',2,'p_otra_condicion','newparser.py',453),
  ('bucle -> WHILE PARENTHESISOPEN expresion PARENTHESISCLOSE bloque_llaves','bucle',5,'p_bucle','newparser.py',462),
  ('bloque_llaves -> LLAVEA bloque_programa LLAVEC','bloque_llaves',3,'p_bloque_llaves','newparser.py',470),
  ('tipo -> INT','tipo',1,'p_tipo','newparser.py',478),
  ('tipo -> FLOAT','tipo',1,'p_tipo','newparser.py',479),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','newparser.py',480),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','newparser.py',481),
  ('tipo -> ID','tipo',1,'p_tipo_objeto','newparser.py',492),
  ('funcion -> FUNCTION ID PARENTHESISOPEN lista_arg PARENTHESISCLOSE COLON tipo LLAVEA axioma RETURN expresion SEMICOLON LLAVEC','funcion',13,'p_funcion','newparser.py',503),
  ('lista_arg -> <empty>','lista_arg',0,'p_lista_arg','newparser.py',525),
  ('lista_arg -> lista_arg_rec','lista_arg',1,'p_lista_arg','newparser.py',526),
  ('lista_arg_rec -> ID COLON tipo','lista_arg_rec',3,'p_lista_arg_rec','newparser.py',547),
  ('lista_arg_rec -> ID COLON tipo COMA lista_arg_rec','lista_arg_rec',5,'p_lista_arg_rec','newparser.py',548),
  ('funcion_call -> ID PARENTHESISOPEN lista_param PARENTHESISCLOSE','funcion_call',4,'p_funcion_call','newparser.py',557),
  ('lista_param -> <empty>','lista_param',0,'p_lista_param','newparser.py',591),
  ('lista_param -> lista_param_rec','lista_param',1,'p_lista_param','newparser.py',592),
  ('lista_param_rec -> expresion','lista_param_rec',1,'p_lista_param_rec','newparser.py',600),
  ('lista_param_rec -> expresion COMA lista_param_rec','lista_param_rec',3,'p_lista_param_rec','newparser.py',601),
  ('declaracion_objeto -> TYPE ID EQUAL objeto_dec','declaracion_objeto',4,'p_declaracion_objeto','newparser.py',612),
  ('objeto_dec -> LLAVEA propiedades_dec LLAVEC','objeto_dec',3,'p_objeto_dec','newparser.py',626),
  ('propiedades_dec -> <empty>','propiedades_dec',0,'p_propiedades_dec','newparser.py',638),
  ('propiedades_dec -> propiedad_dec','propiedades_dec',1,'p_propiedades_dec','newparser.py',639),
  ('propiedades_dec -> propiedad_dec COMA propiedades_dec','propiedades_dec',3,'p_propiedades_dec','newparser.py',640),
  ('propiedad_dec -> ID COLON tipo','propiedad_dec',3,'p_propiedad_dec','newparser.py',650),
  ('propiedad_dec -> STRING COLON tipo','propiedad_dec',3,'p_propiedad_dec','newparser.py',651),
  ('propiedad_dec -> ID COLON objeto_dec','propiedad_dec',3,'p_propeidad_dec2','newparser.py',660),
  ('propiedad_dec -> STRING COLON objeto_dec','propiedad_dec',3,'p_propeidad_dec2','newparser.py',661),
  ('asignacion_objeto -> LET ID COLON ID EQUAL objeto_asg','asignacion_objeto',6,'p_asignacion_objeto','newparser.py',667),
  ('objeto_asg -> LLAVEA propiedades_asg LLAVEC','objeto_asg',3,'p_objeto_asg','newparser.py',692),
  ('propiedades_asg -> <empty>','propiedades_asg',0,'p_propiedades_asg','newparser.py',704),
  ('propiedades_asg -> propiedad_asg','propiedades_asg',1,'p_propiedades_asg','newparser.py',705),
  ('propiedades_asg -> propiedad_asg COMA propiedades_asg','propiedades_asg',3,'p_propiedades_asg','newparser.py',706),
  ('propiedad_asg -> ID COLON expresion','propiedad_asg',3,'p_propiedad_asg','newparser.py',716),
  ('propiedad_asg -> STRING COLON expresion','propiedad_asg',3,'p_propiedad_asg','newparser.py',717),
  ('acceso_propiedad -> ID DOT ID acceso_propiedad_rec','acceso_propiedad',4,'p_acceso_propiedad','newparser.py',727),
  ('acceso_propiedad -> ID BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec','acceso_propiedad',5,'p_acceso_propiedad','newparser.py',728),
  ('acceso_propiedad_rec -> <empty>','acceso_propiedad_rec',0,'p_acceso_propiedad_rec','newparser.py',736),
  ('acceso_propiedad_rec -> DOT ID acceso_propiedad_rec','acceso_propiedad_rec',3,'p_acceso_propiedad_rec','newparser.py',737),
  ('acceso_propiedad_rec -> BRACKETOPEN STRING BRACKETCLOSE acceso_propiedad_rec','acceso_propiedad_rec',4,'p_acceso_propiedad_rec','newparser.py',738),
]
