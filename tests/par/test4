// TEST4 PARSER: FUNCIONES

// Localidad de funciones
let a = 0.9 + 0.9;

// Funcion con resta de parametros locales
function resta(a: int, b: character): character {
    a = a - b;
    return a;
}

function suma(a: int, b: int): int {
    let fuga = 1 * 2;
    return fuga;
}

function mod(a: int, b: int): int {
    while (a >= b) {
        a = b - a;
        if (a == b) {
            a = 0;
        }
    }
    return a;
}

function greatest_common_divisor(a: int, b: int): int {
    let temp;
    while (!(b == 0)) {
        temp = b;
        b = mod(a, b);
        a = temp;
    }
    return temp;
}

/* Funciones con objetos */
type Point = {x: int, y: int};


function suma_puntos(p1: int, p2: int): int {
    return 4;
}

function get_point_after_jump(point: Point): Point {
    return point;
}

function get_point_after_jump2(point: Point, point2:Point): Point {
    type Point3D = {x: int, y: int, z: int};
    return {x: 1, y:  1};
}

// Llamadas a funciones
let p = 1 + a;
let nada = null;
let suma2 = suma(1, 9, 0);
let rest = resta(1, 'a');
let otro: Point = {x: 1, y: 9};
let point = get_point_after_jump2(otro, otro);



